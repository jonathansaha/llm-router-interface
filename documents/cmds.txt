Nokia Service Router Linux
Command Quick Reference, Release R20.6 

Network-instance route table show commands

System show commands

• show network-instance route-table summary

• show system application

This quick reference provides a summary of commonly use SR Linux 
commands and debugging strategies.

shows a summary of IPv4/IPv6 route tables

• show network-instance route-table all

Hardware show commands

• show platform

shows all route table details (prefix, ID, active status, owner, metric, next-hop type/ID, etc.) for 
the specified network instance

Network-instance protocol show commands

shows modules deployed, administrative and operational state, and the date/time the module type 

was last changed

• show platform environment

shows modules deployed, administrative and operational state, and temperature

• show platform [control|fabric|fan-tray|linecard|power-supply]

shows specific modules deployed

• show platform [redundancy|resource-monitoring]

shows platform resource usage and redundancy

• show network-instance <protocol name> summary

shows a summary of the specified protocol status

• show network-instance <instance name> protocols bgp 

neighbor

shows BGP neighbors for all peer addresses for the specified network instance

• show network-instance <instance name> protocols bgp 
neighbor <neighbor IP> [advertised-routes|received-
routes|detail]

shows the name, state, and version of currently running applications

• show system logging

shows log names, type, and directory

• show system aaa authentication session <session id>

shows AAA authentication sessions report

• show system lldp neighbor interface <interface name>

shows LLDP neighbor interface details

• show system sflow status

shows sFlow status

Debugging - view log messages

View the default log messages:

1. From the CLI, enter bash mode and use the cat command to view 

Version show commands

• show version

shows current software version and chassis type

Interface show commands

• show interface

shows summary details for all interfaces and subinterfaces

• show interface <interface name>

shows summary details for the specified interface

shows additional detail for a specified BGP neighbor IP

• show network-instance <instance name> protocols bgp routes 

{ipv4|ipv6} summary

shows the BGP route report for the specified network instance

the default log messages:

bash cat /var/log/srlinux/buffer/messages
2. To exit bash and return to the CLI, type: exit

ACL show commands

• show acl summary

shows a summary of configured ACLs

• show acl {ipv4-filter|ipv6-filter} <acl name> 

shows details for a specified ACL

Nokia is a registered trademark of Nokia Corporation. Other products and company names 
mentioned herein may be trademarks or tradenames of their respective owners. The information 
presented is subject to change without notice. No responsibility is assumed for inaccuracies 
contained herein. Copyright © 2020 Nokia. 

The registered trademark Linux® is used pursuant to a sublicense from the Linux Foundation, the 
exclusive licensee of Linus Torvalds, owner of the mark on a worldwide basis.

3HE 16121 AAAA TQZZA 01

July 2020

Debugging - trace-options

Trace options provide additional debug capabilities. When enabled 
beneath a protocol, messages log to the debug priority under the 
corresponding subsystem.

Enable trace-options:

1. network-instance <name> protocols <type> trace-options flag 

<flag type>
For example: network-instance default protocols bgp 
trace-options flag keepalive

View where trace-options are enabled:

1.

info from state network-instance default protocols bgp trace-
options

2.

info from state network-instance system logging 

Configure log location example - (send to a console using messages 
sourced from bgp with a severity of “debug”):

1. system logging <send to location> subsystem <name> priority 

<type> <value in brackets>
For example: system logging console subsystem bgp 
priority match-exact [debug]

Nokia Service Router Linux
7220 Interconnect Router
7250 Interconnect Router
Release 24.10

Advanced Solutions Guide

3HE 20952 AAAA TQZZA
Edition: 01
November 2024

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

Nokia is committed to diversity and inclusion. We are continuously reviewing our customer
documentation and consulting with standards bodies to ensure that terminology is inclusive and
aligned with the industry. Our future customer documentation will be updated accordingly.

This document includes Nokia proprietary and confidential information, which may not be distributed
or disclosed to any third parties without the prior written consent of Nokia.

This document is intended for use by Nokia’s customers (“You”/”Your”) in connection with a product
purchased or licensed from any company within Nokia Group of Companies. Use this document
as agreed. You agree to notify Nokia of any errors you may find in this document; however, should
you elect to use this document for any purpose(s) for which it is not intended, You understand and
warrant that any determinations You may make or actions You may take will be based upon Your
independent judgment and analysis of the content of this document.

Nokia reserves the right to make changes to this document without notice. At all times, the
controlling version is the one available on Nokia’s site.

No part of this document may be modified.

NO WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT
LIMITED TO ANY WARRANTY OF AVAILABILITY, ACCURACY, RELIABILITY, TITLE, NON-
INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, IS MADE
IN RELATION TO THE CONTENT OF THIS DOCUMENT. IN NO EVENT WILL NOKIA BE LIABLE
FOR ANY DAMAGES, INCLUDING BUT NOT LIMITED TO SPECIAL, DIRECT, INDIRECT,
INCIDENTAL OR CONSEQUENTIAL OR ANY LOSSES, SUCH AS BUT NOT LIMITED TO LOSS
OF PROFIT, REVENUE, BUSINESS INTERRUPTION, BUSINESS OPPORTUNITY OR DATA
THAT MAY ARISE FROM THE USE OF THIS DOCUMENT OR THE INFORMATION IN IT, EVEN
IN THE CASE OF ERRORS IN OR OMISSIONS FROM THIS DOCUMENT OR ITS CONTENT.

Copyright and trademark: Nokia is a registered trademark of Nokia Corporation. Other product
names mentioned in this document may be trademarks of their respective owners.

The registered trademark Linux® is used pursuant to a sublicense from the Linux Foundation, the
exclusive licensee of Linus Torvalds, owner of the mark on a worldwide basis.

© 2024 Nokia.

Advanced Solutions Guide Release 24.10

Table of contents

Table of contents

1  About  this  guide.................................................................................................................................. 6

1.1  Precautionary and information messages...................................................................................6

1.2  Conventions................................................................................................................................. 6

2  What’s  new........................................................................................................................................... 8

3  BGP  for  underlay  routing................................................................................................................... 9

3.1  BGP underlay routing example................................................................................................... 9

3.1.1  Advantages of BGP for underlay routing........................................................................10

3.2  BGP configuration for underlay routing.....................................................................................10

3.2.1  Example: Configure Router 3 for static EBGP session.................................................. 10

3.2.2  Example: Configure Router 5 for static EBGP session.................................................. 13

3.3  Advanced configuration: BGP timers........................................................................................ 16

3.3.1  Modifying timer-related defaults......................................................................................16

3.4  Advanced configuration: BGP convergence optimization......................................................... 17

3.4.1  Configuring wait-for-fib-install..........................................................................................18

3.4.2  Convergence process optimization after restarts........................................................... 18

3.4.2.1  Configuring min-wait-to-advertise to delay BGP route advertisement.................. 19

3.4.2.2  Configuring max-wait-to-advertise........................................................................ 19

3.4.2.3  BGP min-/max-wait-to-advertise timers behavior................................................. 19

3.4.2.4  Displaying convergence snapshot........................................................................ 20

3.5  Advanced configuration: IPv4 route advertisement with IPv6 next-hops.................................. 21

3.5.1  Advertising a BGP route for IPv4 NLRI with an IPv6 BGP next-hop address.................22

3.5.2  Receiving a BGP route for IPv4 NLRI with an IPv6 BGP next-hop address...................22

3.5.3  Accepting IPv4 packets on an IPv6-only interface......................................................... 22

4  MAC-VRF network-instances for server aggregation....................................................................24

4.1  Overview.................................................................................................................................... 24

4.2  Configuration of MAC-VRF network-instances and IRB subinterfaces.....................................25

4.2.1  Example: Configure DUT2 with MAC-VRF, IRB, and static BGP on IRB....................... 26

4.3  Advanced configuration: bridge-table settings.......................................................................... 32

4.4  Advanced configuration: MAC-duplication for loop protection.................................................. 33

4.4.1  Example: Configure MAC-duplication and troubleshoot loops in DUT2......................... 34

4.4.2  Using logs to detect duplicate MACs............................................................................. 36

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

3

 
 
 
 
Advanced Solutions Guide Release 24.10

Table of contents

5  EVPN-VXLAN for layer-2 and multi-homing................................................................................... 37

5.1  Overview.................................................................................................................................... 37

5.2  Configuration of EVPN-VXLAN broadcast domains................................................................. 38

5.2.1  Configuring the underlay network................................................................................... 39

5.2.2  Configuring LEAF-3 with an EVPN-VXLAN enabled MAC-VRF.....................................42

5.2.3  Checking the EVPN-VXLAN operation in MAC-VRFs.................................................... 45

5.2.3.1  Checking vxlan-interface configuration................................................................. 45

5.2.3.2  Checking mac-vrf, bgp-vpn, and bgp-evpn parameters....................................... 46

5.2.3.3  Checking VXLAN tunnels..................................................................................... 46

5.2.3.4  Checking tunnel-table entries............................................................................... 47

5.2.3.5  Checking  statistics................................................................................................ 47

5.2.3.6  Checking for received IMET routes and multicast destination creation................ 48

5.2.3.7  Checking for multicast-destinations...................................................................... 51

5.2.3.8  Checking mac-table and MAC/IP routes.............................................................. 52

5.2.3.9  Checking unicast destinations.............................................................................. 53

5.2.4  Checking MAC mobility, MAC protection and MAC loop protection in EVPN-VXLAN

BDs........................................................................................................................................53

5.2.4.1  Checking MAC mobility.........................................................................................54

5.2.4.2  Checking MAC protection..................................................................................... 55

5.2.4.3  MAC loop protection............................................................................................. 57

5.3  Multi-homing configuration for EVPN broadcast domains........................................................ 58

5.3.1  All-active multi-homing configurations............................................................................ 58

5.3.1.1  Ethernet segment configuration details................................................................ 59

5.3.2  Configuring LEAF-2 and LEAF-4 as multi-homed nodes to server-1............................. 60

5.3.2.1  Use of multi-homing as all-active MLAG for non-EVPN layer-2 BDs....................64

5.3.3  Checking the multi-homing operation............................................................................. 65

5.3.3.1  Checking the ES status........................................................................................ 65

5.3.3.2  Checking ES and EVI routes................................................................................67

5.3.3.3  Checking the MAC/IP route.................................................................................. 68

5.3.3.4  Checking the ES destination................................................................................ 69

5.3.3.5  Checking MAC programming................................................................................70

5.3.3.6  Checking subinterface ES association (LEAF-2)..................................................70

5.3.3.7  Checking subinterface ES association (LEAF-4)..................................................71

5.3.3.8  EVPN  related  logs................................................................................................ 72

6  EVPN-VXLAN  for  layer  3...................................................................................................................73

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

4

 
 
 
 
Advanced Solutions Guide Release 24.10

Table of contents

6.1  Overview.................................................................................................................................... 73

6.2  Configuration of EVPN-VXLAN IP-VRF domains..................................................................... 74

6.2.1  Preconfiguring the underlay network.............................................................................. 75

6.2.2  Configuring the LEAF-3 IP-VRF domain........................................................................ 75

6.2.3  Configuring the IP-VRF Domain on LEAF-2 and LEAF-4.............................................. 79

6.2.3.1  IRB subinterface considerations........................................................................... 88

6.2.4  Configuring EVPN IFL interoperability to EVPN IFF unnumbered model....................... 89

6.2.5  Checking the EVPN IFL model in IP-VRFs.................................................................... 90

6.2.5.1  Checking IP-VRF-10 state and connectivity......................................................... 90

6.2.5.2  Checking for VXLAN tunnel creation....................................................................91

6.2.5.3  Checking for remote VTEPS and associated destinations................................... 92

6.2.5.4  Checking IP-VRF-10 route table...........................................................................93

6.2.5.5  Checking route-table state for a RT5................................................................... 94

6.2.5.6  Monitoring  pings....................................................................................................95

6.2.6  Checking PE-CE routing on an IP-VRF with EVPN-IFL................................................. 97

6.2.6.1  Checking PC-CE routing on IP-VRF.................................................................... 97

6.2.6.2  PE-CE EBGP session: import and export policies............................................... 98

6.2.6.3  Additional PE-CE considerations.......................................................................... 99

6.2.7  Checking multi-homing in an EVPN-VXLAN Layer 3 network......................................101

6.2.7.1  Consistency check for anycast-gw IPs............................................................... 101

6.2.7.2  Non-anycast-gw IP addresses............................................................................105

6.2.7.3  Additional anycast gateway considerations........................................................ 107

6.3  Testing and checking Layer 3 host mobility............................................................................109

6.3.1  Configuring efficient host routing.................................................................................. 110

6.3.2  Mobility event - efficient host routing............................................................................ 113

6.4  EVPN-VXLAN Layer 3 feature parity for IPv6 prefixes...........................................................117

6.4.1  Configuring IPv6 Container...........................................................................................118

6.4.2  Additional feature parity considerations........................................................................119

7  Security hardening using CPM filters........................................................................................... 121

7.1  ACL configuration for control plane protection....................................................................... 121

7.1.1  CPM  filter  rules............................................................................................................. 121

7.1.2  Restricting source subnets for incoming traffic using CPM filter.................................. 122

8  Configuring IP-VPN services..........................................................................................................124

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

5

 
 
 
 
Advanced Solutions Guide Release 24.10

About this guide

1 About this guide

This document describes how to configure advanced solutions for the Nokia Service Router Linux
(SR Linux). Advanced solutions are defined as more complex network-level configurations where additional
guidance and more detailed procedures may be required.

This document is intended for network technicians, administrators, operators, service providers, and others
who need to understand how to use and configure advanced solutions.

This manual covers the current release and may also contain some content that will be released in later
maintenance loads. See the SR Linux Release Notes for information about features supported in each
load.

Configuration and command outputs shown in this guide are examples only; actual displays may differ
depending on supported functionality and user configuration.

1.1 Precautionary and information messages

The following are information symbols used in the documentation.

DANGER: Danger warns that the described activity or situation may result in serious personal
injury or death. An electric shock hazard could exist. Before you begin work on this equipment,
be aware of hazards involving electrical circuitry, be familiar with networking environments, and
implement accident prevention procedures.

WARNING:  Warning indicates that the described activity or situation may, or will, cause
equipment damage, serious performance problems, or loss of data.

Caution: Caution indicates that the described activity or situation may reduce your component or
system performance.

Note: Note provides additional operational information.

Tip: Tip provides suggestions for use or best practices.

1.2 Conventions

SR Linux documentation uses the following command conventions.

• Bold type indicates a command that the user must enter.

•

Input and output examples are displayed in Courier text.

• An open right-angle bracket indicates a progression of menu choices or simple command sequence

(often selected from a user interface). Example: start > connect to.

• A vertical bar (|) indicates a mutually exclusive argument.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

6

 
 
 
 
Advanced Solutions Guide Release 24.10

About this guide

• Square brackets ([ ]) indicate optional elements.

• Braces ({ }) indicate a required choice. When braces are contained within square brackets, they indicate

a required choice within an optional element.

•

Italic type indicates a variable.

Generic IP addresses are used in examples. Replace these with the IP addresses used in the system.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

7

 
 
 
 
Advanced Solutions Guide Release 24.10

What’s new

2 What’s new

There have been no updates in this document since it was last released.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

8

 
 
 
 
Advanced Solutions Guide Release 24.10

BGP for underlay routing

3 BGP for underlay routing

A routing protocol is needed to dynamically discover the shortest loop-free path through the underlay
of a DC fabric to reach every destination IP subnet. The Border Gateway Protocol (BGP) is one of the
leading technologies for this purpose as a result of its simplicity, scalability, and ease of multi-vendor
interoperability.

BGP also provides policy mechanisms to perform hop-by-hop traffic engineering, leveraging functionality
originally designed for this same purpose in the public Internet.

3.1 BGP underlay routing example

The following figure shows a 3-stage Clos fabric design using only BGP for underlay routing.

Figure 1: BGP underlay routing example

This design example shows the following:

• Each Top-of-Rack (TOR) switch is a BGP router assigned with its own unique Autonomous System

Number (ASN).

• Each TOR switch is dual-homed to the two leaf switches in its same POD or container and adding more

leaf switches later can achieve scale capacity.

• Each TOR forms one single-hop External Border Gateway Protocol (EBGP) session to each of its

upstream leaf switches. From a TOR perspective, these sessions are single-hop because each leaf
switch is a BGP neighbor in the same IP subnet as its interface address toward the leaf switch.

• Each leaf switch is a BGP router. All of the leaf switches in one POD or container belong to the same

ASN, but this ASN is unique in the data center.

• Each leaf switch has two uplinks into the spine layer. More uplinks could be added later to achieve

scale capacity. Each leaf switch forms one single-hop EBGP session with each of its upstream spine
switches.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

9

 
 
 
 
Advanced Solutions Guide Release 24.10

BGP for underlay routing

• Each spine switch is a BGP router. All of the spine switches in one data center belong to the same ASN

but this ASN is unique in the network.

3.1.1 Advantages of BGP for underlay routing

Using BGP as shown in Figure 1: BGP underlay routing example has the following advantages:

• Standard operation of the BGP best-path selection algorithm chooses the route to each destination with
the AS_PATH length. This equates to the lowest hop count when each device prepends one ASN to the
AS_PATH.

• Standard operation of the BGP multipath algorithm sprays traffic across all paths with the same shortest

AS_PATH length.

• When a link goes down in the topology, the BGP session is taken down immediately if fast-failover is

enabled. This may cause a new BGP best path to be advertised by the routers at each end of the failed
session. Other routers may also advertise their own new best paths, but typically the failure does not
propagate beyond routers that do not change their best path.

• Traffic can be rerouted around any node in the topology by having it prepend extra AS numbers to the

AS_PATH.

• The best path or set of multipaths available to reach a destination TOR are visible in any device by

looking at the AS_PATH attribute. This can be helpful with troubleshooting.

3.2 BGP configuration for underlay routing

The following examples define how to bring up a static, preconfigured EBGP session between Router 3
and Router 5 (as shown in Figure 1: BGP underlay routing example). Use the following two examples to
define the minimum configuration required for each router:

• Example: Configure Router 3 for static EBGP session

• Example: Configure Router 5 for static EBGP session

3.2.1 Example: Configure Router 3 for static EBGP session

About this task

Use the following example to configure Router 3 for the static EBGP session.

Procedure

Step 1.

In candidate mode, create a network-instance that owns the IP subinterface toward Router 5.

Example

--{ candidate shared default}--[ network-instance default ]--
# info detail
    type default
    admin-state enable
    ip-load-balancing {
    }
    interface ethernet-1/1.0 {
    }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

10

 
 
 
 
Advanced Solutions Guide Release 24.10

BGP for underlay routing

    protocols {
    }

Ensure the following:

• The network-instance is operationally enabled.

• The subinterface is operationally enabled.

• The subinterface has at least one IPv4 or IPv6 address assigned.

Step 2. Add the BGP protocol to the network-instance.

By default, it is administratively enabled when the configuration is committed.

Example

--{ candidate shared default}--[ network-instance default ]--
# protocols bgp

Step 3. Assign a global ASN to the BGP instance.

This is the ASN reported to peers when this network-instance opens a BGP session toward
another router (unless it is overridden by a local-as configuration).

Router 3 has a global ASN of 65201.

Example

--{ candidate shared default}--[ network-instance default protocols bgp ]--
# autonomous-system 65201

Step 4. Assign a router-ID to the BGP instance.

This is the BGP identifier reported to peers when this network-instance opens a BGP session
toward another router. This overrides the router-id configuration at the network-instance level.

Router 3 has a router-id of 192.0.3.1.

Example

--{ candidate shared default}--[ network-instance default protocols bgp ]--
# router-id 192.0.3.1

Step 5. Enable all address families that should be enabled globally as a default for all peers of the BGP

instance.

When you later configure individual neighbors or groups, you can override the enabled families at
those levels.

Example

--{ candidate shared default}--[ network-instance default protocols bgp ]--
# afi-safi ipv4-unicast admin-state enable
--{ candidate shared default}--[ network-instance default protocols bgp ]--
# afi-safi ipv6-unicast admin-state enable

Step 6. Create a peer group to contain the neighbor session with Router 5.

A peer-group should include sessions that have a similar or almost identical configuration.

In this example, the peer group is named "spine" because it is used to contain all spine layer
peers. New groups are administratively enabled by default.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

11

 
 
 
 
Advanced Solutions Guide Release 24.10

BGP for underlay routing

Example

--{ candidate shared default}--[ network-instance default protocols bgp ]--
# group spine

Step 7. All of the configuration that is common to all peers in the group must be configured at the group

level.

In this example, this includes:

• peer-as (of the spine peers)

• export-policy

The export policy (named ‟pass-all” in the example) in the configuration output below was
previously created in this work flow (if it does not exist, the commit fails). The export policy is
required to advertise any routes to R5. This is because R5 is an EBGP peer, and by default, no
routes are advertised to EBGP peers without an export policy. Note: this can be controlled by a
setting in the network-instance protocols ‟bgp ebgp-default-policy” container.

The "pass-all" export policy matches and accepts all BGP routes, while rejecting all non-BGP
routes.

Example

--{ candidate shared default }--[ network-instance default protocols bgp group spine ]
# info
    peer-as 65301
    export-policy pass-all

--{ candidate shared default }--[  ]
# info from running routing-policy
    routing-policy {
        policy pass-all {
            default-action {
                reject {
                }
            }
            statement 10 {
                match {
                    protocol bgp
                }
                action {
                    accept
                }
            }
        }
    }

Step 8. Configure the BGP session with router R5.

In this example, router R5 is reachable to R3 through the ethernet-1/1.0 subinterface. On this
subnet, router R5 has the global-unicast IPv6 address 2001:db8::c11.

In this minimal configuration example, the only required configuration for the neighbor
is its association with the group "spine" that was previously created. New neighbors are
administratively enabled by default.

Example

--{ candidate shared default}--[ network-instance default protocols bgp ]--

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

12

 
 
 
 
Advanced Solutions Guide Release 24.10

BGP for underlay routing

# neighbor 2001:db8::c11 peer-group spine

Step 9. Review all changes and, if everything appears correct, commit the changes:

Example

# commit stay

3.2.2 Example: Configure Router 5 for static EBGP session

About this task

Use the following example to configure Router 5 for the static EBGP session.

Procedure

Step 1.

In candidate mode, create a network-instance that owns the IP subinterface toward Router 3.
Ensure that:

• The network-instance is operationally enabled.

• The subinterface is operationally enabled.

• The subinterface has at least one IPv4 or IPv6 address assigned.

Example

--{ candidate shared default}--[ network-instance default ]--
# info detail
    type default
    admin-state enable
    ip-forwarding {
        receive-ipv4-check true
        receive-ipv6-check true
    }
    ip-load-balancing {
    }
    interface ethernet-3/1.1 {
    }
    protocols {
    }
    mtu {
        path-mtu-discovery true
    }

Step 2. Add the BGP protocol to the network-instance. By default, it is administratively enabled when the

configuration is committed.

Example

--{ candidate shared default}--[ network-instance default ]--
# protocols bgp

Step 3. Assign a global autonomous system number to the BGP instance.

Router 5 has a global autonomous system number of 65301.

Example

--{ candidate shared default}--[ network-instance default protocols bgp ]--

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

13

 
 
 
 
Advanced Solutions Guide Release 24.10

BGP for underlay routing

# autonomous-system 65301

Step 4. Assign a router-ID to the BGP instance.

This is the BGP identifier reported to peers when this network-instance opens a BGP session
toward another router. This overrides the router-ID configuration at the network-instance level.

Router 5 has a router-ID of 192.0.5.1.

Example

--{ candidate shared default}--[ network-instance default protocols bgp ]--
# router-id 192.0.5.1

Step 5. Enable all address families that should be enabled globally as a default for all peers of the BGP

instance.

When you later configure individual neighbors or groups, you can override the enabled families at
those levels.

Example

--{ candidate shared default}--[ network-instance default protocols bgp ]--
# afi-safi ipv4-unicast admin-state enable
--{ candidate shared default}--[ network-instance default protocols bgp ]--
# afi-safi ipv6-unicast admin-state enable

Step 6. Create a peer-group to contain the neighbor session with Router 3. A peer-group should include

sessions that have a similar or almost identical configuration.

In this example, the peer-group is named "leaf-pod1" because it is used to contain all leaf peers
in POD1. New groups are administratively enabled by default.

Example

--{ candidate shared default}--[ network-instance default protocols bgp ]--
# group leaf-pod1

Step 7. All of the configuration that is common to all peers in the group must be configured at the group

level.

In this example, this includes:

• peer-as (of the leaf peers in POD1)

• export-policy

The export policy (named ‟pass-all” in the example) is shown in the following running
configuration output, and is required to advertise any routes to R3. This is because R3 is an
EBGP peer and, by default, no routes are advertised to EBGP peers without an export policy.

Note: This can be controlled by a setting in the network-instance protocols ‟bgp ebgp-
default-policy” container.

The "pass-all" export policy is a simple policy that matches all BGP routes and accepts them,
while rejecting all non-BGP routes.

Example

--{ candidate Shared default}--[ network-instance default protocols bgp group leaf-
pod1 ]--
# info

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

14

 
 
 
 
Advanced Solutions Guide Release 24.10

BGP for underlay routing

    peer-as 65201
    export-policy pass-all
--{ candidate }--[ network-instance default protocols bgp group leaf-pod1 ]--
# exit all
--{ candidate shared default}--[  ]
# info from running routing-policy
    routing-policy {
        policy pass-all {
            default-action {
                reject {
                }
            }
            statement 10 {
                match {
                    protocol bgp
                }
                action {
                    accept
                }
            }

Step 8. Configure the BGP session with router R3.

In this example, router R3 is reachable to R5 through the ethernet-3/1.1 subinterface. On this
subnet, router R5 has the global-unicast IPv6 address 2001:db8::c12.

In this minimal configuration example, the only required configuration for the neighbor is
its association with the group ‟leaf-pod1” that was previously created. New neighbors are
administratively enabled by default.

Example

--{ candidate shared default}--[ network-instance default protocols bgp ]--
# neighbor 2001:db8::c12 peer-group leaf-pod1

Step 9. Review all changes and if everything looks correct, commit the changes.

Step 10. From Router 3, verify that the session is up (State is established) using the show neighbor

command under the network-instance protocols BGP hierarchy.

Example

--{running}--{ network-instance default protocols bgp }--
srlinux# show neighbor
------------------------------------------------------------------------------------------------
BGP neighbor summary for network-instance "default"
Flags: S static, D dynamic, L discovered by LLDP, B BFD enabled, - disabled, * slow
------------------------------------------------------------------------------------------------
+----------+---------------+-------+-------+-------+-------------+----------+--------------+---------+
| Net-Inst |  Peer         | Group | Flags | Peer- | State       | Uptime   | AFI/SAFI     |  RX/    |
|          |               |       |       |  AS   |             |          |              | Active  |
|          |               |       |       |       |             |          |              |  /TX    |
+==========+===============+=======+=======+=======+=============+==========+==============+=========+
| default  | 2001:db8::cli | spine | S     | 65301 | established | 0d:0h:   | ipv4-unicast | [4/3/1] |
|          |               |       |       |       |             | 34min 7s | ipv6-unicast | [1/1/1] |
+----------+---------------+-------+-------+-------+-------------+----------+--------------+---------+
------------------------------------------------------------------------------------------------
Summary:
1 configured neighbors, 1 configured sessions are established, 0 disabled peers
None dynamic sessions are established

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

15

 
 
 
 
Advanced Solutions Guide Release 24.10

BGP for underlay routing

3.3 Advanced configuration: BGP timers

When two BGP routers form a session, they each propose a value for the session hold-time in their OPEN
messages. The lowest of the two proposed values becomes the operational hold-time for the lifetime of
the session. If the operational hold-time is greater than zero, both routers are agreeing to send keepalive
messages to each other. This ensures that any loss of connectivity between them can be detected.

Each router restarts its hold-timer every time it receives a message from the other peer. If the operational
hold-timer reaches zero without receiving any keepalive or related message from the peer, the session is
torn down (returned to the Idle state). Each router sends a keepalive message to its peer no more than one
message every keepalive interval. The default value for the keepalive interval is one third of the operational
hold-time, but it possible to configure a different interval.

In a data center environment, an EBGP session failure is usually caused by an interface going down.
Interface events are propagated to BGP if fast-failover is enabled. The hold-timer expiry is not the usual
mechanism for detecting connectivity problems. However, there may be some circumstances where some
adjustment of the hold-time and the keepalive interval can be used.

3.3.1 Modifying timer-related defaults

About this task

With SR Linux, the default hold-time is 90 seconds and the default keepalive interval is 30 seconds.

Procedure

To change the hold-time on a session to 24 seconds with a keepalive interval of 8 seconds (1/3 of 24), you
only need to change the hold-time value to 24, as shown in the following example:

Example: Change hold-time

--{ candidate shared default}--[ network-instance default protocols bgp neighbor 
 2001:db8::c11 ]--
# timers hold-time 24

After this change is committed, the affected session flaps and the new operational timer values are
shown in the output of the show network-instance protocols bgp neighbor detail command. For
example:

srlinux# show network-instance default protocols bgp neighbor 2001:db8::c11 detail
----------------------------------------------------------------------------------
Peer : 2001:db8::c11, remote AS: 65301, local AS: 65201
Type : static
Description : None
Group : spine
Export policies : pass-all
Import policies: pass-all
---------------------------------------------------------------------------------
Admin-state is enable, session-state is established, up for 0d:0h:6m:37s
TCP connection is 2001:db8::c12 [45492] -> 2001:db8::c11 [179]
0 messages in input queue, 0 messages in output queue
--------------------------------------------------------------------------------
Last-state was active, last-event was recvOpen, 24 peer-flaps
Last received Notification was Error:Message Header Error SubError: Bad Message Type
Failure detection: BFD is False, fast-failover is False

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

16

 
 
 
 
Advanced Solutions Guide Release 24.10

BGP for underlay routing

------------------------------------------------------------------------------------
Graceful Restart
   Restarts by the peer : 0
   Last restart : N/A
   Peer requested restart-time : 300
   Stale routes time : 360
+-----------------------------------+---------------------------------+------------+
|                Timer              |     Configured/Operational      |     Next   |
+===================================+=================================+============+
| connect-retry                     | 120                             | -          |
| keepalive-interval                | 30/8                            | -          |
| hold-time                         | 24/24                           | -          |
| minimum-advertisement-interval    | 5                               | -          |
+-----------------------------------+---------------------------------+------------+
------------------------------------------------------------------------------------
Cap Sent:  MP_BGP ROUTE_REFRESH EXT_NH_ENCODING 4-OCTET_ASN
Cap Recv:  MP_BGP ROUTE_REFRESH EXT_NH_ENCODING 4-OCTET_ASN
------------------------------------------------------------------------------------
+----------------------------------+--------------------------------+--------------+
|              Messages            |              Sent              |  Received    |
+==================================+================================+==============+
| Non Updates                      | 55                             | 52           |
| Updates                          | 424                            | 2            |
| Malformed updates                | 0                              | 0            |
+----------------------------------+--------------------------------+--------------+
------------------------------------------------------------------------------------
Ipv4-unicast AFI/SAFI
    End of RIB                     : sent, not received
    Received routes                : 4
    Rejected routes                : None
    Active routes                  : 3
    Advertised routes              : 1
    Prefix-Limit                   : None
    Default originate              : disabled
    Advertise with IPv6 next-hops  : False
    Peer requested GR helper       : None
    Peer preserved forwarding state: None
-----------------------------------------------------------------------------------
Ipv6-unicast AFI/SAFI
    End of RIB                     : sent, not received
    Received routes                : 1
    Rejected routes                : None
    Active routes                  : 1
    Advertised routes              : 1
    Prefix-Limit                   : None
    Default originate              : disabled
    Advertise with IPv6 next-hops  : N/A
    Peer requested GR helper       : None
    Peer preserved forwarding state: None
-----------------------------------------------------------------------------------
--{ candidate shared }--[  ]--

3.4 Advanced configuration: BGP convergence optimization

By default, the SR Linux BGP process (running the BGP control plane) does not advertise a route for an
IPv4 or IPv6 prefix until it has positive confirmation from the FIB manager process that the route is in the
FIB of all installed line cards. This ensures that the router does not attract traffic destined for an IP prefix
until all line cards have the ability to forward the traffic.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

17

 
 
 
 
Advanced Solutions Guide Release 24.10

BGP for underlay routing

Note:
The BGP process does not delay route withdrawals until it knows that all line cards have removed
the FIB state as this is not needed.

3.4.1 Configuring wait-for-fib-install

About this task

Nokia recommends that the wait-for-fib-install functionality remain enabled on routers that are in the
datapath (that is, routers that set BGP next-hop-self). However, this does cause the rate of RIB-OUT route
advertisements to slow to the rate of FIB programming.

Procedure

If the objective of a BGP performance test is to reach the highest possible route advertisement rate, set the
wait-for-fib-install configuration leaf to false. For example:

Example: Set wait-for-fib-install leaf to false

--{ candidate shared default}--[network-instance default protocols bgp route-
advertisement]--
# wait-for-fib-install false

3.4.2 Convergence process optimization after restarts

The BGP protocol and its state machine must attempt to reconverge whenever the following occurs:

•

•

the router starts up

the BGP manager (control plane) application restarts

• all peers of a network-instance are hard-reset by a tools reset-peer command

When any of these conditions are met, the router resynchronizes its BGP RIB with the BGP RIB of other
routers in the network. When resynchronization completes, BGP has "converged". During convergence,
the following occurs to the restarting router:

•

•

•

It must reestablish its sessions with configured (and discovered) BGP neighbors.

It must relearn all BGP routes advertised by its direct BGP neighbors (their best paths, plus potentially
some additional paths).

It must advertise to its direct neighbors, its own locally originated BGP routes plus the received routes
that it considers its own set of best paths.

The default behavior of SR Linux BGP is to execute all of the preceding steps in parallel. As soon as the
first BGP session has reestablished, the restarting router begins to advertise its own best paths to that
BGP neighbor (even though it is still in the early stages of rebuilding its RIB-IN database).

As more sessions come up and more routes are learned, it is likely that routes previously considered best
are no longer best, leading to multiple route advertisements for the same prefix with each incrementally
better than the previous one. The best route is not determined until the last advertisement. The
intermediate route advertisements can substantially increase the processing workload on the restarting
router as well as its BGP neighbors. This can lengthen the overall convergence time and cause short term
inefficiencies in traffic forwarding.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

18

 
 
 
 
Advanced Solutions Guide Release 24.10

BGP for underlay routing

3.4.2.1 Configuring min-wait-to-advertise to delay BGP route advertisement

About this task

Instead of reconverging as previously described, SR Linux BGP can also be configured to delay the
advertisement of BGP routes in a particular address family until convergence has occurred for that address
family or until a configured time limit has expired.

Procedure

To activate this behavior, configure a non-zero value for the min-wait-to-advertise configuration leaf. For
example:

Example: Set min-wait-to-advertise

--{ candidate shared default}--[ network-
instance default protocols bgp convergence ]--
# min-wait-to-advertise 600

3.4.2.2 Configuring max-wait-to-advertise

Procedure

You can configure the max-wait-to-advertise leaf value for the IPv4-unicast and IPv6-unicast address
families, or you can accept their default values (3x the min-wait-to-advertise value). To configure a max-
wait-to-advertise leaf with a non-default value, the value must be greater than the configured min-wait-to-
advertise timer. In the following example, the max-wait-to-advertise timer is set to 900 seconds for IPv4-
unicast and set to 800 seconds for IPv6-unicast.

Example: Set max-wait-to-advertise

--{ candidate shared default}--[ network-instance default protocols bgp ]--
# afi-safi ipv4-unicast ipv4-unicast convergence max-wait-to-advertise max-wait-to-
advertise 900
# afi-safi ipv6-unicast ipv6-unicast convergence max-wait-to-advertise 800

3.4.2.3 BGP min-/max-wait-to-advertise timers behavior

The min-wait-to-advertise timer begins after one of the following triggers occurs and the first BGP session
becomes established.

• BGP instance admin state set to enable or disable

• Running tools clear network-instance protocols bgp reset-peer

• BGP application restart

• Node reboot

When the first session that supports the exchange of IPv4-unicast routes is established, the max-wait-
to-advertise timer of the IPv4 address family starts. Likewise, when the first session that supports the
exchange of IPv6-unicast routes is established, the max-wait-to-advertise timer of the IPv6 address family
starts.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

19

 
 
 
 
Advanced Solutions Guide Release 24.10

BGP for underlay routing

While the min-wait-to-advertise timer is running, BGP sessions come up, and routes are learned and
sorted according to preference by the BGP decision process. However, no routes are advertised to any of
the peers.

When the min-wait-to-advertise expires, BGP makes a list of IPv4 and IPv6 peers (that is, peers that
support the exchange of IPv4-unicast routes and IPv6-unicast routes). It expects to receive the IPv4-
unicast End of RIB (EOR) marker from each neighbor in the list of IPv4 peers, and it expects to receive the
IPv6-unicast EOR from each neighbor in the list of IPv6 peers.

When BGP in the restarting router receives the last expected IPv4-unicast EOR, it declares that address
family as converged and starts to advertise its best IPv4-unicast routes. Likewise, when BGP receives the
last expected IPv6-unicast EOR, it declares that address family as converged and starts to advertise its
best IPv6-unicast routes.

If the max-wait-to-advertise timer expires before the last expected EOR, is received for an address
family, the convergence state for the address family moves to ‟timeout” and a RIB-OUT advertisement is
triggered. This occurs even though convergence is not complete. The max-wait-to-advertise timers are fail-
safe. They handle the scenario when one or more peers come up within the min-wait-to-advertise window,
but their EORs are not sent.

3.4.2.4 Displaying convergence snapshot

Procedure

Use the show network-instance protocols bgp summary command to display a snapshot of the BGP
convergence process. In the example that follows, the BGP convergence process is triggered by a hard
reset of all peers of the BGP instance:

Example: Trigger BGP convergence using reset-peer

--{ * candidate shared default}--[  ]--
# tools network-instance default protocols bgp reset-peer
/network-instance[name=default]/protocols/bgp:
    Successfully executed the tools clear command.

If the show network-instance protocols bgp summary command is issued a few minutes after
the session restarts, a snapshot of the convergence process can be viewed. For example, in the
following output example, ten IPv4-unicast sessions are established when the min-wait-to-advertise
timer expires and IPv4-unicast convergence takes 517 seconds.

Example: Display convergence snapshot

# show network-instance default protocols bgp summary
-----------------------------------------------------------------------------
BGP is enabled and up in network-instance "default"
Global AS number  : 65201
BGP identifier    : 192.0.3.1
-----------------------------------------------------------------------------
  Total paths               : 27
  Received routes           : 200000
  Received and active routes: 200000
  Total UP peers            : 20
  Configured peers          : 20, 0 are disabled
  Dynamic peers             : None
-----------------------------------------------------------------------------
Default preferences
  BGP Local Preference attribute: 100

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

20

 
 
 
 
Advanced Solutions Guide Release 24.10

BGP for underlay routing

  EBGP route-table preference   : 170
  IBGP route-table preference   : 170
-----------------------------------------------------------------------------
Wait for FIB install to advertise: True
Send rapid withdrawals           : False
-----------------------------------------------------------------------------
Ipv4-unicast AFI/SAFI
    Received routes               : 100000
    Received and active routes    : 100000
    Max number of multipaths      : 8, 1
    Multipath can transit multi AS: True
-----------------------------------------------------------------------------
    Min adv delay after restart(slow peer thresh): 600s
    Currently established sessions               : 10
    Sessions established at slow peer thresh     : 10
    First session establishment after restart    : 5s
    Last session established after restart       : 252s
-----------------------------------------------------------------------------
    Max advertisement delay after first peer UP: 900s
    Max adv delay exceeded after last restart  : None
    Current convergence state                  : converged
    Converged peers                            : 10
    Convergence time after last restart        : 517s
-----------------------------------------------------------------------------
Ipv6-unicast AFI/SAFI
    Received routes               : 100000
    Received and active routes    : 100000
    Max number of multipaths      : 1,1
    Multipath can transit multi AS: True
-----------------------------------------------------------------------------
    Min adv delay after restart(slow peer thresh): 600s
    Currently established sessions               : 10
    Sessions established at slow peer thresh     : 10
    First session establishment after restart    : 8s
    Last session established after restart       : 312s
-----------------------------------------------------------------------------
    Max advertisement delay after first peer UP: 800s
    Max adv delay exceeded after last restart  : None
    Current convergence state                  : converged
    Converged peers                            : 10
    Convergence time after last restart        : 705s
-----------------------------------------------------------------------------

3.5 Advanced configuration: IPv4 route advertisement with IPv6 next-hops

Some data centers are migrating away from an IPv4/IPv6 dual-stack infrastructure and moving toward an
IPv6-only infrastructure. In an IPv6-only design, each interface in the fabric (such as the leaf-spine, leaf-
TOR) is assigned one or more IPv6 addresses, but no IPv4 addresses.

To route and forward IPv4 packets over an IPv6-only fabric, the leaf and spine switches must support the
following:

• The ability to advertise a BGP route for IPv4 Network Level Reachability Information (NLRI) with an

IPv6 BGP next-hop address.

• The ability to receive a BGP route for IPv4 NLRI with an IPv6 BGP next-hop address.

• The ability to accept IPv4 packets on an IPv6-only interface.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

21

 
 
 
 
Advanced Solutions Guide Release 24.10

BGP for underlay routing

3.5.1 Advertising a BGP route for IPv4 NLRI with an IPv6 BGP next-hop address

About this task

On SR Linux, the ability to advertise a BGP route for IPv4 NLRI with an IPv6 BGP next-hop address is not
enabled by default.

Procedure

To enable this functionality, use the advertise-ipv6-next-hops command, which is available on a per-
session basis. The following is a sample configuration:

Example: Advertise BGP route for IPv4 NLRI with IPv6 BGP next-hop

--{ candidate shared default}--[ network-instance default protocols bgp ]--
#  afi-safi ipv4-unicast ipv4-unicast advertise-ipv6-next-hops true

3.5.2 Receiving a BGP route for IPv4 NLRI with an IPv6 BGP next-hop address

About this task

On SR Linux, the ability to receive a BGP route for IPv4 NLRI with an IPv6 BGP next-hop address is
not enabled by default. To enable this functionality, use the receive-ipv6-next-hops command, which is
available on a per-session basis.

This command allows SR Linux to advertise the extended-next-hop-encoding BGP capability, defined in
RFC 5549, to the peers included in the scope of the command. This BGP capability encodes NLRI AFI 1,
NLRI SAFI 1, and next-hop AFI 2. It informs peers that they can advertise MP-BGP encoded IPv4 routes
with IPv6 next-hops. When the routes are received, the router then attempts to resolve them using IPv6
routes.

If the router receives an IPv4 route with an IPv6 next-hop that is resolved by a static or direct IPv6 route
(and an IPv6 neighbor entry for the next-hop host address), the IPv4 route is programmed in the FIB
so that matching IPv4 packets are sent without additional encapsulation. Packets are sent through the
indicated interface with a MAC destination address provided by the IPv6 neighbor entry.

Procedure

To enable receipt of BGP routes for IPv4 NLRI with an IPv6 BGP next-hop address, use the receive-ipv6-
next-hops command.

Example: Receive BGP route for IPv4 NLRI with IPv6 BGP next-hop

--{ candidate shared }--[ network-instance default protocols bgp ]--
# afi-safi ipv4-unicast ipv4-unicast receive-ipv6-next-hops true

3.5.3 Accepting IPv4 packets on an IPv6-only interface

About this task

The datapath of the SR Linux checks for and discards all IPv4 packets that are received on an IPv6-only
subinterface (that is, a subinterface with no configured IPv4 addresses). This is done for security reasons.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

22

 
 
 
 
Advanced Solutions Guide Release 24.10

BGP for underlay routing

However, if the router has advertised IPv4 routes with IPv6 next-hops to a peer, the check should be
disabled on all subinterfaces that could be used by the peer when it installs the IPv4 route.

Procedure

To disable this check on all subinterfaces bound to a specific network-instance, set the ipv4-receive-check
leaf to false.

Example:  Accept IPv4 packets on an IPv6-only interface

--{ candidate shared default}--[ network-instance default ]--
# ip-forwarding receive-ipv4-check false

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

23

 
 
 
 
Advanced Solutions Guide Release 24.10

MAC-VRF network-instances for server aggregation

4 MAC-VRF network-instances for server aggregation

MAC-VRF network-instances can provide aggregation for a group of servers into the same subnet. This
chapter defines concepts and procedures for configuring MAC-VRF network-instances and Integrated
Routing and Bridging (IRB) subinterfaces.

4.1 Overview

Data Center (DC) servers or hosts are connected to TOR routers so that they can be reached from other
TOR routers in the same IP fabric. The TOR nodes use BGP to learn and propagate subnet reachability
in the underlaying routing infrastructure. The servers or hosts connected to these TOR BGP routers
use routed subinterfaces on the TOR, and static routes or a PE-CE BGP session, to learn or advertise
reachability to the rest of the DC.

Each server requires a separate routed subinterface and subnet on the TOR, and the number of
subinterfaces and local routes in the route-table grows linearly as the number of servers increases. The
use of a MAC-VRF network-instance provides aggregation for a group of servers into the same subnet.
This saves routes and subinterfaces in the TOR. A MAC-VRF is attached to the default network-instance
by a single IRB interface and subnet, instead of a separate subinterface and route per server. The following
figure shows an example of MAC-VRF network-instances for server aggregation.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

24

 
 
 
 
Advanced Solutions Guide Release 24.10

MAC-VRF network-instances for server aggregation

Figure 2: MAC-VRF network-instances for server aggregation

In this example, Leaf-1 and Leaf-2 are configured with MAC-VRF instances that aggregate a group of
servers. These servers are assigned IP addresses on the same subnet and are connected to the leaf
default network-instance by a single IRB subinterface. The servers use a PE-CE BGP session with the
IRB IP address to exchange reachability. The use of the MAC-VRF with an IRB subinterface saves routed
subinterfaces on the default network-instance; only one routed subinterface is needed instead of one per
server.

4.2 Configuration of MAC-VRF network-instances and IRB subinterfaces

The following figure shows an example of how to configure MAC-VRF network-instances and their IRB
subinterfaces to the default network-instance, and how EBGP sessions are configured with the servers.
In this example, DUT2 is the TOR being configured. DUT1 and DUT3 are servers that are running BGP
against the DUT2 IRB subinterface.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

25

 
 
 
 
Advanced Solutions Guide Release 24.10

MAC-VRF network-instances for server aggregation

Figure 3: MAC-VRF and IRB example in DUT2

4.2.1 Example: Configure DUT2 with MAC-VRF, IRB, and static BGP on IRB

Prerequisites

This example assumes DUT2 is pre-configured with a default network-instance that runs BGP sessions to
the spine routers, as defined in the section: BGP for underlay routing.

About this task

This example shows how to configure the DUT2 with a MAC-VRF, bridged subinterfaces to DUT1 and
DUT3, and an IRB subinterface (see Figure 3: MAC-VRF and IRB example in DUT2).

Procedure

Step 1.

In candidate mode, create the interfaces and bridged subinterfaces to connect to DUT1 and
DUT3.

In this example:

• Connect ethernet-1/1 and ethernet-1/2 to DUT1 and DUT3, respectively. Although these

interfaces could be defined untagged, this example configures them as tagged (vlan-tagging
true).

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

26

 
 
 
 
Advanced Solutions Guide Release 24.10

MAC-VRF network-instances for server aggregation

• Create a subinterface with index 1 under each interface. The subinterface must be configured
as type bridged. Bridged subinterfaces can be associated with MAC-VRF instances so that
MAC learning and layer-2 forwarding can be enabled on them.

• The subinterfaces use vlan-id 100 because this is the VLAN ID used by the servers (DUT1

and DUT2) to send and receive frames.

Example

--{ candidate shared default }--[ interface * ]--
A:dut2# info
    interface ethernet-1/1 {
        description dut2-dut1
        vlan-tagging true
        subinterface 1 {
            type bridged
            vlan {
                encap {
                    single-tagged {
                        vlan-id 100
                    }
                }
            }
        }
    }
    interface ethernet-1/2 {
        description dut2-dut3
        vlan-tagging true
        subinterface 1 {
            type bridged
            vlan {
                encap {
                    single-tagged {
                        vlan-id 100
                    }
                }
            }
        }
    }

Step 2. Configure an IRB interface and subinterface to connect the MAC-VRF to the existing default

network-instance.

The IRB is configured in a similar way to a loopback interface and subinterfaces. The IRB
subinterface must be type routed, but does not need to be explicitly configured as routed.

Example

--{ candidate shared default }--[ interface irb* ]--
A:dut2# info
    interface irb1 {
        subinterface 1 {
            ipv4 {
                admin-state enable
                address 10.0.0.2/24 {
                }
            }
            ipv6 {
                admin-state enable
                address 2001:db8::2/64 {
                }
            }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

27

 
 
 
 
Advanced Solutions Guide Release 24.10

MAC-VRF network-instances for server aggregation

        }
    }

Step 3. Configure the network-instance type mac-vrf and associate it with the bridged and IRB interfaces.

Example

--{ candidate shared default }--[ network-instance MAC-VRF-1 ]--
A:dut2# info                              
    type mac-vrf
    admin-state enable
    interface ethernet-1/1.1 {
    }
    interface ethernet-1/2.1 {
    }
    interface irb1.1 {
    }

Step 4. Associate the same IRB interface with the network-instance default and configure the BGP IPv4

and IPv6 neighbors to DUT1 and DUT3.
See BGP for underlay routing for more information about configuring BGP sessions.

Example

--{ candidate shared default }--[ network-instance default ]--            
A:dut2# info
    type default
    admin-state enable
    router-id 2.2.2.2
    interface irb1.1 {
    }
    interface lo0.1 {
    }
    protocols {
        bgp {
            admin-state enable
            afi-safi ipv4-unicast {
                admin-state enable
            }
            autonomous-system 64502
            router-id 10.0.0.2
            ebgp-default-policy {
                import-reject-all false
            }
            failure-detection {
                enable-bfd true
                fast-failover true
            }
            group tor {
                admin-state enable
                export-policy pass-all
                afi-safi ipv4-unicast {
                    admin-state enable
                }
                afi-safi ipv6-unicast {
                    admin-state enable
               }
               local-as as-number 64502 {
               }
               timers {
                   minimum-advertisement-interval 1
               }
               trace-options {

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

28

 
 
 
 
Advanced Solutions Guide Release 24.10

MAC-VRF network-instances for server aggregation

                   flag update {
                   }
                   flag graceful-restart {
                   }
                   flag events {
                   }
                   flag keepalive {
                   }
                   flag notification {
                   }
                   flag open {
                   }
                   flag packets {
                   }
                   flag route {
                   }
                   flag socket {
                   }
                   flag timers {
                   }
              }
           }
           afi-safi ipv4-unicast {
               admin-state enable
           }
           afi-safi ipv6-unicast {
               admin-state enable
           }
           neighbor 10.0.0.1 {
              peer-as 64501
              peer-group tor
              transport {
                  local-address 10.0.0.2
              }
            }
           neighbor 10.0.0.3 {
               peer-as 64503
               peer-group tor
               transport {
                   local-address 10.0.0.2
               }
           }
           neighbor 2001:db8::1 {
               peer-as 64501
               peer-group tor
               transport {
                   local-address 2001:db8::2
               }
           }
           neighbor 2001:db8::3 {
               peer-as 64503
               peer-group tor
               transport {
                   local-address 2001:db8::2
               }
           }
        }
    }

Step 5. Review all the changes and commit if correct.

Example

--{ candidate shared default }--[  ]--

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

29

 
 
 
 
Advanced Solutions Guide Release 24.10

MAC-VRF network-instances for server aggregation

A:dut2# commit stay

Step 6. Check the state of the MAC-VRF and the connectivity to DUT1 and DUT3 using the following

commands:

• show network-instance MAC-VRF-1 interfaces

• show network-instance default interfaces

• show network-instance MAC-VRF-1 bridge-table mac-table all

• show arpnd arp-entries interface irb1

• show arpnd neighbors interface irb1

• show network-instance default protocols bgp neighbor

Example

A:dut2# show network-instance MAC-VRF-1 interfaces
====================================================================
Net instance    : MAC-VRF-1
Interface       : ethernet-1/1.1
Type            : bridged
Oper state      : up
====================================================================
Net instance    : MAC-VRF-1
Interface       : ethernet-1/2.1
Type            : bridged
Oper state      : up
====================================================================
Net instance    : MAC-VRF-1
Interface       : irb1.1
Oper state      : up
Ip mtu          : 1500
                  Prefix                      Origin        Status
  ==================================================================
  10.0.0.2/24                               static
  2001:db8::2/64                            static       preferred
  fe80::201:2ff:feff:41/64                  link-layer   preferred
====================================================================

A:dut2# show network-instance default interfaces
====================================================================
Net instance    : default
Interface       : irb1.1
Oper state      : up
Ip mtu          : 1500
                  Prefix                      Origin        Status
  ====================================================================
  10.0.0.2/24                               static
  2001:db8::2/64                            static       preferred
  fe80::201:2ff:feff:41/64                  link-layer   preferred
=====================================================================
Net instance    : default
Interface       : lo0.1
Oper state      : up
                  Prefix                      Origin        Status
  ====================================================================
  2.2.2.2/32                                static
  2001:db8:1::2/128                         static       preferred

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

30

 
 
 
 
Advanced Solutions Guide Release 24.10

MAC-VRF network-instances for server aggregation

=====================================================================

A:dut2# show network-instance MAC-VRF-1 bridge-table mac-table all
------------------------------------------------------------------------------------------------------
Mac-table of network instance MAC-VRF-1
------------------------------------------------------------------------------------------------------
+-------------------+----------------+-------+-----------+--------+-------+--------------------------+
|        address    |   Destination  | Dest  |   Type    | Active | Aging |  Last Update             |
|                   |                | Index |           |        |       |                          |
+===================+================+=======+===========+========+=======+==========================+
| 00:01:01:FF:00:00 | ethernet-1/1.1 | 16    | learnt    | true   | 287   | 2020-06-03T13:40:25.000Z |
| 00:01:02:FF:00:41 | irb-interface  | 0     | irb-      | true   | N/A   | 2020-06-02T13:53:50.000Z |
|                   |                |       | interface |        |       |                          |
| 00:01:03:FF:00:00 | ethernet-1/2.1 | 17    | learnt    | true   | 287   | 2020-06-03T13:40:25.000Z |
+-------------------+----------------+-------+-----------+--------+-------+--------------------------+
Total Irb Macs            :    1 Total    1 Active
Total Static Macs         :    0 Total    0 Active
Total Duplicate Macs      :    0 Total    0 Active
Total Learnt Macs         :    2 Total    2 Active
Total Macs                :    3 Total    3 Active
---------------------------------------------------------------------------------------------------

A:dut2# show arpnd arp-entries interface irb1
+-----------+--------------+----------+---------+----------------------+-------------------+
| Interface | Subinterface | Neighbor | Origin  |  Link layer address  |    Expiry         |
+===========+==============+=================+=========+===============+===================+
| irb1      |      1       | 10.0.0.1 | dynamic | 00:01:01:FF:00:00    | 3 hours from now  |
| irb1      |      1       | 10.0.0.3 | dynamic | 00:01:03:FF:00:00    | 3 hours from now  |
+-----------+--------------+----------+---------+----------------------+-------------------+
--------------------------------------------------------------------------------------------
  Total entries : 2 (0 static, 2 dynamic)
--------------------------------------------------------------------------------------------

A:dut2# show arpnd neighbors interface irb1
+-----------+-----------+----------------+---------+--------------------+---------+-----------+------+
| Interface |   Sub     | Neighbor       | Origin  | Link layer address | Current | Next state| Is   |
|           | interface |                |         |                    |  state  |  change   |Router 
+===========+===========+================+=========+====================+=========+===========+======+
| irb1      |    1      | 2001:db8::1    | dynamic | 00:01:01:FF:00:00  | stale   | 2 hours   | true |
|           |           |                |         |                    |         | from now  |      |
| irb1      |    1      | 2001:db8::3    | dynamic | 00:01:03:FF:00:00  | stale   | 2 hours   | true |
|           |           |                |         |                    |         | from now  |      |
| irb1      |    1      | fe80::201:1ff: | dynamic | 00:01:01:FF:00:00  | stale   | 2 hours   | true |
|           |           |  feff:0        |         |                    |         | from now  |      |
| irb1      |    1      | fe80::201:3ff: | dynamic | 00:01:03:FF:00:00  | stale   | 2 hours   | true |
|           |           | feff:0         |         |                    |         | from now  |      |
+-----------+-----------+----------------+---------+--------------------+---------+-----------+------+
------------------------------------------------------------------------------------------------------
  Total entries : 4 (0 static, 4 dynamic)
------------------------------------------------------------------------------------------------------

A:dut2# show network-instance default protocols bgp neighbor
-----------------------------------------------------------------------------------------------------
BGP neighbor summary for network-instance "default"
Flags: S static, D dynamic, L discovered by LLDP, B BFD enabled, - disabled, * slow
-----------------------------------------------------------------------------------------------------
+----------+-------------+-----+----+-------+-------------+---------------+------------+------------+
| Net-Inst |   Peer      |Group|Flag| Peer  |    State    |    Uptime     |  AFI/SAFI  | [Rx/Active |
|          |             |     |    |  -AS  |             |               |            |    /Tx]    |
+==========+=============+=====+====+=======+=============+===============+============+============+
| default  | 10.0.0.1    | tor | SB | 64501 | established | 0d:3h:12m:33s | ipv4-unicast | [3/2/4]  |

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

31

 
 
 
 
Advanced Solutions Guide Release 24.10

MAC-VRF network-instances for server aggregation

|          |             |     |    |       |             |               | ipv6-unicast | [3/2/4]  |
| default  | 10.0.0.3    | tor | SB | 64503 | established | 0d:3h:10m:55s | ipv4-unicast | [3/2/4]  |
|          |             |     |    |       |             |               | ipv6-unicast | [3/2/4]  |
| default  | 2001:db8::1 | tor | SB | 64501 | established | 0d:3h:12m:31s | ipv4-unicast | [0/0/0]  |
|          |             |     |    |       |             |               | ipv6-unicast | [6/0/6]  |
| default  | 2001:db8::3 | tor | SB | 64503 | established | 0d:3h:10m:52s | ipv4-unicast | [0/0/0]  |
|          |             |     |    |       |             |               | ipv6-unicast | [6/0/6]  |
+----------+-------------+-----+----+-------+-------------+---------------+--------------+----------+
-----------------------------------------------------------------------------------------------------
Summary:
4 configured neighbors, 4 configured sessions are established,0 disabled peers
0 dynamic peers

4.3 Advanced configuration: bridge-table settings

A MAC-VRF network-instance uses a bridge-table to forward frames between its subinterfaces. Some
bridge-table properties can be configured. For example:

Example:

--{ * candidate shared default }--[ network-instance MAC-VRF-1 bridge-table ]
A:dut2# tree detail
bridge-table!    net_inst_mgr
+-- discard-unknown-dest-mac?    net_inst_mgr
+-- mac-learning    net_inst_mgr
|   +-- admin-state?    net_inst_mgr
|   +-- aging    net_inst_mgr
|       +-- admin-state?    net_inst_mgr
|       +-- age-time?    net_inst_mgr
+-- mac-duplication    net_inst_mgr
|   +-- admin-state?    net_inst_mgr
|   +-- monitoring-window?    net_inst_mgr
|   +-- num-moves?    net_inst_mgr
|   +-- hold-down-time?    net_inst_mgr
|   +-- action?    net_inst_mgr
+-- mac-limit    net_inst_mgr
|   +-- maximum-entries?    net_inst_mgr
|   +-- warning-threshold-pct?    net_inst_mgr
+-- static-mac    l2_static_mac_mgr
    +-- mac* [address]    l2_static_mac_mgr
        +-- address    l2_static_mac_mgr
        +-- destination?M    l2_static_mac_mgr

Where:

• The ‟mac-learning” container provides control over how MACs are dynamically learned on the

subinterfaces, including whether learning is enabled (admin-state) or controlled by the aging timer
for the mac-table.

• The ‟mac-duplication” container controls how the system behaves when duplicate MACs are

detected.

• The ‟mac-limit” container provides parameters for limiting the maximum number of MACs installed

for a specific mac-vrf.

• The ‟static-macs” provides control to configure and associate to either a subinterface destination
or with a blackhole. Incoming frames with the source or destination MAC matching a configured
"blackholed mac" are discarded by the system.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

32

 
 
 
 
Advanced Solutions Guide Release 24.10

MAC-VRF network-instances for server aggregation

4.4 Advanced configuration: MAC-duplication for loop protection

SR Linux supports MAC-duplication detection and associated procedures to protect the system against
network loops. The following figure shows a simple loop and describes the associated configuration.

Figure 4: MAC-Duplication for loop protection

In this example, MAC-VRF 2 is connected using two bridged subinterfaces to a layer 2 switch. When a host
with MAC M1 sends a broadcast frame, a loop is created. MAC-duplication is, by default, enabled in mac-
vrf network-instances with the following parameters:

--{ * candidate shared default }--[ network-instance MAC-VRF-1 bridge-table mac-
duplication ]--
A:dut2# info detail                          
    admin-state enable
    monitoring-window 3
    num-moves 5
    hold-down-time 10
    action stop-learning

The loops shown in this example are resolved in the following sequence:

1. MAC-duplication detection.

• A MAC M1 is declared as ‟duplicate” when the number of moves across two or more subinterfaces

exceeds the configured num-moves in the configured monitoring-window.

• When M1 is ‟duplicate”, it is kept in a duplicate-entries list and stays associated with the last

subinterface where the MAC was learned before the number of moves exceed the num-moves
value.

2. MAC-duplication action.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

33

 
 
 
 
Advanced Solutions Guide Release 24.10

MAC-VRF network-instances for server aggregation

• When the MAC M1 is declared ‟duplicate” in a subinterface, an action is taken in that subinterface.
The action is configurable per network-instance and can be overridden on a per-subinterface basis.

• Possible actions on the subinterface are oper-down, blackhole, and stop-learning.

– oper-down - Brings down the subinterface, breaks the loop, and discards all the frames arriving

on the subinterface.

– blackhole - Discards frames with a source or destination MAC that matches the duplicate MAC.

but allows the remaining frames to forward normally on the subinterface.

– stop-learning - Does not discard any frame on the subinterface and keeps the existing MACs
learned against it. No new MACs are learned on the subinterface until the action is cleared.

--{ * candidate shared default }--[ network-instance MAC-VRF-1 bridge-table mac-duplication ]--
A:dut2# action <value>                                       
usage: action <blackhole|oper-down|stop-learning>
Action to take on the subinterface whose action is use-net-instance-action,
 upon detecting one or more mac addresses as duplicate
In particular:
- Oper-down: if configured, upon detecting a duplicate mac on the subinterface, the subinterface
  will be brought oper-down.
- Blackhole: upon detecting a duplicate mac on the subinterface, the mac will be blackholed. Any
  frame received on this or any other subinterface with MAC SA matching a blackhole mac is discarded.
- Stop-learning: this is the default action, compliant with RFC7432. Upon detecting a duplicate mac
 on the subinterface, the mac will not be relearned anymore on this or any subinterface.
Positional arguments: value

3. MAC-duplication hold-down-time and process restart.

• When the configured hold-down-time expires, the duplicate MAC is flushed from the mac-table and

the entire process restarts for the MAC.

• The duplicate action on a subinterface clears when there are no longer duplicate MAC addresses in

the subinterface.

As a loop protection mechanism, MAC-duplication is self-contained and does not require a control plane
protocol that runs network-wide among network devices.

4.4.1 Example: Configure MAC-duplication and troubleshoot loops in DUT2

About this task

Use this example to assist in configuring MAC-duplication. This example assumes MAC-VRF 1
is connected to a layer 2 switch (not shown) using two bridge subinterfaces (ethernet-1/1.2 and
ethernet-1/1.3). This creates a loop.

Configure DUT2 with the following MAC-duplication settings to troubleshoot the loop:

Procedure

Step 1. Use the mac-duplication command to configure MAC-duplication settings, as shown in the

following example:

Example

--{ candidate shared default }--[ network-instance MAC-VRF-1 ]-- 
A:dut2# info
    type mac-vrf
    admin-state enable

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

34

 
 
 
 
Advanced Solutions Guide Release 24.10

MAC-VRF network-instances for server aggregation

    interface ethernet-1/1.1 {
    }
    interface ethernet-1/1.2 {
    }
    interface ethernet-1/1.3 {
    }
    interface ethernet-1/2.1 {
    }
    interface irb1.1 {
    }
    bridge-table {
        mac-duplication {
            num-moves 3
            hold-down-time 300
            action stop-learning
        }
    }

Step 2. Configure the subinterfaces with the following mac-duplication actions:

In this example, the MAC-duplication action configured under the network-instance is overridden
by the more specific action under the subinterfaces 2 and 3. When traffic is generated by the
remote layer 2 switch, the same MAC address moves between ethernet-1/1.2 and ethernet-1/1.3.
After the third move, the MAC is declared a duplicate and appears in the duplicate-entries list:

Example

--{ * candidate shared default }--[ interface * subinterface * bridge-table mac-
duplication ]-- 
A:dut2# info
    interface ethernet-1/1 {
        subinterface 1 {
            bridge-table {
                mac-duplication {
                }
            }
        }
        subinterface 2 {
            bridge-table {
                mac-duplication {
                    action oper-down
                }
            }
        }
        subinterface 3 {
            bridge-table {
                mac-duplication {
                    action oper-down
                }
            }

Step 3. Use the show network-instance bridge-table mac-table command to display the duplicate

MAC entries.

Example

A:dut2# show network-instance MAC-VRF-1 bridge-table mac-table all
------------------------------------------------------------------------------------------------------
Mac-table of network instance MAC-VRF-1
------------------------------------------------------------------------------------------------------
+-------------------+----------------+-------+-----------+--------+-------+--------------------------+
| address           |  Destination   | Dest  |   Type    | Active | Aging |  Last Update             |
|                   |                | Index |           |        |       |                          |

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

35

 
 
 
 
Advanced Solutions Guide Release 24.10

MAC-VRF network-instances for server aggregation

+===================+================+=======+===========+========+=======+==========================+
| 00:01:01:FF:00:00 | ethernet-1/1.1 | 16    | learnt    | true   | 287   | 2020-06-03T13:40:25.000Z |
| 00:01:01:FF:00:41 | ethernet-1/1.3 | 20    | duplicate | true   | N/A   | 2020-06-05T20:07:24.000Z |
| 00:01:02:FF:00:41 | irb-interface  | 0     | irb-      | true   | N/A   | 2020-06-02T13:53:50.000Z |
|                   |                |       | interface |        |       |                          |
| 00:01:03:FF:00:00 | ethernet-1/2.1 | 17    | learnt    | true   | 287   | 2020-06-03T13:40:25.000Z |
+-------------------+----------------+-------+-----------+--------+-------+--------------------------+
Total Irb Macs            :    1 Total    1 Active
Total Static Macs         :    0 Total    0 Active
Total Duplicate Macs      :    1 Total    1 Active
Total Learnt Macs         :    2 Total    2 Active
Total Macs                :    4 Total    4 Active
----------------------------------------------------------------------------------------------------

A:dut2# show network-instance MAC-VRF-1 bridge-table mac-duplication duplicate-entries
----------------------------------------------------------------------------------------------------
Mac-Duplication in network instance MAC-VRF-1
----------------------------------------------------------------------------------------------------
Admin state            : enable
Monitoring window      : 3
Number of moves allowed: 3
Hold down time         : 300
Action                 : stop-learning
----------------------------------------------------------------------------------------------------
+-------------------+----------------+------------+--------------------------+---------------------+
| Duplicate MAC     | Destination    | Dest Index |      Detect Time         | Hold Time Remaining |
+===================+================+============+==========================+=====================+
| 00:01:01:FF:00:41 | ethernet-1/1.3 | 20         | 2020-06-05T20:07:24.000Z | 270                 |
+-------------------+----------------+------------+--------------------------+---------------------+
Total Duplicate Macs      :    1 Total    0 Active
---------------------------------------------------------------------------------------------------

4.4.2 Using logs to detect duplicate MACs

Procedure

You can use a log event to help troubleshoot when MACs are detected as duplicate, or when they are
deleted after the hold-down-timer. For example:

Example

[root@dut2 srlinux]# tail -f /var/log/srlinux/debug/sr_l2_mac_mgr.log 
2020-06-06T06:22:48.679070+00:00 dut2 local6|NOTI sr_l2_mac_mgr: bridgetable|2608|2608|00035|N: 
    A duplicate MAC address 00:01:01:FF:00:00 was detected on MAC-VRF-1.
2020-06-06T06:27:48.933312+00:00 dut2 local6|NOTI sr_l2_mac_mgr: bridgetable|2608|2608|00036|N: 
    A duplicate MAC address 00:01:01:FF:00:00 detected on MAC-VRF-1 is now deleted.

The network-instance manager logs also show when the subinterfaces go down as a result of MAC-
duplication. For example:

Example

[root@dut2 srlinux]# tail -f /var/log/srlinux/debug/sr_net_inst_mgr.log
2020-06-06T06:22:48.680609+00:00 dut2 local6|WARN sr_net_inst_mgr: netinst|2663|2663|00080|W: 
    The interface ethernet-1/1.3 in network-instance MAC-VRF-1 is now down for reason: 
    A duplicate MAC address has been detected

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

36

 
 
 
 
     
                         
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

5 EVPN-VXLAN for layer-2 and multi-homing

Ethernet Virtual Private Network (EVPN) is a standard technology in multi-tenant Data Centers (DCs).
EVPN provides a control frame framework for many functions. This chapter details the configuration and
operation of an EVPN and VXLAN (EVPN-VXLAN) solution for the following components:

• Bridged sub-Interfaces associated with a specific vlan-id or default sub-interfaces, that capture

untagged and non-explicitly configured vlan-tagged frames in tagged sub-interfaces.

• MAC-VRF type network-instances that are EVPN-enabled so that they can use Virtual Extended LAN

(VXLAN) tunnels to connect to other MAC-VRFs of the same Broadcast Domains (BD).

• EVPN-VXLAN control and data plane extensions as in [RFC8365], including EVPN route type 2 (MAC/

IP) and route type 2 (Inclusive Multicast Ethernet Tag [IMET]).

• Distributed security and protection for static-macs.

• The MAC duplication mechanism, extended to support EVPN, to provide loop protection.

• EVPN L2 multi-homing, including Ethernet Segment (ES) model configuration for all-active multi-

homing.

5.1 Overview

EVPN-VXLAN provides Layer-2 connectivity in multi-tenant DCs. EVPN-VXLAN Broadcast Domains (BD)
can span several leaf routers connected to the same IP fabric, allowing hosts attached to the same BD
to communicate as though they were connected to the same layer-2 switch. VXLAN tunnels bridge the
layer-2 frames between leaf routers with EVPN providing the control plane to automatically setup tunnels
and use them efficiently.

The following diagram shows this concept. In this example, four leaf routers are attached to the same BD
that is instantiated by a MAC-VRF on each leaf. SR Linux leaf routers support standard-based EVPN-
VXLAN [RFC8365]; therefore third-party leaf routers (LEAF-4 in this example) can be attached to the same
BD as the SR Linux leaf routers as long as they follow standard [RFC8365].

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

37

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

Figure 5: EVPN broadcast domain in a multi-tenant DCs

5.2 Configuration of EVPN-VXLAN broadcast domains

The following figure shows a configuration example of an EVPN-VXLAN BD that is distributed in multiple
leaf nodes in the same DC. The BD is instantiated by MAC-VRF-1 in each of the three leaf nodes. The
sections that follow describe how to configure and operate MAC-VRF-1 in each node.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

38

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

Figure 6: Example of EVPN-VXLAN broadcast domain

5.2.1 Configuring the underlay network

About this task

Before configuring the overlay BD, the underlay connectivity must be configured. In Figure 6: Example
of EVPN-VXLAN broadcast domain, the leaf routers are connected to the spines using routed links. A
routing protocol is enabled in the default network-instance of each leaf and spine node, so that reachability
of all the leaf VXLAN Termination End Point (VTEP) addresses is distributed throughout the IP fabric. In
SR Linux, you can use the following for the underlay routing protocol:

•

ISIS

• OSPF

• eBGP

The EVPN family must also be enabled for the distribution of EVPN routes among leaf routers of the same
tenant. EVPN is enabled using iBGP and typically a Route Reflector (RR), or eBGP.

Procedure

To configure the underlay network in this example, configure an eBGP-underlay BGP group to enable the
IPv4 and IPv6 unicast families, and configure an iBGP-evpn group for the distribution of the EVPN routes,
as shown in the following configuration on LEAF-3. In this case, a full mesh of iBGP EVPN sessions is
established among the three leaf routers, but a pair of RRs is typical.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

39

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

Example: Underlay Configuration

--{ [FACTORY] + candidate shared default }--[ network-instance default ]--    
A:dut3# info                                                                        
    type default
    admin-state enable
    description "Default network instance"
    router-id 3.3.3.3
    interface ethernet-1/1.1 {
    }
    interface ethernet-1/3.1 {
    }
    interface system0.0 {
    }
    protocols {
        bgp {
            admin-state enable
            afi-safi ipv4-unicast {
                admin-state enable
            }
            autonomous-system 3333
            router-id 3.3.3.3
            group eBGP-underlay {
                admin-state enable
                export-policy export-all
                import-policy import-all
                timers {
                    connect-retry 5
                    hold-time 5
                    keepalive-interval 2
                    minimum-advertisement-interval 2
                }
            }
            group iBGP-evpn {
                admin-state enable
                export-policy export-all
                import-policy import-all
                afi-safi evpn {
                    admin-state enable
                }
                local-as as-number 1234 {
                }
                timers {
                    minimum-advertisement-interval 1
                }
            }
            afi-safi ipv4-unicast {
                admin-state enable
            }
            afi-safi ipv6-unicast {
                admin-state enable
            }
            neighbor 1.1.1.1 {
                admin-state enable
                peer-as 1234
                peer-group iBGP-evpn
                transport {
                    local-address 3.3.3.3
                }
            }
            neighbor 2.2.2.2 {
                admin-state enable
                peer-as 1234
                peer-group iBGP-evpn

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

40

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

                transport {
                    local-address 3.3.3.3
                }
            }
            neighbor 4.4.4.4 {
                admin-state enable
                peer-as 1234
                peer-group iBGP-evpn
                transport {
                    local-address 3.3.3.3
                }
            }
            neighbor 10.2.3.2 {
                admin-state enable
                peer-as 2222
                peer-group eBGP-underlay
            }
            neighbor 10.3.4.4 {
                admin-state enable
                peer-as 4444
                peer-group eBGP-underlay
            }
            trace-options {
                flag packets {
                    modifier detail
                }
                flag update {
                    modifier detail
                }
                flag route {
                    modifier detail
                }
                flag socket {
                    modifier detail
                }
                flag notification {
                    modifier detail
                }
            }
        }
        linux {
            export-routes true
            export-neighbors true
        }
    }

In the example above, eBGP is used for underlay reachability, and iBGP for overlay EVPN route
distribution. The command local-as overrides the configuration of the bgp>autonomous-system so
that the overlay BGP sessions are established using the same autonomous system in the three leaf
routers.

The system0.0 interface hosts the loopback address used to originate and typically terminate VXLAN
packets. This address is also used by default as the next-hop of all EVPN routes.

Example: system0.0 interface configuration

The following example shows the configuration of the system0.0 interface in LEAF-3.

--{ [FACTORY] + candidate shared default }--[ interface system0 ]--  
A:dut3# info                                                
    admin-state enable
    subinterface 0 {
        admin-state enable

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

41

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

        ipv4 {
            admin-state enable
            address 3.3.3.3/32 {
            }
        }
    }

5.2.2 Configuring LEAF-3 with an EVPN-VXLAN enabled MAC-VRF

About this task

After LEAF-3 is configured as defined in Configuring the underlay network, use the following steps to
enable EVPN-VXLAN on LEAF-3.

In this example, Ethernet-1/2 connects HOST-3 to LEAF-3. Although this interface could be defined
untagged, this example configures the interface as tagged and using vlan-id (vlan-tagging true).

A subinterface with index 1 is created under the interface. The subinterface must be configured as type
bridged. Bridged subinterfaces can be associated with MAC-VRF instances so that MAC learning and
layer-2 forwarding can be enabled on each.

Procedure

Step 1.

In candidate mode, create the interfaces and bridged subinterfaces to connect LEAF-3 to
HOST-3.

Example
creation of interfaces/bridged subinterfaces

--{ [FACTORY] + candidate shared default }--[ interface ethernet-1/2 ]--
A:dut3# info                                                   
    description dut3_host3
    admin-state enable
    vlan-tagging true
    subinterface 1 {
        type bridged
        admin-state enable
        vlan {
            encap {
                single-tagged {
                    vlan-id 1
                }
            }
        }
    }

In the above example, the subinterface uses vlan-id 1 since this is the VLAN ID used by HOST-3
to send and receive frames. If you wanted HOST-3 to sent and received untagged traffic, the vlan
encap command can be configured with either of these options:

• vlan encap single-tagged vlan-id optional - where 'optional' captures all traffic when no

specific vlan-id has been defined.

• vlan encap untagged - where 'untagged' captures traffic with no tags or vlan-tag 0.

Step 2. After creating the access subinterfaces, create the vxlan-interfaces.

This allows MC-VRFs of the same BD to be connected throughout the IP fabric.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

42

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

The SR Linux models VXLAN as tunnels and vxlan-interfaces exist within them. The network-
instance and main property is the VNI or VXLAN network identifier. SR Linux VXLAN model
characteristics include:

• The tunnel-interface for vxlan is configured as vxlan<N> where the value of N is 0-255.

• Multiple tunnel-interfaces can be configured. The tunnel-interface can host multiple vxlan-

interfaces.

•

vxlan-interfaces are configured under tunnel-interfaces with an associated number in the
range 0-4294967295. Minimally, the vxlan-interface must have an index, type, and ingress
VNI.

• A vxlan-interface can only be associated with one network-instance, and in the R21.3, a

network-instance can have only one vxlan-interface.

• The vxlan-interface type can be routed or bridged. When used for EVPN-VXLAN Layer-2 in

MAC-VRFs, the type must be "bridged".

• The ingress VNI must be configured. The VNI is used to find the MAC-VRF where the

inner MAC lookup is performed. The egress VNI is not configured and is determined by
the imported EVPN routes. SR Linux requires that the egress VNI (discovered) matches
the configured ingress VNI so that two leaf routers attached to the same BD can exchange
packets.

Example
vxlan1 vxlan-interface configuration

--{ [FACTORY] + candidate shared default }--[ tunnel-interface * ]--    
A:dut3# info
    tunnel-interface vxlan1 {
        vxlan-interface 1 {
            type bridged
            ingress {
                vni 1
            }
        }
    }

Outer VLAN tagging is supported (one VLAN tag only), assuming that the egress subinterface in
the default network-instance uses vlan-tagging. No inner VLAN tags can be pushed or popped on
vxlan-interfaces, but vlan tags that are not stripped-off at the ingress bridged subinterfaces are
transparently carried over the VXLAN tunnels.

The following applies for MTU and fragmentation for VXLAN interfaces:

• No specific MTU checks are performed in network-instances with VXLAN.

• The default network-instance interface MTU should be made large enough to allow room for

the VXLAN overhead.

• The Don't Fragment (DF) flag is always set in the VXLAN outer IP header.

• Reassembly is not supported for VXLAN packets.

Step 3. Configure the network-instance type mac-vrf and associate it with the bridged interfaces and

vxlan-interface to.

A bgp-evpn enabled mac-vrf requires the association of at least one bridged subinterface and
one bridged vxlan-interface.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

43

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

Example
mac-vrf configuration and bridged interface association

--{ [FACTORY] + candidate shared default }--[ network-instance MAC-VRF-1 ]--
A:dut3# info                                                       
    type mac-vrf
    admin-state enable
    interface ethernet-1/2.1 {
    }
    vxlan-interface vxlan1.1 {
    }

Step 4. Enable EVPN in the mac-vrf by configuring the bgp-vpn and the bgp-evpn protocol containers:

• bgp-vpn - Provides the configuration of the bgp-instances where the route-distinguisher and

the import/export route-targets used for the EVPN routes exist. Import and export policies can
be used instead of explicit route-targets. In the current release, only one bgp-instance per
network-instance is supported.

• bgp-evpn - Hosts all the commands required to enable EVPN in the network-instance. At a

minimum, a reference to bgp-instance 1 is configured, along with the reference to the vxlan-
interface (where EVPN is enabled) and the EVI. The EVI or EVPN Instance identifier is a two-
byte value that is mandatory, and is used for:

– The auto-derivation of the route-distinguisher (RD). If a manual RD is not configured, the
RD is auto-derived as system-ip:evi. Where the system-ip is the IP address configured in
the system0.0 subinterface.

– The auto-derivation of the route-target (RT). If a manual RT is not configured, the RT is
auto-derived as autonomous-system:evi. The autonomous-system is configured in the
default network-instance.

– The value used to represent the MAC-VRF in the DF Election algorithm. See Multi-homing

configuration for EVPN broadcast domains.

Example
Configure bgp-vpn and bgp-evpn protocol containers

--{ [FACTORY] + candidate shared default }--[ network-instance MAC-VRF-1 ]--
A:dut3# info                                                       
    type mac-vrf
    admin-state enable
    interface ethernet-1/2.1 {
    }
    vxlan-interface vxlan1.1 {
    }
    protocols {
        bgp-evpn {
            bgp-instance 1 {
                admin-state enable
                vxlan-interface vxlan1.1
                evi 1
                ecmp 2
            }
        }
        bgp-vpn {
            bgp-instance 1 {
                route-target {
                    export-rt target:1234:1
                    import-rt target:1234:1

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

44

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

                }
            }
        }
    }

Each leaf routers is configured with a different autonomous-system number. Therefore, EVI-
based auto-derived RTs cannot be used or the three leaf routers would not produce the
same import and export route-targets for the MAC-VRFs of the same BD. Therefore, RTs are
configured manually.

Step 5. Review the changes. If correct, commit the changes.

Example

A:dut2# commit stay 
--{ candidate shared default }--[  ]--                               

5.2.3 Checking the EVPN-VXLAN operation in MAC-VRFs

After all leaf routers attached to the same BD are configured, check the state of the MAC-VRF and
connectivity to LEAF-2 and LEAF-3.

5.2.3.1 Checking vxlan-interface configuration

Procedure

Use the show tunnel-interface vxlan-interface and show network-instance vxlan-interface commands
to check that the vxlan-interface is properly configured and associated with the network-instance. If the
network-instance vxlan-interface is oper-down, a reason is shown. The egress source-ip shown in the
output should match the IPv4 address configured in the subinterface system0.0.

Example: Check vxlan-interface configuration

--{ [FACTORY] + candidate shared default }--[  ]-- 
A:dut3# show tunnel-interface vxlan1 vxlan-interface 1 brief
---------------------------------------------------------------------------------
Show report for vxlan-tunnels 
---------------------------------------------------------------------------------
+------------------+-----------------+---------+-------------+------------------+
| Tunnel Interface | VxLAN Interface |  Type   | Ingress VNI | Egress source-ip |
+==================+=================+=========+=============+==================+
| vxlan1           | vxlan1.1        | bridged | 1           | 3.3.3.3/32       |
+------------------+-----------------+---------+-------------+------------------+
--------------------------------------------------------------------------------
Summary
  1 tunnel-interfaces, 1 vxlan interfaces
  5 vxlan-destinations, 2 unicast, 1 es, 2 multicast, 0 ip
------------------------------------------------------------ 

A:dut3# show network-instance MAC-VRF-1 vxlan-interface vxlan1.1
------------------------------------------------------------------------------------
Show report for network instance "MAC-VRF-1" VxLAN interface table
------------------------------------------------------------------------------------
====================================================================================
Network-instance: MAC-VRF-1
VxLAN-Interface : vxlan1.1

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

45

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

Type            : bridged
Oper state      : up
Oper-down-reason: None
====================================================================================

5.2.3.2 Checking mac-vrf, bgp-vpn, and bgp-evpn parameters

Procedure

Use the show network-instance protocols bgp-vpn and show network-instance protocols bgp-
evpn commands to check that the mac-vrf, bgp-vpn, and bgp-evpn parameters are properly configured. A
manual or auto-derived RD/RT must exist, or the bgp-evpn bgp-instance will be oper-down.

Example: Check mac-vrf, bgp-vpn, and bgp-evpn parameters

A:dut3# show network-instance MAC-VRF-1 protocols bgp-vpn bgp-instance 1
===================================================================================
Net Instance   : MAC-VRF-1
    bgp Instance 1
-----------------------------------------------------------------------------------
        route-distinguisher: 3.3.3.3:1, auto-derived-from-evi
        export-route-target: target:1234:1, manual
        import-route-target: target:1234:1, manual
====================================================================================
================================================================================
--{ [FACTORY] + candidate shared default }--[  ]--
A:dut3# show network-instance MAC-VRF-1 protocols bgp-evpn bgp-instance 1
====================================================================================
Net Instance   : MAC-VRF-1
    bgp Instance 1 is enabled and None
------------------------------------------------------------------------------------
        VXLAN-Interface   : vxlan1.1
        evi               : 1
        ecmp              : 2
        default-admin-tag : 0
        oper-down-reason  : N/A
        EVPN Routes
            Next hop      : None
            MAC/IP Routes : None
            IMET Routes   : None, originating-ip None
====================================================================================
--{ [FACTORY] + candidate shared default }--[  ]-- 

5.2.3.3 Checking VXLAN tunnels

Procedure

Use the show tunnel vxlan-tunnel command to check for the creation of VXLAN tunnels to the remote
VTEPs. After receiving EVPN routes from the remote leaf routers with VXLAN encapsulation, the
vxlan_mgr creates VTEPs from the EVPN routes next-hops. Each VTEP gets an index allocated by the
fib_mgr (per source and destination tunnel IP addresses) if the next-hop is resolved in the default network-
instance. The state of the two remote VTEPs is shown with their own indexes. EVPN routes are received
with Next Hops 2.2.2.2 and 4.4.4.4 respectively.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

46

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

Example: Check VXLAN tunnels

--{ [FACTORY] + candidate shared default }--[  ]--
A:dut3# show tunnel vxlan-tunnel all
---------------------------------------------------------------------------------
Show report for vxlan-tunnels 
--------------------------------------------------------------------------------
+--------------+--------------+--------------------------+
| VTEP Address |    Index     |       Last Change        |
+==============+==============+==========================+
| 2.2.2.2      | 278779228830 | 2021-02-15T11:07:23.000Z |
| 4.4.4.4      | 278779228829 | 2021-02-15T18:15:28.000Z |
+--------------+--------------+--------------------------+
2 VXLAN tunnels, 2 active, 0 inactive
-----------------------------------------------------------

5.2.3.4 Checking tunnel-table entries

Procedure

Use the show network-instance tunnel-table all command to display all tunnel-table entries. When a
VTEP is created in the vxlan-tunnel table and a non-zero index is allocated, a tunnel-table entry is created
in the tunnel-table of the default network-instance.

If the next hop is not resolved to a route in the default network-instance route-table, the index in the vxlan-
tunnel table shows as 0 for the VTEP and no tunnel-table is created. If the tunnel prefix in the tunnel-table
is resolved, but the system runs out of hardware index resources, the tunnel shows in the tunnel-table, but
is not programmed. A non-programmed-reason is displayed.

Example: Check tunnel-table entries

--{ [FACTORY] + candidate shared default }--[  ]--
A:dut3# show network-instance default tunnel-table all
-------------------------------------------------------
Show report for network instance "default" tunnel table
------------------------------------------------------------------------------------------------------
+-------------+-----------+-------+-------+--------+------------+----------+-------------------------+
| IPv4 Prefix |   Owner   | Type  | Index | Metric | Preference | Fib-prog |       Last Update       |
+=============+===========+=======+=======+========+============+==========+=========================+
| 2.2.2.2/32  | vxlan_mgr | vxlan | 4     | 0      | 0          | Y        | 2021-03-01T10:41:38.590Z|
| 4.4.4.4/32  | vxlan_mgr | vxlan | 5     | 0      | 0          | Y        | 2021-03-01T10:45:08.633Z|
+-------------+-----------+-------+-------+--------+------------+----------+-------------------------+
-----------------------------------------------------------------------------------------------------
2 VXLAN tunnels, 2 active, 0 inactive
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
Show report for network instance "default" tunnel table
-----------------------------------------------------------------------------------------------------

5.2.3.5 Checking statistics

About this task

When the three leaf routers exchange packets over the VXLAN, LEAF-3 displays statistics for all individual
VTEPs. Statistics include:

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

47

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

• Global-level ingress/egress packets and octets. Global in/out octets and packets are aggregations of
the individual statistics per VTEP. ‟in-discarded-packets” are vxlan packets discarded as a result of a
non-existent local VNI, packets from a source VTEP are not discovered in the control plan, and packets
are not aggregations of individual per VTEP dropped packets

• Per VTEP packets and octets with in/out discarded packets.

Procedure

Use the info from state tunnel vxlan-tunnel command to check the VTEP statistics.

To clear statistics, use the following command: tools tunnel vxlan-tunnel vtep 2.2.2.2 statistics clear

Example: Check statistics

--{ [FACTORY] + candidate shared default }--[  ]--
A:dut3# info from state tunnel vxlan-tunnel
    tunnel {
        vxlan-tunnel {
            vtep 2.2.2.2 {
                index 278779228830
                last-change "8 hours ago"
                statistics {
                    in-octets 0
                    in-packets 0
                    in-discarded-packets 0
                    out-octets 0
                    out-packets 0
                    out-discarded-packets 0
                }
            }
            vtep 4.4.4.4 {
                index 278779228829
                last-change "an hour ago"
                statistics {
                    in-octets 555720
                    in-packets 5052
                    in-discarded-packets 0
                    out-octets 0
                    out-packets 0
                    out-discarded-packets 0
                }
            }
            statistics {
                in-octets 555720
                in-packets 5052
                in-discarded-packets 0
                out-octets 0
                out-packets 0
            }
        }
    }

5.2.3.6 Checking for received IMET routes and multicast destination creation

About this task

IMET routes are used for auto-discovery and the creation of the default flood list for vxlan in the MAC-VRF.
When LEAF-3 receives and imports the IMET routes from LEAF-2 and LEAF-4, it creates a VXLAN default
flood list. BUM frames received on a bridged subinterface are ingress-replicated to the VTEPs on the list.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

48

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

Procedure

Use the show and info from state commands shown in the following example to check that the IMET
routes for the BD from LEAF-2 and LEAF-4 have been received and they have created multicast
destinations in the MAC-VRF. Note that the VNI is received in the PMSI tunnel attribute and not in the
route’s Network Layer Reachability Information (NLRI).

Example: Check for received IMET routes and multicast destination creation

--{ [FACTORY] + candidate shared default }--[ ]--
A:dut3# show network-instance default protocols bgp routes evpn route-type 3 detail
------------------------------------------------------------------------------------
Show report for the EVPN routes to network "*" network-instance  "default"
------------------------------------------------------------------------------------
Route Distinguisher: 2.2.2.2:1
Tag-ID             : 0
Originating router : 2.2.2.2
neighbor           : 2.2.2.2
Received paths     : 1
  Path 1: <Best,Valid,Used,>
    VNI             : 1
    Route source    : neighbor 2.2.2.2 (last modified 9h11m44s ago)
    Route preference: No MED, LocalPref is 100
    Atomic Aggr     : false
    BGP next-hop    : 2.2.2.2
    AS Path         :  i
    Communities     : [target:1234:1, bgp-tunnel-encap:VXLAN]
    RR Attributes   : No Originator-ID, Cluster-List is []
    Aggregation     : None
    Unknown Attr    : None
    Invalid Reason  : None
    Tie Break Reason: none
------------------------------------------------------------------------------------
Route Distinguisher: 4.4.4.4:1
Tag-ID             : 0
Originating router : 4.4.4.4
neighbor           : 4.4.4.4
Received paths     : 1
  Path 1: <Best,Valid,Used,>
    VNI             : 1
    Route source    : neighbor 4.4.4.4 (last modified 9h11m44s ago)
    Route preference: No MED, LocalPref is 100
    Atomic Aggr     : false
    BGP next-hop    : 4.4.4.4
    AS Path         :  i
    Communities     : [target:1234:1, bgp-tunnel-encap:VXLAN]
    RR Attributes   : No Originator-ID, Cluster-List is []
    Aggregation     : None
    Unknown Attr    : None
    Invalid Reason  : None
    Tie Break Reason: none
------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--
--{ [FACTORY] + candidate shared default }--[  ]--
A:dut3# info from state network-instance default bgp-rib evpn rib-in-out rib-in-post imet-
routes * originating-router * ethernet-tag-id * neighbor *
    network-instance default {
        bgp-rib {
            evpn {
                rib-in-out {
                    rib-in-post {
                        imet-routes 2.2.2.2:1 originating-router 2.2.2.2 ethernet- tag-id
 0 neighbor 2.2.2.2 {

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

49

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

                            attr-id 193
                            last-modified 2021-02-15T11:07:21.500Z
                            used-route true
                            valid-route true
                            best-route true
                            stale-route false
                            pending-delete false
                            tie-break-reason none
                            invalid-reason {
                                rejected-route false
                                as-loop false
                                next-hop-unresolved false
                                cluster-loop false
                            }
                        }
                        imet-routes 4.4.4.4:1 originating-router 4.4.4.4 ethernet-tag-id 0
 neighbor 4.4.4.4 {
                            attr-id 197
                            last-modified 2021-02-15T11:07:21.500Z
                            used-route true
                            valid-route true
                            best-route true
                            stale-route false
                            pending-delete false
                            tie-break-reason none
                            invalid-reason {
                                rejected-route false
                                as-loop false
                                next-hop-unresolved false
                                cluster-loop false
                            }
                        }
                    }
                }
            }
        }
    }
--{ [FACTORY] + candidate shared default }--[  ]--
A:dut3# info from state network-instance default bgp-rib attr-sets attr-set rib-in index
 {193,197}
    network-instance default {
        bgp-rib {
            attr-sets {
                attr-set rib-in index 193 {
                    origin igp
                    atomic-aggregate false
                    next-hop 2.2.2.2
                    med 0
                    local-pref 100
                    aggregator {
                    }
                    pmsi-tunnel {
                        tunnel-type ingress-replication
                        vni 1
                        tunnel-endpoint 2.2.2.2
                    }
                    communities {
                        ext-community [
                            target:1234:1
                            bgp-tunnel-encap:VXLAN
                        ]
                    }
                    unknown-attributes {
                    }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

50

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

                }
                attr-set rib-in index 197 {
                    origin igp
                    atomic-aggregate false
                    next-hop 4.4.4.4
                    med 0
                    local-pref 100
                    aggregator {
                    }
                    pmsi-tunnel {
                        tunnel-type ingress-replication
                        vni 1
                        tunnel-endpoint 4.4.4.4
                    }
                    communities {
                        ext-community [
                            target:1234:1
                            bgp-tunnel-encap:VXLAN
                        ]
                    }
                    unknown-attributes {
                    }
                }
            }
        }
    }

5.2.3.7 Checking for multicast-destinations

About this task

If the IMET routes from LEAF-2 and LEAF-4 are imported for MAC-VRF-1, the corresponding multicast
VXLAN destinations are added.

Procedure

Use the show tunnel-interface vxlan-interface bridge-table multicast-destinations command to check
the multicast VXLAN destinations are added.

Example: Check for multicast-destinations

--{ [FACTORY] + candidate shared default }--[  ]--
A:dut3# show tunnel-interface vxlan1 vxlan-interface 1 bridge-table multicast-destinations
 destination *
------------------------------------------------------------------------------------
Show report for vxlan-interface vxlan1.1 multicast destinations (flooding-list)
------------------------------------------------------------------------------------
+--------------+------------+-------------------+----------------------+
| VTEP Address | Egress VNI | Destination-index | Multicast-forwarding |
+==============+============+===================+======================+
| 2.2.2.2      | 1          | 278779228840      | BUM                  |
| 4.4.4.4      | 1          | 278779228838      | BUM                  |
+--------------+------------+-------------------+----------------------+
------------------------------------------------------------------------
Summary
  2 multicast-destinations
------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

51

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

5.2.3.8 Checking mac-table and MAC/IP routes

Procedure

When traffic is exchanged between HOST-3 and HOST-12, the MACs are learned on the access bridged
sub-interfaces and advertised in MAC/IP routes. The MAC/IP routes are imported, and the MACs
programmed in the mac-table. Use the show network-instance bridge-table mac-table all and show
network-instance protocols bgp routes evpn route-type summary commands to check the MAC/IP
routes and the programmed MACs.

Example: Check mac-table and MAC/IP routes

--{ [FACTORY] + candidate shared default )--[ ]--
A:dut3# show network-instance MAC-VRF-1 bridge-table mac-table all
-----------------------------------------------------------------------------------------------------
Mac-table of network instance MAC-VRF-1
-----------------------------------------------------------------------------------------------------
+--------------+---------------------------+------------+------+--------+-------+-------------------+
|   Address    |            Destination    | Dest Index | Type | Active | Aging |    Last Update    |
+==============+===========================+============+======+========+=======+===================+
| 00:00:00:00: | vxlan-interface:vxlan1.1  | 2787792288 | evpn | true   | N/A   | 2021-02-16T10:54: |
|  00:01       | esi:01:24:24:24:24:24:24: | 46         |      |        |       |  54.000Z          |
|              |  00:00:01                 |            |      |        |       |                   |
| 00:00:00:00: | vxlan-interface:vxlan1.1  | 2787792288 | evpn | true   | N/A   | 2021-02-16T10:54: |
|  00:02       | vtep:2.2.2.2 vni:1        | 40         |      |        |       |  54.000Z          |
| 00:00:00:00: | ethernet-1/2.1            | 12         |learnt| true   | 300   | 2021-02-16T10:54: |
|  00:03       |                           |            |      |        |       |  54.000Z          |
| 00:00:00:00: | vxlan-interface:vxlan1.1  | 2787792288 | evpn | true   | N/A   | 2021-02-16T10:54: |
|  00:04       | vtep:4.4.4.4 vni:1        | 38         |      |        |       |  54.000Z          |
+--------------+---------------------------+------------+------+--------+-------+-------------------+
Total Irb Macs            :    0 Total    0 Active
Total Static Macs         :    0 Total    0 Active
Total Duplicate Macs      :    0 Total    0 Active
Total Learnt Macs         :    1 Total    1 Active
Total Evpn Macs           :    3 Total    3 Active
Total Irb anycast Macs    :    0 Total    0 Active
Total Macs                :    4 Total    4 Active
---------------------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--                                                    
A:dut3# show network-instance default protocols bgp routes evpn route-type 2 summary
------------------------------------------------------------------------------------
Show report for the BGP route table of network-instance "default"
------------------------------------------------------------------------------------
Status codes: u=used, *=valid, >=best, x=stale
Origin codes: i=IGP, e=EGP, ?=incomplete
-----------------------------------------------------------------------------------
BGP Router ID: 3.3.3.3      AS: 3333      Local AS: 3333
-----------------------------------------------------------------------------------
Type 2 MAC-IP Advertisement Routes
+------+-----------+-----+--------------+---------+---------+---------+---+-------------------+------+
|Status| Route-dis-| Tag | MAC-address  | IP-     | Neighbor|  Next-  |VNI|    ESI            | MAC  |
|      | tinguisher| ID  |              | address |         |   Hop   |   |                   | Mob. |
+======+===========+=====+==============+=========+=========+=========+===+===================+======+
| u*>  | 2.2.2.2:1 | 0   | 00:00:00:00: | 0.0.0.0 | 2.2.2.2 | 2.2.2.2 | 1 | 00:00:00:00:00:00 | -    |
|      |           |     | 00:02        |         |         |         |   | 00:00:00:00       |      |
| u*>  | 4.4.4.4:1 | 0   | 00:00:00:00: | 0.0.0.0 | 4.4.4.4 | 4.4.4.4 | 1 | 01:24:24:24:24:24 | -    |
|      |           |     | 00:01        |         |         |         |   | 24:00:00:01       |      |
| u*>  | 4.4.4.4:1 | 0   | 00:00:00:00: | 0.0.0.0 | 4.4.4.4 | 4.4.4.4 | 1 | 00:00:00:00:00:00:| -    |
|      |           |     | 00:04        |         |         |         |   | 00:00:00:0 0      |      |
+------+-----------+-----+--------------+---------+---------+---------+---+-------------------+------+
------------------------------------------------------------------------------------------------------

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

52

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

3 MAC-IP Advertisement routes 3 used, 3 valid
------------------------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]-- 

5.2.3.9 Checking unicast destinations

About this task

The reception of MAC/IP routes also creates unicast destinations in the vxlan-interface. In some cases, the
unicast destinations are Ethernet Segment (ES) destinations if the MAC/IP routes are advertised from an
ES. See Multi-homing configuration for EVPN broadcast domains for details.

Procedure

Use the show tunnel-interface vxlan-interface bridge-table unicast-destinations command to display
the unicast destinations.

Example: Check unicast destinations

--{ [FACTORY] + candidate shared default }--[  ]--
A:dut3# show tunnel-interface vxlan1 vxlan-interface 1 bridge-table unicast-destinations destination *
-----------------------------------------------------------------------------------------------------
Show report for vxlan-interface vxlan1.1 unicast destinations
----------------------------------------------------------------------------------------------------
Destinations
-------------------------------------------------------------------------------
+--------------+------------+-------------------+-----------------------------+
| VTEP Address | Egress VNI | Destination-index | Number MACs (Active/Failed) |
+==============+============+===================+=============================+
| 2.2.2.2      | 1          | 278779228840      | 1(1/0)                      |
| 4.4.4.4      | 1          | 278779228838      | 1(1/0)                      |
+--------------+------------+-------------------+-----------------------------+
-------------------------------------------------------------------------------
Ethernet Segment Destinations
------------------------------------------------------------------------------------------------------
+-------------------------------+-------------------+------------------+-----------------------------+
|              ESI              | Destination-index |      VTEPs       | Number MACs (Active/Failed) |
+===============================+===================+==================+=============================+
| 01:24:24:24:24:24:24:00:00:01 |                   | 2.2.2.2, 4.4.4.4 | 0(0/0)                      |
+-------------------------------+-------------------+------------------+-----------------------------+
------------------------------------------------------------------------------------------------------
Summary
  3 unicast-destinations, 2 non-es, 1 es
  2 MAC addresses, 2 active, 0 non-active
-----------------------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]-- 

5.2.4 Checking MAC mobility, MAC protection and MAC loop protection in EVPN-VXLAN

BDs

MAC mobility and MAC protection are implemented following [RFC7432]. MAC loop protection follows
[draft-ietf-bess-rfc7432bis].

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

53

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

5.2.4.1 Checking MAC mobility

About this task

MAC Mobility is an event that triggers the fast move and re-learn of a MAC in a different leaf router. Mobility
is common in DCs with some workloads moving between racks in the same DC. EVPN provides tools
for fast mobility because MAC/IP routes are advertised with a sequence number that indicates the latest
location of a MAC. This sequence number is used by the leaf routers to program the MAC with the correct
VXLAN destination.

Procedure

To check MAC mobility, use the show network-instance bridge-table mac-table command.

Example: MAC mobility (1 of 2)

Using Figure 6: Example of EVPN-VXLAN broadcast domain as reference, if HOST-2 moves from
LEAF-2 to LEAF-3, and you review the programming of the MAC in LEAF-4, MAC 00:00:00:00:00:02
is learned against VXLAN destination vtep:2.2.2.2 vni:1:

--{ [FACTORY] + candidate shared default }--[ network-instance MAC-VRF-1 bridge-table ]--
A:dut4# /show network-instance MAC-VRF-1 bridge-table mac-table all
----------------------------------------------------------------------------------------------------
Mac-table of network i
----------------------------------------------------------------------------------------------------
+--------------------+-------------------------+------------+-------+--------+-------+--------------+
|      Address       |   Destination           | Dest Index | Type  | Active | Aging | Last Update  |
+====================+=========================+============+=======+========+=======+==============+
| 00:00:00:00:00:01  |lag1.1                   | 11         | learnt| true   | 300   |2021-02-16T11:|
|                    |                         |            |       |        |       | 32:14.000Z   |
| 00:00:00:00:00:02  |vxlan-interface:vxlan1.1 | 2787793311 | evpn  | true   | N/A   |2021-02-16T11:|
|                    | vtep:2.2.2.2 vni:1      | 82         |       |        |       | 32:15.000z   |
| 00:00:00:00:00:03  |vxlan-interface:vxlan1.1 | 2787793311 | evpn  | true   | N/A   |2021-02-16T11:|
|                    | vtep:3.3.3.3 vni:1      | 84         |       |        |       | 32:15.000Z   |
| 00:00:00:00:00:04  |ethernet-1/13.1          | 13         | learnt| true   | 300   |2021-02-16T11:|
|                    |                         |            |       |        |       | 32:14.000Z   |
| 00:CA:FE:CA:FE:04  |ethernet-1/13.1          | 13         | static| true   | N/A   |2021-02-16T11:|
|                    |                         |            |       |        |       | 10:26.000Z   |
+--------------------+-------------------------+------------+-------+--------+-------+--------------+
Total Irb Macs            :    0 Total    0 Active
Total Static Macs         :    1 Total    1 Active
Total Duplicate Macs      :    0 Total    0 Active
Total Learnt Macs         :    2 Total    2 Active
Total Evpn Macs           :    2 Total    2 Active
Total Evpn static Macs    :    0 Total    0 Active
Total Irb anycast Macs    :    0 Total    0 Active
Total Macs                :    5 Total    5 Active
-----------------------------------------------------------------------------------------------------

Example: MAC mobility (2 of 2)

After the mobility event, LEAF-4 receives the MAC with a higher sequence number. This makes
LEAF-4 reprogram the MAC against LEAF-3 as shown below:

2021-02-16T03:33:53.505253-08:00 dut4 local6|DEBU sr_bgp_mgr: bgp|4959|5178|402506|D:
 VR default (1) Peer 1: 3.3.3.3 UPDATE: Peer 1: 3.3.3.3 - Received BGP UPDATE:
    Withdrawn Length = 0
    Total Path Attr Length = 96
    Flag: 0x90 Type: 14 Len: 44 Multiprotocol Reachable NLRI:
        Address Family EVPN

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

54

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

        NextHop len 4 NextHop 3.3.3.3
        Type: EVPN-MAC Len: 33 RD: 3.3.3.3:1 ESI: ESI-0, tag: 0, mac len: 48 mac: 00:00:00:00:00:02,
              IP len: 0, IP: NULL, label1: 1 
    Flag: 0x40 Type: 1 Len: 1 Origin: 0
    Flag: 0x40 Type: 2 Len: 0 AS Path:
    Flag: 0x80 Type: 4 Len: 4 MED: 0
    Flag: 0x40 Type: 5 Len: 4 Local Preference: 100
    Flag: 0xc0 Type: 16 Len: 24 Extended Community:
        target:1234:1
        bgp-tunnel-encap:VXLAN
        mac-mobility:Seq:1
--{ [FACTORY] + candidate shared default }--[  ]--                                                   

A:dut4# show network-instance MAC-VRF-1 bridge-table mac-table all
------------------------------------------------------------------------------------------------------
-
Mac-table of network instance MAC-VRF-1
------------------------------------------------------------------------------------------------------
-
+--------------------+-------------------------+------------+-------+--------+------+---------------+
|      Address       |       Destination       | Dest Index | Type  | Active | Aging| Last Update   |
+====================+=========================+============+=======+========+======+===============+
| 00:00:00:00:00:01  |lag1.1                   | 11         | learnt| true   | 180  |2021-02-16T11: |
|                    |                         |            |       |        |      | 32:14.000Z    |
| 00:00:00:00:00:02  |vxlan-interface:vxlan1.1 | 2787793311 | evpn  | true   | N/A  |2021-02-16T11: |
|                    | vtep:3.3.3.3 vni:1      | 84         |       |        |      | 33:54.000Z    |
| 00:00:00:00:00:03  |vxlan-interface:vxlan1.1 | 2787793311 | evpn  | true   | N/A  |2021-02-16T11: |
|                    | vtep:3.3.3.3 vni:1      | 84         |       |        |      | 32:15.000Z    |
| 00:00:00:00:00:04  |ethernet-1/13.1          | 13         | learnt| true   | 180  |2021-02-16T11: |
|                    |                         |            |       |        |      | 32:14.000Z    |
| 00:CA:FE:CA:FE:04  |ethernet-1/13.1          | 13         | static| true   | N/A  |2021-02-16T11: |
|                    |                         |            |       |        |      | 10:26.000Z    |
+--------------------+-------------------------+------------+-------+--------+------+---------------+
Total Irb Macs            :    0 Total    0 Active
Total Static Macs         :    1 Total    1 Active
Total Duplicate Macs      :    0 Total    0 Active
Total Learnt Macs         :    2 Total    2 Active
Total Evpn Macs           :    3 Total    3 Active
Total Evpn static Macs    :    0 Total    0 Active
Total Irb anycast Macs    :    0 Total    0 Active
Total Macs                :    5 Total    5 Active

------------------------------------------------------------------------------------------------------
-
--{ [FACTORY] + candidate shared default }--[  ]-- 

5.2.4.2 Checking MAC protection

About this task

MAC protection refers to the property of a MAC that does not move between leaf routers. It is always
learned against a bridged subinterface. You can configure this MAC as static, but be aware of the following:

• When a MAC is programmed as static, the same MAC cannot be learned in another sub-interace or via
EVPN. If frames arriving on an interface are different than the ones associated with the static MAC, they
are discarded.

• The MAC is now advertised as static in EVPN and installed as evpn-static in the leaf routers
attached to the same BD. If programmed, evpn-static MACs are also protected. Therefore, frames
arriving on a local subinterface are discarded if their source MAC matches an evpn-static MAC.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

55

 
 
 
 
  
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

Procedure

To program a MAC as static, use the network-instance bridge-table static-mac command.

Example: MAC protection (1 of 2)

Using Figure 6: Example of EVPN-VXLAN broadcast domain as reference, the following example
shows MAC 00:ca:fe:ca:fe:04 configured as static in LEAF-4.

--{ [FACTORY] +* candidate shared default }--[ network-instance MAC-VRF-1 bridge-table ]--
A:dut4# info
    static-mac {
        mac 00:CA:FE:CA:FE:04 {
            destination ethernet-1/13.1
        }
    }
--{ [FACTORY] +* candidate shared default }--[ network-instance MAC-VRF-1 bridge-table ]--
A:dut4# commit stay
All changes have been committed. Starting new transaction.
--{ [FACTORY] + candidate shared default }--[ network-instance MAC-VRF-1 bridge-table ]--
A:dut4#
--{ [FACTORY] + candidate shared default }--[ network-instance MAC-VRF-1 bridge-table ]--
A:dut4# /show network-instance MAC-VRF-1 bridge-table mac-table all
-----------------------------------------------------------------------------------------
Mac-table of network instance MAC-VRF-1
--------------------------------------------------------------------------------------------
+--------------+--------------------------+------------+-------+--------+-------+------------------+
|      Address |  Destination             | Dest Index | Type  | Active | Aging | Last Update      |
+==============+==========================+============+=======+========+=======+==================+
| 00:00:00:00: | lag1.1                   | 11         | learnt| true   | 180   | 2021-02-16T11:08:|
|  00:01       |                          |            |       |        |       |  10.000Z         |
| 00:00:00:00: | vxlan-interface:vxlan1.1 | 2787793311 | evpn  | true   | N/A   | 2021-02-16T11:08:|
|  00:02       |  vtep:2.2.2.2 vni:1      | 82         |       |        |       |  11.000Z         |
| 00:00:00:00: | vxlan-interface:vxlan1.1 | 2787793311 | evpn  | true   | N/A   | 2021-02-16T11:08:|
|  00:03       |  vtep:3.3.3.3 vni:1      | 84         |       |        |       |  11.000Z         |
| 00:00:00:00: | ethernet-1/13.1          | 13         | learnt| true   | 180   | 2021-02-16T11:08:| 
|  00:04       |                          |            |       |        |       |  10.000Z         |
| 00:CA:FE:CA: | ethernet-1/13.1          | 13         | static| true   | N/A   | 2021-02-16T11:10:|
|  FE:04       |                          |            |       |        |       |  26.000Z         |
+--------------+--------------------------+------------+-------+--------+-------+------------------+
Total Irb Macs            :    0 Total    0 Active
Total Static Macs         :    1 Total    1 Active
Total Duplicate Macs      :    0 Total    0 Active
Total Learnt Macs         :    2 Total    2 Active
Total Evpn Macs           :    2 Total    2 Active
Total Evpn static Macs    :    0 Total    0 Active
Total Irb anycast Macs    :    0 Total    0 Active
Total Macs                :    5 Total    5 Active
---------------------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[ network-instance MAC-VRF-1 bridge-table ]--

Example: MAC protection (2 of 2)

On the remote leaf routers, the MAC is received as evpn-static and programmed this way. For
example, LEAF-4 receives the route and programs it as follows:

2021-02-16T03:10:27.402653-08:00 dut3 local6|DEBU sr_bgp_mgr: bgp|4628|4789|270039|D: 
  VR default (1) Peer 1: 4.4.4.4 UPDATE: Peer 1: 4.4.4.4 - Received BGP UPDATE:
    Withdrawn Length = 0
    Total Path Attr Length = 96
    Flag: 0x90 Type: 14 Len: 44 Multiprotocol Reachable NLRI:
        Address Family EVPN
        NextHop len 4 NextHop 4.4.4.4

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

56

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

        Type: EVPN-MAC Len: 33 RD: 4.4.4.4:1 ESI: ESI-0, tag: 0, mac len: 48 mac:
              00:ca:fe:ca:fe:04, IP len: 0, IP: NULL, label1: 1 
    Flag: 0x40 Type: 1 Len: 1 Origin: 0
    Flag: 0x40 Type: 2 Len: 0 AS Path:
    Flag: 0x80 Type: 4 Len: 4 MED: 0
    Flag: 0x40 Type: 5 Len: 4 Local Preference: 100
    Flag: 0xc0 Type: 16 Len: 24 Extended Community:
        target:1234:1
        bgp-tunnel-encap:VXLAN
        mac-mobility:Seq:0/Static

--{ [FACTORY] + candidate shared default }--[  ]--
A:dut3# show network-instance MAC-VRF-1 bridge-table mac-table all
------------------------------------------------------------------------------------------------------
-
Mac-table of network instance MAC-VRF-1
------------------------------------------------------------------------------------------------------
-
+--------------+--------------------------+------------+------------+-------+-----+----------------+
|   Address    |      Destination         | Dest Index |  Type      | Active| Aging|  Last Update   |
+==============+==========================+============+============+=======+======+================+
| 00:CA:FE:CA: | vxlan-interface:vxlan1.1 | 2787792288 | evpn-static| true  | N/A  | 2021-02-16T11: |
|  FE:04       |  vtep:4.4.4.4 vni:1      | 38         |            |       |      |  10:27.000Z    |
+--------------+--------------------------+------------+------------+-------+------+----------------+
Total Irb Macs            :    0 Total    0 Active
Total Static Macs         :    0 Total    0 Active
Total Duplicate Macs      :    0 Total    0 Active
Total Learnt Macs         :    0 Total    0 Active
Total Evpn Macs           :    0 Total    0 Active
Total Evpn static Macs    :    1 Total    1 Active
Total Irb anycast Macs    :    0 Total    0 Active
Total Macs                :    1 Total    1 Active
-----------------------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[

Note that the static MACs state depends on the state of the subinterface which they are configured
against. If the subinterface goes oper-down, the static MAC and EVPN route are removed. Static
Blackhole MACs (where the configured destination is blackhole) also behave as static MACs and
are advertised as evpn-static.

5.2.4.3 MAC loop protection

MAC loop protection in EVPN BDs is based on the SR Linux MAC Duplication feature. This feature detects
MAC duplication for MACs moving:

• among bridge sub-interfaces of the same MAC-VRF

• between bridge sub-interfaces and EVPN (in the same MAC-VRF)

It does not detect MAC duplication for MACs moving from one VTEP to a different VTEP in the same MAC-
VRF. In addition, when a MAC is declared as a duplicate:

•

If the blackhole configuration option is added to the interface, incoming frames on bridged sub-
interfaces are discarded if their MAC SA or DA match the blackhole MAC. Frames encapsulated in
VXLAN packets are discarded if their inner source MAC or destination MAC match the blackhole MAC
in the mac-table.

• The "duplicate" MAC can be overwritten by a higher priority type (for example, static or evpn-static)

or flushed by a tools command. Blackhole MACs that result out of duplicate MACs are advertised as
regular MACs (non-static).

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

57

 
 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

5.3 Multi-homing configuration for EVPN broadcast domains

SR Linux supports all-active multi-homing for multi-homed peers connected using VXLAN, as per
[RFC8365].

Using Figure 6: Example of EVPN-VXLAN broadcast domain as a reference, LEAF-2 and LEAF-3 are
multi-homed to server-1 using all-active multi-homing. The representation of the multi-homed device in the
EVPN control plane is referred to as an Ethernet Segment (ES). It is considered "all-active" and not "active-
active", because SR Linux supports up to four leaf routers multi-homed to the same CE or server with all
links being active (not just two).

The all-active multi-homing function relies on three different procedures to handle multi-homing in the ES:

• Designated Forwarder (DF) election

• Split-Horizon (also known as Local-Bias)

• Aliasing

The DF is the leaf that forwards BUM traffic received from the VXLAN into the ES (to the server). Only one
DF can exist per ES at a time, and it is elected based on the exchange of ES routes (EVPN routes type 4)
and the subsequent DF election algorithm. All leaf routers, DF and non-DF, forward known-unicast traffic to
the multi-homed server.

The split-horizon or local bias is the procedure that avoids looped packets on the server. If server-1 hashes
the BUM traffic to the non-DF leaf (for example, LEAF-2), without any split-horizon technique, the flooded
BUM packets move to the DF (LEAF-4) and back to server-1. Split-horizon prevents these flooded packets
from forwarding back to server-1. When the data plane is VXLAN, the split-horizon mechanism is based on
a "local-bias" forwarding mode as defined in RFC8365. This implies that:

• BUM traffic from a local subinterface is always forwarded to the ES, irrespective of the PE being DF. For
example, if HOST-2 sends a broadcast frame, it is sent to the ES (lag1.1) even though LEAF- is non-DF
for ES-1.

• BUM traffic received over VXLAN is never be forwarded to the ES if the source VTEP matches a leaf

that is attached to the same ES. For example, BUM traffic from HOST-2 that is forwarded via VXLAN to
LEAF-4 is not forwarded to lag1.1, only to Ethernet-1/13.1.

Aliasing is the procedure that allows ecmp (load-balancing) from remote leaf routers (LEAF-3) to all leaf
routers attached to the same ES, even though the MAC is only advertised by one of the leaf routers in the
ES. For example, in Figure 6: Example of EVPN-VXLAN broadcast domain, flows from 00:00:00:00:00:01
can only be hashed to LEAF-2. LEAF-2 is the only router in the ES advertising the MAC. However,
because LEAF-2 and LEAF-4 advertise the association to the same Ethernet Segment Identifier (ESI), and
the MAC/IP route for 00:00:00:00:00:01 is tagged with ESI-1, LEAF-3 can "alias" the unicast traffic to both
leaf routers.

Note that a leaf advertises its association to an ES via AD per ES routes, and its association to an ES for a
specified MAC-VRF via AD per EVI routes. Both are EVPN routes type 1.

5.3.1 All-active multi-homing configurations

Configuration of all-active multi-homing involves four major steps:

• Configuring the server/CE with a single LAG that connects it to the leaf routers.

• Configuring an ES (ES-1) on the leaf routers (LEAF-2 and LEAF-4)

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

58

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

• Associating the ES interface with the MAC-VRF.

• Optional: Configuring the ecmp with a value greater than 1 in all the leaf routers attached to the same
BD (for aliasing). This step is only required if multi-homing is used in an EVPN-VXLAN BD distributed
among multiple leaf routers.

5.3.1.1 Ethernet segment configuration details

With SR Linux, ESs are control plane entities that reside in the system network-instance. The system
network-instance contains a BGP-VPN instance similar to the one in mac-vrfs. This instance hosts the bgp
information used by EVPN for multi-homing routes, and the ES configuration and state.

The following example provides ES configuration details.

--{ [FACTORY] + candidate shared default }--
    [ system network-instance protocols evpn ethernet-segments ]--
A:dut4# tree detail
ethernet-segments!+    evpn_mgr
+-- timers    evpn_mgr
|   +-- boot-timer?    evpn_mgr
|   +-- activation-timer?    evpn_mgr
+-- bgp-instance* [id]    evpn_mgr
    +-- ethernet-segment* [name]    evpn_mgr
        +-- admin-state?    evpn_mgr
        +-- esi?    evpn_mgr
        +-- interface?    evpn_mgr
        +-- multi-homing-mode?    evpn_mgr
        +-- df-election    evpn_mgr
        |   +-- timers    evpn_mgr
        |   |   +-- activation-timer?    evpn_mgr

The ES model uses a BGP-VPN instance where the route-distinguisher and export/import route-targets are
taken by BGP and used for the ES routes. Only one instance is allowed, and all ESs live under this BGP
instance. The default route-distinguisher for the instance is automatically derived from system-ip:0 and
used in ES routes.

The default import/export route-target is automatically derived from the ESI (bytes 1 to 6; from the second
highest order byte up to the seventh byte). This route-target is of type ESI-import route-target (as per
[RFC7432]) and is used in ES routes to ensure they are imported on Leaf routers attached to the ES.

ESs have an admin-state this is disabled by default. It must be toggled to change any of the parameters
affecting the EVPN control plane.

The following timers can be configures for ESs: general boot, per ES boot, and activation:

• The boot-timer is configured globally for all ESs. This allows the system to synchronize with the rest of

the network at reboot, and before the ES is brought up and its route is advertised.

• Before a boot-timer expires, the ES subinterfaces are oper-up and the AD routes advertised. In all-

active mode, they forward unicast traffic; BUM is not forwarded until the ES subinterfaces become DF.
When the boot-timer expires, the ES route is advertised, and the DF election takes place.

• The boot-timer can be configured with a value of 0-6000 seconds. Because it is linked to the evpn_mgr
application, the boot-timer kicks in when the evpn_mgr restarts. It is recommended that you configure a
timer that is long enough for the node to establish its BGP sessions and underlay connectivity before it
expires, use some transient BUM duplication).and ES routes are exchanged.

• The ES activation timer allows collecting ES routes for the same ES from other leaf routers before

promoting a node subinterface as DF. This prevents multiple transient DF leaf routers on the same ES,

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

59

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

and BUM duplication to the server/CE. The ES activation timer defaults to 3 seconds, but can be set to
0 if fast convergence is needed (although this may cause some transient BUM duplication).

The ES requires a manual 10-byte ESI configuration. Reserved ESI values such as ESI-0 or MAX-ESI
(0xFF..FF) are not allowed. ESI values with 00-00-00-00-00-00 in bytes 1-6 are not allowed. This prevents
the auto-derivation of ESI-import route-targets as all 0s.

SR Linux supports the default DF election algorithm, as per [RFC8584]. No configuration is required.

• The algorithm (also known as type Default or type 0) is a modulo-based operation that uses the number

of leafs in the ES and the configured EVI values in the contained mac-vrfs.

• The default alg orders the candidate list from lowest to highest IP address (where the IP address is

taken from the originating-ip of the ES routes), and picks up an ordinal of the list based on the outcome
of the modulo operation.

•

If the mac-vrf instances in the ES have consecutive EVI values, load balancing of the DF function
occurs. For example, if mac-vrf-1 has a value of EVI=1, mac-vrf-2 is EVI=2. Both have subinterfaces in
lag1 that belong to ES-1; one of the mac-vrfs is DF and the other is non-DF for ES-1.

The ES association to an interface must be configured. The interface type can be Ethernet or LAG. If LACP
is used on the CE, as shown in Figure 6: Example of EVPN-VXLAN broadcast domain, only a LAG can be
associated.

5.3.2 Configuring LEAF-2 and LEAF-4 as multi-homed nodes to server-1

About this task

LEAF-2 and LEAF-4 behave as a single system to server-1. Therefore, they must be configured with the
same LACP parameters for the LAG on server-1 to come up. The admin-key, system-id-mac, and system-
priority must match on both leaf routers so that the LAG comes up.

Procedure

Step 1.

In candidate mode, configure the LAG that connects to server-1.

The LAG can be LACP enabled or static. In this example, LACP is used.

Example
LAG configuration (LAG1 on LEAF-4)

--{ [FACTORY] + candidate shared default }--[  ]--
A:dut4# interface ethernet-1/4
--{ [FACTORY] + candidate shared default }--[ interface ethernet-1/4 ]--
A:dut4# info
    description ES-1
    ethernet {
        aggregate-id lag1
    }
--{ [FACTORY] + candidate shared default }--[ interface ethernet-1/4 ]--
A:dut4# /interface lag1
--{ [FACTORY] + candidate shared default }--[ interface lag1 ]--
A:dut4# info
    admin-state enable
    vlan-tagging true
    subinterface 1 {
        type bridged
        vlan {
            encap {
                single-tagged {

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

60

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

                    vlan-id 1
                }
            }
        }
    }
    lag {
        lag-type lacp
        member-speed 100G
        lacp {
            interval FAST
            lacp-mode ACTIVE
            admin-key 24
            system-id-mac 00:00:00:00:00:24
            system-priority 24
        }
    }

Example
LAG configuration (LAG1 on LEAF-2)

--{ [FACTORY] + candidate shared default }--[ interface ethernet-1/11 ]--
A:dut2# info
    description ES-1
    ethernet {
        aggregate-id lag1
    }
--{ [FACTORY] + candidate shared default }--[ interface ethernet-1/11 ]--
A:dut2# /interface lag1
--{ [FACTORY] + candidate shared default }--[ interface lag1 ]--
A:dut2# info
    admin-state enable
    vlan-tagging true
    subinterface 1 {
        type bridged
        vlan {
            encap {
                single-tagged {
                    vlan-id 1
                }
            }
        }
    }
    lag {
        lag-type lacp
        member-speed 100G
        lacp {
            interval FAST
            lacp-mode ACTIVE
            admin-key 24
            system-id-mac 00:00:00:00:00:24
            system-priority 24
        }
    }

Step 2. Configure Ethernet Segment (ES-1) on LEAF-2 and LEAF-4.

See Ethernet segment configuration details for an in-depth overview of ES functionality and
configuration.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

61

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

Example
ES configuration (ES-1 on LEAF-2)

--{ [FACTORY] + candidate shared default }--[ interface lag1 ]--
A:dut2# /system network-instance
--{ [FACTORY] + candidate shared default }--[ system network-instance ]--
A:dut2# info
    protocols {
        evpn {
            ethernet-segments {
                bgp-instance 1 {
                    ethernet-segment ES-1 {
                        admin-state enable
                        esi 01:24:24:24:24:24:24:00:00:01
                        interface lag1
                        multi-homing-mode all-active
                    }
                }
            }
        }
        bgp-vpn {
            bgp-instance 1 {
            }
        }
    } 

The ESI and mode must match on both Leaf routers. The following is the minimum configuration
for ES-1 to function across the two leaf routers.

Example
ES configuration (ES-1 on LEAF-4)

--{ [FACTORY] + candidate shared default }--[ interface lag1 ]--
A:dut4#  /system network-instance
--{ [FACTORY] + candidate shared default }--[ system network-instance ]--
A:dut4# info
    protocols {
        evpn {
            ethernet-segments {
                bgp-instance 1 {
                    ethernet-segment ES-1 {
                        admin-state enable
                        esi 01:24:24:24:24:24:24:00:00:01
                        interface lag1
                        multi-homing-mode all-active
                    }
                }
            }
        }
        bgp-vpn {
            bgp-instance 1 {
            }
        }
    }

Step 3. Configure the association of the ES interface with the MAC-VRF.

In this example, interface lag1.1 is added to the MAC-VRF. The association is based on the
configuration under the ES and no further configuration is needed at the MAC-VRF level.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

62

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

Example
ES interface association with the MAC-VRF

A:dut2# /network-instance MAC-VRF-1
--{ [FACTORY] + candidate shared default }--[ network-instance MAC-VRF-1 ]--
A:dut2# info
    type mac-vrf
    admin-state enable
    interface ethernet-1/12.1 {
    }
    interface lag1.1 {
    }
    vxlan-interface vxlan1.1 {
    }
    protocols {
        bgp-evpn {
            bgp-instance 1 {
                admin-state enable
                vxlan-interface vxlan1.1
                evi 1
            }
        }
        bgp-vpn {
            bgp-instance 1 {
                route-target {
                    export-rt target:1234:1
                    import-rt target:1234:1
                }
            }
        }
    }
A:dut4# /network-instance MAC-VRF-1
--{ [FACTORY] + candidate shared default }--[ network-instance MAC-VRF-1 ]--
A:dut4# info
    type mac-vrf
    admin-state enable
    interface ethernet-1/13.1 {
    }
    interface lag1.1 {
    }
    vxlan-interface vxlan1.1 {
    }
    protocols {
        bgp-evpn {
            bgp-instance 1 {
                admin-state enable
                vxlan-interface vxlan1.1
                evi 1
            }
        }
        bgp-vpn {
            bgp-instance 1 {
                route-target {
                    export-rt target:1234:1
                    import-rt target:1234:1
                }
            }
        }
    }
    bridge-table {
        static-mac {
            mac 00:CA:FE:CA:FE:04 {
                destination ethernet-1/13.1

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

63

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

            }
        }
    }

Step 4. Configure the ecmp with a value greater than 1 in all the leaf routers attached to the same BD to

allow for aliasing.

Note:
This step is only required if Multi-Homing is used in an EVPN-VXLAN BD distributed
among multiple Leaf routers. If the Multi-Homing ES is used locally as a Layer-2 MLAG
(Multi-chassis Link Aggregation Group) technique, this step can be skipped.

In the following example, LEAF-3 is configured with ecmp 2.

Example
Configure ecmp

--{ [FACTORY] + candidate shared default }--[ network-instance MAC-VRF-1 ]--
A:dut3# info detail flat | grep ecmp
set / network-instance MAC-VRF-1 protocols bgp-evpn bgp-instance 1 ecmp 2

Step 5. Review the configuration and commit the changes.

Example

--{ candidate shared default }--[  ]--
A:dut2# commit stay                                                                   

5.3.2.1 Use of multi-homing as all-active MLAG for non-EVPN layer-2 BDs

An example of ESs in a non-EVPN layer-2 BD is shown in the following diagram. In this scenario, EVPN
only runs locally between the leaf routers of the two pairs, but not globally in the network. The two leaf
tiers (LEAF-4/5 and LEAF-2/3) are connected via layer-2 sub-interfaces, and not VXLAN. Each leaf is
configured with two ESs. LEAF-4 is configured with ES-6 for multi-homing to server-6, and ES-45 for
multi-homing to the LEAF-2/3 tier. The configuration of the ES previously described also apply to these
topologies, with the exception that each ES would use a different name, ESI, and lag interface.

As noted in the multi-homing configuration procedure, configuring the ecmp with a value greater than 1
in all the leaf routers attached to the same BD is not required If the multi-homing ES is used locally as a
layer-2 MLAG.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

64

 
 
 
 
                                            
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

Figure 7: Use of ES for layer-2 MLAG scenarios

5.3.3 Checking the multi-homing operation

After the multi-homed leaf routers and the remote leaf are configured, the ES operation must be checked.

5.3.3.1 Checking the ES status

Procedure

Use the show system network-instance ethernet-segments command to check the status of the ES on
LEAF-2 and LEAF-4. The output from this command must show the same DF for the same mac-vrf on both
leaf routers, and the same candidate list for the ES on both leaf routers. The detail form of this command
also provides information about timers and the DF election.

Example: Check the ES status

// Leaf-4
--{ [FACTORY] + candidate shared default }--[  ]--
A:dut4# show system network-instance ethernet-segments ES-1
-------------------------------------------------------------------------------

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

65

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

ES-1 is up, all-active
  ESI  : 01:24:24:24:24:24:24:00:00:01
  Alg  : default
  Peers: 2.2.2.2
  Interface: lag1
  Network-instances:
     MAC-VRF-1
      Candidates : 2.2.2.2, 4.4.4.4 (DF)
      Interface : lag1.1
-------------------------------------------------------------------------------
Summary
 1 Ethernet Segments Up
 0 Ethernet Segments Down
--------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[ ]--
A:dut4# show system network-instance ethernet-segments ES-1 detail
=================================================================================
Ethernet Segment
=================================================================================
Name                 : ES-1
4.4.4.4 (DF)
Admin State          : enable              Oper State        : up
ESI                  : 01:24:24:24:24:24:24:00:00:01
Multi-homing         : all-active          Oper Multi-homing : all-active
Interface            : lag1
ES Activation Timer  : None
DF Election          : default             Oper DF Election  : default
Last Change          : 2021-02-15T11:07:01.412Z
=================================================================================
MAC-VRF   Actv Timer Rem   DF
ES-1      0                Yes
--------------------------------------------------------------------------------
DF Candidates
--------------------------------------------------------------------------------
Network-instance       ES Peers
MAC-VRF-1              2.2.2.2
MAC-VRF-1              4.4.4.4 (DF)
================================================================================
--{ [FACTORY] + candidate shared default }--[  ]—
// Leaf-2

--{ [FACTORY] + candidate shared default }--[  ]--
A:dut2# show system network-instance ethernet-segments ES-1
--------------------------------------------------------------------------------
ES-1 is up, all-active
  ESI  : 01:24:24:24:24:24:24:00:00:01
  Alg  : default
  Peers: 4.4.4.4
 show system network-instance ethernet-segments ES-1
  Network-instances:
     MAC-VRF-1
      Candidates : 2.2.2.2, 4.4.4.4 (DF)
      Interface : lag1.1
--------------------------------------------------------------------------------
Summary
 1 Ethernet Segments Up
 0 Ethernet Segments Down
--------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

66

 
 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

5.3.3.2 Checking ES and EVI routes

Procedure

Use the show network-instance protocols bgp routes evpn route-type summary command to check
the exchange of ES routes (used for DF election and ES discovery) and AD per ES/EVI routes (used to
indicate the association of Leaf services to ES).

Note that LEAF-2 should have a type 4 route for the ES originating from LEAF-4. There should also be
one AD per EVI and one AD per ES route from LEAF-4 for MAC-VRF-1. AD routes are advertised for each
MAC-VRF that are part of the ES.

Example: Check ES and EVI routes

// Received ES routes or routes type 4 on Leaf-2
--{ [FACTORY] + candidate shared default }--[  ]--
A:dut2# show network-instance default protocols bgp routes evpn route-type 4 summary
------------------------------------------------------------------------------------
Show report for the BGP route table of network-instance "default"
------------------------------------------------------------------------------------
Status codes: u=used, *=valid, >=best, x=stale
Origin codes: i=IGP, e=EGP, ?=incomplete
------------------------------------------------------------------------------------
BGP Router ID: 2.2.2.2      AS: 2222      Local AS: 2222
-----------------------------------------------------------------------------------
Type 4 Ethernet Segment Routes
+--------+---------------+-------------------+--------------+---------+-----------+
| Status |  Route-       |          ESI      | originating  | neighbor| Next-Hop  |
|        | distinguisher |                   |  -router     |         |           |
+========+===============+===================+==============+=========+===========+
| u*>    | 4.4.4.4:0     | 01:24:24:24:24:24:| 4.4.4.4      | 4.4.4.4 | 4.4.4.4   |
|        |               |  24:00:00:01      |              |         |           |
+--------+---------------+-------------------+------------------------+-----------+
-----------------------------------------------------------------------------------
1 Ethernet Segment routes 1 used, 1 valid
----------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--
A:dut2#
/* Received AD routes or routes type 1 on Leaf-2. The AD per ES route uses Eth-Tag= MAX-ET
 (all FFs). */

--{ [FACTORY] + candidate shared default }--[  ]-- 
A:dut2# show network-instance default protocols bgp routes evpn route-type 1 summary 
Show report for the BGP route table of network-instance "default"
-------------------------------------------------------------------------------------
Status codes: u=used, *=valid, >=best, x=stale
Origin codes: i=IGP, e=EGP, ?=incomplete
------------------------------------------------------------------------------------
BGP Router ID: 2.2.2.2      AS: 2222      Local AS: 2222
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
Type 1 Ethernet Auto-Discovery Routes
+--------+---------------+------------------+------------+---------+---------+-----+
| Status |     Route-    |     ESI          |   Tag-ID   | neighbor|Next-hop | VNI |
|        | distinguisher |                  |            |         |         |     |
+========+===============+==================+============+===================+=====+
| u*>    | 4.4.4.4:1     | 01:24:24:24:24:  | 0          | 4.4.4.4 | 4.4.4.4 | -   |
|        |               |  24:24:00:00:01  |            |         |         |     |
| u*>    | 4.4.4.4:1     | 01:24:24:24:24:  | 4294967295 | 4.4.4.4 | 4.4.4.4 | -   |
|        |               |  24:24:00:00:01  |            |         |         |     |

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

67

 
 
 
 
                                                                                          
              
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

+--------+---------------+------------------+------------+---------+---------+-----+
2 Ethernet Auto-Discovery routes 2 used, 2 valid
------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--
--{ [FACTORY] + candidate shared default }--[  ]-- 
A:dut2# show network-instance default protocols bgp routes evpn route-type 1 detail
-------------------------------------------------------------------------------------
Show report for the EVPN routes to network "*" network-instance  "default"
------------------------------------------------------------------------------------
Route Distinguisher: 4.4.4.4:1
Tag-ID             : 0
ESI                : 01:24:24:24:24:24:24:00:00:01
neighbor           : 4.4.4.4
Received paths     : 1
  Path 1: <Best,Valid,Used,>
    ESI             : 01:24:24:24:24:24:24:00:00:01
    Route source    : neighbor 4.4.4.4 (last modified 4h38m27s ago)
    Route preference: No MED, LocalPref is 100
    Atomic Aggr     : false
    BGP next-hop    : 4.4.4.4
    AS Path         :  i
    Communities     : [target:1234:1, bgp-tunnel-encap:VXLAN]
    RR Attributes   : No Originator-ID, Cluster-List is []
    Aggregation     : None
    Unknown Attr    : None
    Invalid Reason  : None
    Tie Break Reason: none
------------------------------------------------------------------------------------
Route Distinguisher: 4.4.4.4:1
Tag-ID             : 4294967295
ESI                : 01:24:24:24:24:24:24:00:00:01
neighbor           : 4.4.4.4
Received paths     : 1
  Path 1: <Best,Valid,Used,>
    ESI             : 01:24:24:24:24:24:24:00:00:01
    Route source    : neighbor 4.4.4.4 (last modified 4h38m27s ago)
    Route preference: No MED, LocalPref is 100
    Atomic Aggr     : false
    BGP next-hop    : 4.4.4.4
    AS Path         :  i
    Communities     : [target:1234:1, esi-label:0/All-Active]
    RR Attributes   : No Originator-ID, Cluster-List is []
    Aggregation     : None
    Unknown Attr    : None
    Invalid Reason  : None
    Tie Break Reason: none
------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]-- 

5.3.3.3 Checking the MAC/IP route

About this task

MAC/IP routes advertised for MACs learned on the ES sub-interfaces are advertised with the ESI of ES-1.
The RIB state for the MAC/IP routes can be used to check this.

Procedure

Use the show network-instance protocols bgp routes evpn route-type summary command to check
the MAC/IP route for MAC 00:00:00:00:00:01 on LEAF-3:

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

68

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

Example: Check the MAC/IP route

--{ [FACTORY] + candidate shared default }--[  ]--
A:dut3# show network-instance default protocols bgp routes evpn route-type 2 summary
-----------------------------------------------------------------------------------------------------
Show report for the BGP route table of network-instance "default"
-----------------------------------------------------------------------------------------------------
Status codes: u=used, *=valid, >=best, x=stale
Origin codes: i=IGP, e=EGP, ?=incomplete
-----------------------------------------------------------------------------------------------------
BGP Router ID: 3.3.3.3      AS: 3333      Local AS: 3
-----------------------------------------------------------------------------------------------------
Type 2 MAC-IP Advertisement Routes
+--------+-----------+-----+-------------+--------+---------+---------+---+-----------------+-------+
| Status |Route-dis- | Tag |MAC-address  |IP-     | neighbor| Next-Hop|VNI|         ESI     | MAC   |
|        |tinguisher | -ID |             |address |         |         |   |                 | Mob.  |
+========+===========+=====+=============+========+=========+=========+===+=================+=======+
| u*>    |2.2.2.2:1  | 0   |00:00:00:00: |0.0.0.0 | 2.2.2.2 | 2.2.2.2 | 1 | 00:00:00:00:00: | -     |
|        |           |     | 00:02       |        |         |         |   |  00:00:00:00:0 0|       |
| u*>    |4.4.4.4:1  | 0   |00:00:00:00: |0.0.0.0 | 4.4.4.4 | 4.4.4.4 | 1 | 01:24:24:24:24: | -     |
|        |           |     | 00:01       |        |         |         |   |  24:24:00:00:01 |       |
| u*>    |4.4.4.4:1  | 0   |00:00:00:00: |0.0.0.0 | 4.4.4.4 | 4.4.4.4 | 1 | 00:00:00:00:00: | -     |
|        |           |     | 00:0 4      |        |         |         |   |  00:00:00:00:00 |       |
| u*>    |4.4.4.4:1  | 0   |00:CA:FE:CA: |0.0.0.0 | 4.4.4.4 | 4.4.4.4 | 1 | 00:00:00:00:00: |Seq:0/ |
|        |           |     | FE:04       |        |         |         |   |  00:00:00:00:00 |Static |
+--------+-----------+-----+-------------+--------+---------+---------+---+-----------------+-------+
-----------------------------------------------------------------------------------------------------
4 MAC-IP Advertisement routes 4 used, 4 valid
-----------------------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--

5.3.3.4 Checking the ES destination

About this task

When AD routes are received from LEAF-2 and LEAF-4, and the MAC/IP route is tagged with the ESI,
LEAF-3 creates an ES destination resolved to as many VTEPs as leafs advertising the AD routes (up to a
maximum of the ecmp setting on LEAF-3).

Procedure

Use the show tunnel-interface vxlan-interface bridge-table unicast-destinations command to check
the ES destination for ES-1 created on LEAF-3.

Example: Check the ES destination

--{ [FACTORY] + candidate shared default }--[  ]--
A:dut3# show tunnel-interface vxlan1 vxlan-interface 1 bridge-table unicast-destinations destination *
------------------------------------------------------------------------------------------------------
Show report for vxlan-interface vxlan1.1 unicast destinations
------------------------------------------------------------------------------------------------------
Destinations
------------------------------------------------------------------------------
+--------------+------------+-------------------+-----------------------------+
| VTEP Address | Egress VNI | Destination-index | Number MACs (Active/Failed) |
+==============+============+===================+=============================+
| 2.2.2.2      | 1          | 278779228840      | 1(1/0)                      |
| 4.4.4.4      | 1          | 278779228838      | 2(2/0)                      |
+--------------+------------+-------------------+-----------------------------+
-------------------------------------------------------------------------------

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

69

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

Ethernet Segment Destinations
------------------------------------------------------------------------------------------------------
+-------------------------------+-------------------+------------------+-----------------------------+
|              ESI              | Destination-index |      VTEPs       | Number MACs (Active/Failed) |
+===============================+===================+==================+=============================+
| 01:24:24:24:24:24:24:00:00:01 |                   | 2.2.2.2, 4.4.4.4 | 0(0/0)                      |
+-------------------------------+-------------------+------------------+-----------------------------+
------------------------------------------------------------------------------------------------------
Summary
  3 unicast-destinations, 2 non-es, 1 es
  3 MAC addresses, 3 active, 0 non-active
-----------------------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--

5.3.3.5 Checking MAC programming

Procedure

Use the show network-instance bridge-table mac-table mac command to show how LEAF-3 programs
the MACs received for the ES as associated with an ES destination

Example: Check MAC programming

--{ [FACTORY] + candidate shared default }--[  ]--
A:dut3# show network-instance MAC-VRF-1 bridge-table mac-table mac 00:00:00:00:00:01
------------------------------------------------------------------------------------
Mac-table of network instance MAC-VRF-1
-----------------------------------------------------------------------------------
Mac                     : 00:00:00:00:00:01
Destination             : vxlan-interface:vxlan1.1 esi:01:24:24:24:24:24:24:00:00:01
Dest Index              : 278779228850
Type                    : evpn
Programming Status      : Success
Aging                   : N/A
Last Update             : 2021-02-16T15:51:09.000Z
Duplicate Detect time   : N/A
Hold down time remaining: N/A
-----------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]-- 

5.3.3.6 Checking subinterface ES association (LEAF-2)

About this task

On the non-DF (in this example, LEAF-2), the MAC-VRF interface included in ES-1 (lag1.1) shows the
multicast-forwarding flag as none. This means that the interface does not forward BUM traffic to the CE/
server when it is received on the VXLAN.

Procedure

Use the info from state command for the subinterface itself to show the association with ES-1 and the DF
state.

Example: Check subinterface ES association (LEAF-2)

--{ [FACTORY] + candidate shared default }--[  ]--
A:dut2# info from state network-instance MAC-VRF-1 interface lag1.1 

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

70

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

    network-instance MAC-VRF-1 {
        interface lag1.1 {
            oper-state up
            oper-mac-learning up
            index 12
            multicast-forwarding none
        }
    }
--{ [FACTORY] + candidate shared default }--[  ]-- 
--{ [FACTORY] + candidate shared default }--[  ]--
A:dut2# info from state interface lag1 subinterface 1 ethernet-segment-association
    interface lag1 {
        subinterface 1 {
            ethernet-segment-association {
                ethernet-segment ES-1
                es-managed true
                designated-forwarder false
            }
        }

5.3.3.7 Checking subinterface ES association (LEAF-4)

About this task

On the DF (in this example, LEAF-4), the MAC-VRF interface in ES-1 (lag1.1) shows the multicast-
forwarding flag as BUM.

Procedure

Use the info from state command for the subinterface itself to show the association with ES-1 and the DF
state.

Example: Check subinterface ES association (LEAF-4)

--{ [FACTORY] + candidate shared default }--[  ]-- 
A:dut4# info from state network-instance MAC-VRF-1 interface lag1.1    
    network-instance MAC-VRF-1 {
        interface lag1.1 {
            oper-state up
            oper-mac-learning up
            index 11
            multicast-forwarding BUM
        }
    }
--{ [FACTORY] + candidate shared default }--[  ]--
--{ [FACTORY] + candidate shared default }--[  ]--
A:dut4#   info from state interface lag1 subinterface 1 ethernet-segment-association   
    interface lag1 {
        subinterface 1 {
            ethernet-segment-association {
                ethernet-segment ES-1
                es-managed true
                designated-forwarder true
            }
        }
    }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

71

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer-2 and multi-homing

5.3.3.8 EVPN related logs

The evpn_mgr application has logs that are triggered when the DF state changes on an ES as shown in
the following example:

Example: EVPN related logs

[root@dut2 srlinux]# 
2021-02-15T02:59:41.888505-08:00 dut2 local6|NOTI sr_evpn_mgr: evpn|1905|1905|00086|N:
 BGP-EVPN attachment circuit on ethernet segment ES-1 on network instance MAC-VRF-1 
 and bgp instance 1 is now a non-designated forwarder.

2021-02-15T02:59:44.859295-08:00 dut2 local6|NOTI sr_evpn_mgr: evpn|1905|1905|00087|N:
 BGP-EVPN attachment circuit on ethernet segment ES-1 on network instance MAC-VRF-1
 and bgp instance 1 is now a designated forwarder.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

72

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

6 EVPN-VXLAN for layer 3

The EVPN Layer 3 configuration model builds on the model for EVPN routes described in EVPN-VXLAN
for layer-2 and multi-homing. Understanding the concepts in the EVPN-VXLAN Layer-2 chapter is required
to understand this chapter.

This chapter addresses connectivity between subnets across multiple Broadcast Domains (BDs) of the
same tenant as defined in the EVPN Interface-less (IFL) model [draft-ietf-bess-evpn-prefix-advertisement].
It is based on the advertisement and processing of IP prefixes using EVPN type 5 routes. This chapter
defines how CEs or servers can be multi-homed to multiple leaf nodes in an EVPN IFL network. It also
describes other EVPN L3 topics such as:

•

IRB subinterface extensions for EVPN-VXLAN Layer 3

• unicast routing PE-CE

•

layer 3 host mobility

6.1 Overview

Figure 8: EVPN IP-VRF domain in a multi-tenant DC shows four leaf routers attached to the same tenant
or IP-VRF domain. Servers are connected to different subnets and, therefore, different BDs. The leaf
routers provide inter-subnet forwarding by using the EVPN IFL model as defined in [draft-ietf-bess-evpn-
prefix-advertisement]. The SR Linux implementation is fully standard and third-party routers, such as
LEAF-4, can be connected to the same IP-VRF domain as SR Linux routers.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

73

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

Figure 8: EVPN IP-VRF domain in a multi-tenant DC

The procedures in this chapter define the configuration and operation for:

•

the EVPN IFL model for EVPN-VXLAN Layer 3 and the EVPN IP prefix routes

• multi-homing in an EVPN-VXLAN Layer 3 solution

• host route mobility aspects

• PE-CE unicast routing on EVPN-VXLAN Layer 3 networks

• EVPN-VXLAN Layer 3 feature parity for IPv6 prefixes

6.2 Configuration of EVPN-VXLAN IP-VRF domains

The following figure shows the configuration of an EVPN-VXLAN IP-VRF-10 distributed in three leaf
routers, with different subnets, and multi-homing for SERVER-1.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

74

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

Figure 9: Example of EVPN-VXLAN IP-VRF domain

6.2.1 Preconfiguring the underlay network

Before configuring the overlay BD, the underlay connectivity must be configured.

This chapter uses the same underlay configuration defined for EVPN-VXLAN Layer-2 and Multi-Homing.
See Configuring the underlay network and review this section to understand the underlay configuration
before proceeding.

6.2.2 Configuring the LEAF-3 IP-VRF domain

About this task

After LEAF-3 is pre-configured as defined in Configuring the underlay network, use the following steps to
enable EVPN-VXLAN on LEAF-3.

As shown in Figure 9: Example of EVPN-VXLAN IP-VRF domain, LEAF-3 is attached to IP-VRF-10 and
HOST-3 is connected to BD3. BD3 is mapped to subnet 103.1.1.0/24 and its IRB subinterface is the
default-gateway to all hosts in BD3.

Procedure

Step 1.

In candidate mode, create the interfaces and bridged subinterfaces that connect LEAF-3 BD3 to
HOST-3.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

75

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

In this example:

• Ethernet-1/2 connects HOST-3 to LEAF-3. Although this interface could be defined untagged,

this example configures the interface as tagged (vlan-tagging true).

• A subinterface with index 3 is created under the interface and must be configured as type

bridged. Bridged subinterfaces can be associated with MAC-VRF instances as described in
EVPN-VXLAN for layer-2 and multi-homing.

• The subinterface uses vlan-id optional, which captures any traffic that is not specified in

other subinterfaces of the same interface.

Note: The IRB subinterface expects no vlan tags so that traffic forwarded from HOST-3
can be routed. If HOST-3 sends frames tagged with a vlan-id, the frames would be
classified in the BD3 context, but the subinterface does not strip off the vlan tag, and
frames are not routed.

Example

--{ [FACTORY] + candidate shared default }--[ interface ethernet-1/2 ]-- 
# info
    admin-state enable
    vlan-tagging true
    subinterface 3 {
        type bridged
        admin-state enable
        vlan {
            encap {
                single-tagged {
                    vlan-id optional
                }
            }
        }
    }

Step 2. After creating the access subinterfaces, create the vxlan-interfaces.

This allows MAC-VRFs of the same BD to be connected throughout the IP fabric.

In this example, no other leaf router is attached to BD3, so no vxlan-interface is needed in BD3.
The configuration of the vxlan-interface is only shown for completeness. See EVPN-VXLAN for
layer-2 and multi-homing for details on vxlan-interfaces and their characteristics.

Example
vxlan1 vxlan-interface 3 configuration

--{ [FACTORY] + candidate shared default }--[ tunnel-interface vxlan1 ]--
# info 
    vxlan-interface 3 {
        type bridged
        ingress {
            vni 3
        }
    }

Step 3.

IP-VRF instances in the leaf routers are also connected by VXLAN tunnels, therefore, vxlan-
interfaces of type routed must be created.

In this example, tunnel-interface vxlan2 vxlan-interface 10 is configured. While the configuration
of the routed vxlan-interface is similar to the bridged vxlan-interface, this type ensures a routed

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

76

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

vxlan-interface only attaches to an ip-vrf, and a bridged vxlan-interface only attaches to a mac-
vrf.

Example
VXLAN tunnel configuration

--{ [FACTORY] + candidate shared default }--[ tunnel-interface vxlan2 ]--
# info
    vxlan-interface 10 {
        type routed
        ingress {
            vni 10
        }
    }

Step 4. Configure the IRB interface and subinterface that links BD3 and IP-VRF-10 together to allow

packets from/to subnet 103.1.1.0/24 to route to/from remote subnets in the local or remote leaf
routers of the same tenant.

Note that because BD3 is not present in another leaf, the IRB subinterface is not configured as
an anycast-gw subinterface. However, an operator may want to configure all IRB subinterfaces
as anycast-gw in case the BD is extended later. See Configuring the IP-VRF Domain on LEAF-2
and LEAF-4  for anycast-gw configuration details.

Example
IRB configuration

--{ [FACTORY] + candidate shared default }--[ interface irb0 ]--
# info
    subinterface 3 {
        ipv4 {
            admin-state enable
            address 103.1.1.254/24 {
            }
        }
    }

Step 5. Configure the network-instance type mac-vrf and associate it with the bridged IRB interfaces and

the vxlan-interface.

In the example that follows, BD3 is connected to HOST-3 and to the IRB subinterface that is also
attached to IP-VRF-10.

Although the B is not needed, in this example, the bgp-evpn and vxlan configuration is shown
for completeness. For details about bgp-vpn, bgp-evpn, and vxlan-interface configuration, see
EVPN-VXLAN for layer-2 and multi-homing.

Example
mac-vrf configuration and bridged interface association

--{ [FACTORY] + candidate shared default }--[ network-instance BD3 ]--
# info
    type mac-vrf
    interface ethernet-1/2.3 {
    }
    interface irb0.3 {
    }
    vxlan-interface vxlan1.3 {
    }
    protocols {

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

77

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

        bgp-evpn {
            bgp-instance 1 {
                admin-state enable
                vxlan-interface vxlan1.3
                evi 3
                ecmp 2
            }
        }
        bgp-vpn {
            bgp-instance 1 {
                route-target {
                    export-rt target:64500:3
                    import-rt target:64500:3
                }
            }
        }
    }

Step 6. Configure IP-VRF-10 with bgp-evpn enabled using the EVPN IFL model.

In this example, IP-VRF is configured with the irb0.3 interface for connectivity to BD3 and
vxlan2.10. This allows the extension of IP-VRF-10 to remote leaf routers. A loopback interface is
configured in the IP-VRF to test connectivity among IP-VRFs of the same tenant.

When configured, all local routes learned on IP-VRF-10 route-table are advertised in IP Prefix
routes (or IPv6 Prefix routes for local IPv6 routes).

Example
Enable EVPN IFL model on IP-VRF-10

--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF* ]--
# info
    network-instance IP-VRF-10 {
        type ip-vrf
        interface irb0.3 {
        }
        interface lo10.2 {
        }
        vxlan-interface vxlan2.10 {
        }
        protocols {
            bgp-evpn {
                bgp-instance 1 {
                    vxlan-interface vxlan2.10
                    evi 10
                    ecmp 2
                }
            }
            bgp-vpn {
                bgp-instance 1 {
                    route-target {
                        export-rt target:64500:10
                        import-rt target:64500:10
                    }
                }
            }
        }
    }

The bgp-vpn instance is configured as described in Chapter EVPN-VXLAN for layer-2 and multi-
homing (with a network-instance of type ip-vrf). Likewise, the bgp-evpn container enables EVPN
in the ip-vrf and associates it to the routed vxlan-interface. The RD and RT can be auto-derived

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

78

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

from the evi just like they can in mac-vrfs. Explicitly configured RD/RTs can override the auto-
configured ones. Import and export policies are supported.

Step 7. Review the changes. If correct, commit the changes.

Example

# commit stay 
--{ candidate shared default }--[  ]-- 

6.2.3 Configuring the IP-VRF Domain on LEAF-2 and LEAF-4

About this task

LEAF-2 and LEAF-4 are configured in the same way as LEAF-3, but with the addition of multi-homing,
anycast-gw interfaces, and related configurations.

Use the following procedure to enable EVPN-VXLAN Layer 3 on LEAF-2 and LEAF-4. Considerations for
configuring the IRB subinterfaces (Step 4) are provided in IRB subinterface considerations, if needed.

Procedure

Step 1.

In candidate mode, create the interfaces, and bridged subinterfaces (including LAG) to connect
HOST-2, HOST-4, SERVER-1, and CE-3.

In this example, Ethernet Segment ES-1 is associated with lag1 and is multi-homed to
SERVER-1 lag. LACP is enabled on lag1 (but can be disabled) and the admin-key, system-id-
mac, and system-priority match on both LEAF-2 and LEAF-4.

Example
Interfaces and bridged subinterfaces configuration (LEAF-2)

// interfaces in Leaf-2
--{ [FACTORY] + candidate shared default }--[ interface * ]--
# info        
    interface ethernet-1/11 {
        description ES-1
        ethernet {
            aggregate-id lag1
        }
    }
    interface ethernet-1/12 {
        description to-host-2
        admin-state enable
        vlan-tagging true
        subinterface 24 {
            type bridged
            vlan {
                encap {
                    single-tagged {
                        vlan-id optional
                    }
                }
            }
        }
    }
    interface ethernet-1/22 {
        description to-CE-3
        vlan-tagging true
        subinterface 2 {

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

79

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

            type bridged
            admin-state enable
            vlan {
                encap {
                    single-tagged {
                        vlan-id 2
                    }
                }
            }
        }    
    }
    interface lag1 {
        admin-state enable
        vlan-tagging true
        subinterface 24 {
            type bridged
            vlan {
                encap {
                    single-tagged {
                        vlan-id 24
                    }
                }
            }
        }
        lag {
            lag-type lacp
            member-speed 100G
            lacp {
                interval FAST
                lacp-mode ACTIVE
                admin-key 24
                system-id-mac 00:00:00:00:00:24
                system-priority 24
            }
        }
    }

Example
Interfaces and bridged subinterfaces configuration (LEAF-4)

// Interfaces in Leaf-4
--{ [FACTORY] + candidate shared default }--[ interface * ]--
# info
    interface ethernet-1/4 {
        description ES-1
        ethernet {
            aggregate-id lag1
        }
    }
    interface ethernet-1/13 {
        description to-host-4
        admin-state enable
        vlan-tagging true
        subinterface 4 {
            type bridged
            admin-state enable
            vlan {
                encap {
                    single-tagged {
                        vlan-id optional
                    }
                }
            }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

80

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

        }
    }
    interface lag1 {
        admin-state enable
        vlan-tagging true
        subinterface 24 {
            type bridged
            vlan {
                encap {
                    single-tagged {
                        vlan-id 24
                    }
                }
            }
        }
        lag {
            lag-type lacp
            member-speed 100G
            lacp {
                interval FAST
                lacp-mode ACTIVE
                admin-key 24
                system-id-mac 00:00:00:00:00:24
                system-priority 24
            }
        }
    }

Step 2. Create the all-active Ethernet Segment ES-1 that is attached to LEAF-2 and LEAF-4.

Details about the ES configuration and operation can be found in EVPN-VXLAN for layer-2 and
multi-homing. Note that the following example only shows the Ethernet Segment configuration.
The bgp-vpn>bgp-instance 1 must also be configured as described in EVPN-VXLAN for layer-2
and multi-homing.

Example
ES configuration

// ES-1 on Leaf-2
--{ [FACTORY] + candidate shared default }--[ system network-instance protocols
 evpn ethernet-segments ]--
# info
    bgp-instance 1 {
        ethernet-segment ES-1 {
            admin-state enable
            esi 01:24:24:24:24:24:24:00:00:01
            interface lag1
            multi-homing-mode all-active
        }
    }
// ES-1 on Leaf-4
--{ [FACTORY] + candidate shared default }--[ system network-instance protocols
 evpn ethernet-segments ]--
A:dut4# info
    bgp-instance 1 {
        ethernet-segment ES-1 {
            admin-state enable
            esi 01:24:24:24:24:24:24:00:00:01
            interface lag1
            multi-homing-mode all-active
        }
    }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

81

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

Step 3. After the access bridged subinterfaces are created, create the vxlan-interfaces to facilitate

connectivity between network-instances across the IP fabric.

The mac-vrf network-instances require both vxlan-interfaces of type bridged and ip-vrfs of type
routed.

In the following example, all the vxlan-interfaces for all network-instances on LEAF-2 and LEAF-4
nodes are configured as follows:

Example
vxlan-interface configuration

// vxlan-interfaces on Leaf-2
--{ [FACTORY] + candidate shared default }--[ tunnel-interface * ]--
# info
    tunnel-interface vxlan1 {
        vxlan-interface 2 {
            type bridged
            ingress {
                vni 2
            }
        }
        vxlan-interface 24 {
            type bridged
            ingress {
                vni 24
            }
        }
    }
    tunnel-interface vxlan2 {
        vxlan-interface 10 {
            type routed
            ingress {
                vni 10
            }
        }
    }
// vxlan-interfaces on Leaf-4
--{ [FACTORY] + candidate shared default }--[ tunnel-interface * ]--
# info
    tunnel-interface vxlan1 {
        vxlan-interface 4 {
            type bridged
            ingress {
                vni 4
            }
        }
        vxlan-interface 24 {
            type bridged
            ingress {
                vni 24
            }
        }
    }
    tunnel-interface vxlan2 {
        vxlan-interface 10 {
            type routed
            ingress {
                vni 10
            }
        }
    }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

82

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

Step 4. Configure the IRB subinterfaces that link the mac-vrf and ip-vrf network-instances for inter-

subnet-forwarding.

See IRB subinterface considerations, for details on configuring IRB subinterfaces.

Example
IRB subinterface configuration

// IRB interfaces in Leaf-2
--{ [FACTORY] + candidate shared default }--[ interface irb* ]--
# info 
    interface irb0 {
        subinterface 2 {
            ipv4 {
                admin-state enable
                address 20.1.1.2/24 {
                }
                arp {
                    learn-unsolicited true
                    ]
                }
            }
            anycast-gw {
            }
        }
        subinterface 24 {
            ipv4 {
                admin-state enable
                address 101.1.1.2/24 {
                }
                address 101.1.1.254/24 {
                    anycast-gw true
                    primary
                }
                address 102.1.1.254/24 {
                }
                arp {
                    learn-unsolicited true
                    debug [
                        messages
                    ]
                    host-route {
                        populate dynamic {
                        }
                    }
                    evpn {
                        advertise dynamic {
                        }
                    }
                }
            }
            anycast-gw {
            }
        }
    }
// IRB interfaces in Leaf-4
--{ [FACTORY] + candidate shared default }--[ interface irb* ]--
# info
    interface irb0 {
        subinterface 4 {
            ipv4 {
                admin-state enable
                address 104.1.1.4/24 {
                }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

83

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

                address 104.1.1.254/24 {
                    anycast-gw true
                    primary
                }
                arp {
                    learn-unsolicited true
                    debug [
                        messages
                    ]
                }
            }
            anycast-gw {
            }
        }
        subinterface 24 {
            ipv4 {
                admin-state enable
                address 101.1.1.4/24 {
                }
                address 101.1.1.254/24 {
                    anycast-gw true
                    primary
                }
                arp {
                    learn-unsolicited true
                    debug [
                        messages
                    ]
                    host-route {
                        populate dynamic {
                        }
                    }
                    evpn {
                        advertise dynamic {
                        }
                    }
                }
            }
            anycast-gw {
            }
        }

Step 5. Configure the network-instances of type mac-vrf and associate the bridged subinterfaces, irb

subinterfaces, and vxlan-interfaces. Then enable bgp-evpn.

Example
network instance configuration and association

// MAC-VRFs in Leaf-2
--{ [FACTORY] + candidate shared default }--[ network-instance BD* ]--
# info
    network-instance BD2 {
        type mac-vrf
        interface ethernet-1/22.2 {
        }
        interface irb0.2 {
        }
        vxlan-interface vxlan1.2 {
        }
        protocols {
            bgp-evpn {
                bgp-instance 1 {
                    admin-state enable

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

84

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

                    vxlan-interface vxlan1.2
                    evi 2
                    ecmp 2
                }
            }
            bgp-vpn {
                bgp-instance 1 {
                    route-target {
                        export-rt target:64500:2
                        import-rt target:64500:2
                    }
                }
            }
        }
    }
    network-instance BD24 {
        type mac-vrf
        interface ethernet-1/12.24 {
        }
        interface irb0.24 {
        }
        interface lag1.24 {
        }
        vxlan-interface vxlan1.24 {
        }
        protocols {
            bgp-evpn {
                bgp-instance 1 {
                    admin-state enable
                    vxlan-interface vxlan1.24
                    evi 24
                    ecmp 2
                }
            }
            bgp-vpn {
                bgp-instance 1 {
                    route-target {
                        export-rt target:64500:24
                        import-rt target:64500:24
                    }
                }
            }
        }
    }
// MAC-VRFs in Leaf-4
--{ [FACTORY] + candidate shared default }--[ network-instance BD* ]--
# info
    network-instance BD24 {
        type mac-vrf
        interface irb0.24 {
        }
        interface lag1.24 {
        }
        vxlan-interface vxlan1.24 {
        }
        protocols {
            bgp-evpn {
                bgp-instance 1 {
                    admin-state enable
                    vxlan-interface vxlan1.24
                    evi 24
                    ecmp 2
                }
            }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

85

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

            bgp-vpn {
                bgp-instance 1 {
                    route-target {
                        export-rt target:64500:24
                        import-rt target:64500:24
                    }
                }
            }
        }
    }
    network-instance BD4 {
        type mac-vrf
        interface ethernet-1/13.4 {
        }
        interface irb0.4 {
        }
        vxlan-interface vxlan1.4 {
        }
        protocols {
            bgp-evpn {
                bgp-instance 1 {
                    admin-state enable
                    vxlan-interface vxlan1.4
                    evi 4
                    ecmp 2
                }
            }
            bgp-vpn {
                bgp-instance 1 {
                    route-target {
                        export-rt target:64500:4
                        import-rt target:64500:4
                    }
                }
            }
        }
    }

Step 6. Configure IP-VRF-10 with bgp-evpn enabled with the EVPN IFL model.

The IP-VRF is configured with the IRB subinterfaces previously created for BD2, BD4, and BD24.
The IP-VRF instances are connected VXLAN tunnels, so routed vxlan-interfaces need to be
associated with IP-VRF-10. A loopback interface is configured in the IP-VRF to test connectivity
among IP-VRFs of the same tenant.

In the following example, LEAF-2's IP-VRF is configured with a BGP PE-CE neighbor to CE-3.

Example
IP-VRF-10 configuration

// IP-VRF-10 in Leaf-2
--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF* ]--
# info
    network-instance IP-VRF-10 {
        type ip-vrf
        interface irb0.2 {
        }
        interface irb0.24 {
        }
        interface lo10.2 {
        }
        vxlan-interface vxlan2.10 {
        }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

86

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

        protocols {
            bgp-evpn {
                bgp-instance 1 {
                    vxlan-interface vxlan2.10
                    evi 10
                    ecmp 2
                }
            }
            bgp {
                admin-state enable
                afi-safi ipv4-unicast {
                    admin-state enable
                }
                autonomous-system 645002
                router-id 2.2.2.2
                group eBGP-PE-CE {
                    admin-state enable
                    export-policy export-all
                    import-policy import-all
                    afi-safi ipv4-unicast {
                        admin-state enable
                    }
                }
                neighbor 20.1.1.3 {
                    peer-as 645003
                    peer-group eBGP-PE-CE
                    local-as as-number 645002 {
                    }
                    transport {
                        local-address 20.1.1.2
                    }
                }
            }
            bgp-vpn {
                bgp-instance 1 {
                    route-target {
                        export-rt target:64500:10
                        import-rt target:64500:10
                    }
                }
            }
        }
    }
// IP-VRF-10 in Leaf-4
--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF* ]--
# info
    network-instance IP-VRF-10 {
        type ip-vrf
        interface irb0.4 {
        }
        interface irb0.24 {
        }
        interface lo10.2 {
        }
        vxlan-interface vxlan2.10 {
        }
        protocols {
            bgp-evpn {
                bgp-instance 1 {
                    vxlan-interface vxlan2.10
                    evi 10
                    ecmp 2
                }
            }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

87

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

            bgp-vpn {
                bgp-instance 1 {
                    route-target {
                        export-rt target:64500:10
                        import-rt target:64500:10
                    }
                }
            }
        }
    }

Step 7. Review the changes, and if correct, commit the changes.

Example

A:dut2# commit stay 
--{ candidate shared default }--[  ]--        

6.2.3.1 IRB subinterface considerations

The following are considerations for configuring IRB subinterfaces (performed in Step 4).

IRB subinterfaces on BDs that are distributed to multiple leaf nodes must be configured with at least one
anycast-gw IP address and an anycast-gw MAC address. When the anycast-gw container is configured,
the anycast-gw MAC address is auto-derived as 00:00:5E:00:01:01 in all the leaf nodes. The MAC address
can also be explicitly configured if needed. In addition:

• The same anycast-gw IP and MAC address must be configured on all IRBs of the same BD.

• All the hosts attached to the same BD use the same default-gateway (that is, the anycast-gw IP)

irrespective of the leaf they are connected to. For example, irb0 subinterfaces 24 are configured with
the same anycast-gw IP on LEAF-2 and LEAF-4 (101.1.1.254) in the configuration example.

• Default gateway redundancy in DCs is realized using anycast-gws, and not VRRP. Anycast-gws avoid
upstream tromboning for hosts that are multi-homed to multiple leaf nodes or for single-homed hosts
that move to other leaf nodes of the same BD.

IRB subinterfaces on BDs that are distributed may also be configured with non-anycast-gw IP addresses.
This is only done when separate IPs are needed to check connectivity per leaf. For example, when LEAF-2
is configured with non-anycast-gw IPs 101.1.1.2 and 102.1.1.254, and LEAF-4 is configured with 104.1.1.4.
and anycast-gw IPs exist in multiple nodes, the anycast-gw IPs should not be used in ICMP tools to check
the availability of a leaf. Non-anycast-gw IPs should be used instead.

IRB subinterfaces on distributed BDs should be configured with the following commands, as shown for
subinterface 24 in LEAF-2 and LEAF-4 in the configuration example:

• arp learn-unsolicited true - Triggers the learning of ARP entries out of any ARP packet arriving at the

IRB subinterface, regardless of whether there was an ARP-Request issued from the IRB.

• arp host-route populate dynamic - Creates host routes (arp-nd) in the IP-VRF route-table from

learned dynamic ARP entries in the IRB. The arp-nd host routes are then advertised to the remote leaf
nodes. This assists the routing of downstream traffic to a specified host without hair-pinning traffic via
another leaf connected to the same BD of the host, but not connected to the host directly.

• arp evpn advertise dynamic - Advertises EVPN MAC/IP routes that include the MAC and the IP of the
dynamic ARP entries. The advertisement of these routes synchronizes the ARP caches in all the IRB
subinterfaces of the same BD.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

88

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

IRB subinterfaces on BDs that are not distributed (that is, BDs attached to only one Leaf node) do not need
to be configured with the following:

• arp host-route-populate dynamic as downstream routing is always direct to the connected leaf

• arp evpn advertise dynamic as ARP entries do not need to be synchronized with any other node

Examples of non-distributed BDs are BD2, BD4, and BD3 as shown in Figure 9: Example of EVPN-VXLAN
IP-VRF domain. Their corresponding IRB subinterfaces do not create host-routes or advertise EVPN MAC/
IP routes for the ARP entries.

6.2.4 Configuring EVPN IFL interoperability to EVPN IFF unnumbered model

About this task

While EVPN IFL for VXLAN is supported by most DC vendors, Nuage WBX or VSC/VRS use the EVPN
IFF Unnumbered model. By default, the SR Linux EVPN IFL (interface-less) model does not inter-operate
with the EVPN IFF (interface-full) model. However, it is possible to configure the SR Linux EVPN IFL model
to inter-operate with the EVPN IFF model.

For more information about EVPN IFL vs EVPN IFF models, see the SR Linux EVPN-VXLAN User Guide
and draft-ietf-bess-evpn-prefix-advertisement.

Procedure

To configure inter-operability in IP-VRF-10, configure the advertise-gateway-mac command as shown in
the following example.

Example: EVPN IFF inter-operability in IP-VRF-10 configuration

--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]--
# protocols bgp-evpn bgp-instance 1 routes route-table mac-ip advertise-gateway-mac
 <value> ?
usage: advertise-gateway-mac <true|false>

If set to true in an ip-vrf where bgp-evpn is enabled, a MAC/IP route
containing the gateway-MAC is advertised.

This gateway-MAC matches the MAC advertised along with the EVPN IFL routes
type 5 for the ip-vrf network-instance. This advertisement is needed so that
the EVPN IFL (Interface-Less) model in the ip-vrf can interoperate with a remote
system working in EVPN IFF (Interface-ful) Unnumbered mode.

Positional arguments:
  value             [true|false, default false]

When set to true, the node advertises a MAC/IP route using all of the following:

• Gateway-mac for IP-VRF-10 (that is, the system-mac)

• RD/RT, next-hop, and VNI of IP-VRF-10

• Null IP address, ESI or Ethernet Tag ID

Example: MAC/IP route advertisement

In the following example, the MAC/IP route advertised is from LEAF-3. The MAC address matches
the system-mac advertised in any local RT5s.

--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]--

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

89

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

# protocols bgp-evpn bgp-instance 1 routes route-table mac-ip advertise-gateway-mac true  

--{ [FACTORY] +* candidate shared default }--[ network-instance IP-VRF-10 ]-- 
# commit stay
All changes have been committed. Starting new transaction.
2021-04-15T01:18:24.688185-07:00 dut3 local6|DEBU sr_bgp_mgr: bgp|4942|5135|1393922|D:
 VR default (1) Peer 1: 1.1.1.1 UPDATE: Peer 1: 1.1.1.1 - Send BGP UPDATE:
    Withdrawn Length = 0
    Total Path Attr Length = 81
    Flag: 0x90 Type: 14 Len: 44 Multiprotocol Reachable NLRI:
        Address Family EVPNandidate shared default
           root (8)  Thu 01:18AM
        NextHop len 4 NextHop 3.3.3.3
        Type: EVPN-MAC Len: 33 RD: 3.3.3.3:10 ESI: ESI-0, tag: 0, mac len: 48 mac:
              00:01:03:ff:00:00, IP len: 0, IP: NULL, label1: 10
    Flag: 0x40 Type: 1 Len: 1 Origin: 0
    Flag: 0x40 Type: 2 Len: 0 AS Path:
    Flag: 0x40 Type: 5 Len: 4 Local Preference: 100
    Flag: 0xc0 Type: 16 Len: 16 Extended Community:
        target:64500:10
        bgp-tunnel-encap:VXLAN

For IPv6, Nuage WBX devices support two EVPN L3 IPv6 modes: IFF unnumbered and IFF
numbered. The SR Linux interoperability mode enabled by the advertise-gateway-mac command
only works with devices that use EVPN IFF unnumbered. This is because EVPN IFL and EVPN IFF
unnumbered models both use the same format in the IP prefix route, and differ only in the additional
MAC/IP route for the gateway-mac. EVPN IFL and EVPN IFF numbered models have different IP
prefix route formats, and cannot inter-operate.

6.2.5 Checking the EVPN IFL model in IP-VRFs

When configured, the state of the IP-VRF-10 on the three leaf nodes and basic connectivity should be
checked.

When the leaf nodes attached to IP-VRF-10 exchange at least one EVPN IP-Prefix route on all leaf nodes
of the tenant, the bgp_mgr requests the fib_mgr to create a VXLAN tunnel to each next-hop of the received
EVPN routes type 5 (RT5s). This assumes the tunnel had not already been created.

When a VXLAN tunnel to the remote VTEP exists, the bgp_mgr requests the next-hop resolution to the
fib_mgr, and if it resolves, the RT5 is installed in the IP-VRF route-table. Using LEAF-3 as a reference, you
can check that RT5s are received from the two remote leaf nodes, and then verify that VXLAN tunnels exist
to their VTEPs and the RT5s are installed in the route-table. Loopbacks are configured on each IP-VRF-10
instance to verify reachability.

6.2.5.1 Checking IP-VRF-10 state and connectivity

Procedure

Use the show network-instance protocols bgp routes evpn route-type prefix command to check RT5s
for the loopbacks 22.22.22.22 and 44.44.44.44 advertised by the remote leaf nodes. You can check that
the routes contain the expected IP-VRF-10 VNI, route-target, and the mac-nh which is used as the inner
destination MAC when sending VXLAN packets to the prefix.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

90

 
 
 
 
      
                                               
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

Example: Check IP-VRF-10 state and connectivity

--{ [FACTORY] + candidate shared default }--[  ]--
# show network-instance default protocols bgp routes evpn route-type 5 prefix 22.22.22.22/32 detail
--------------------------------------------------------------------------------------------------
Show report for the EVPN routes in network-instance  "default"
-------------------------------------------------------------------------------------------------
Route Distinguisher: 2.2.2.2:10
Tag-ID             : 0
ip-prefix-len      : 32
ip-prefix          : 22.22.22.22/32
neighbor           : 2.2.2.2
Gateway IP         : 0.0.0.0
Received paths     : 1
  Path 1: <Best,Valid,Used,>
    ESI             : 00:00:00:00:00:00:00:00:00:00
    VNI             : 10
    Route source    : neighbor 2.2.2.2 (last modified 46m16s ago)
    Route preference: No MED, LocalPref is 100
    Atomic Aggr     : false
    BGP next-hop    : 2.2.2.2
    AS Path         :  i
    Communities     : [target:64500:10, mac-nh:00:01:02:ff:00:00, bgp-tunnel-encap:VXLAN]
    RR Attributes   : No Originator-ID, Cluster-List is []
    Aggregation     : None
    Unknown Attr    : None
    Invalid Reason  : None
    Tie Break Reason: none
---------------------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--
# show network-instance default protocols bgp routes evpn route-type 5 prefix 44.44.44.44/32 summary
---------------------------------------------------------------------------------------------------
Show report for the BGP route table of network-instance "default"
--------------------------------------------------------------------------------------------------
Status codes: u=used, *=valid, >=best, x=stale
Origin codes: i=IGP, e=EGP, ?=incomplete
-------------------------------------------------------------------------------------------------
BGP Router ID: 3.3.3.3      AS: 3333      Local AS: 3333
------------------------------------------------------------------------------------------------
Type 5 IP Prefix Routes
+--------+---------------+-----+----------------+----------+----------+-----+---------+
| Status |   Route-      | Tag | IP-address     | neighbor | Next-Hop | VNI | Gateway |
|        | distinguisher | -ID |                |          |          |     |         |
+========+===============+=====+================+==========+==========+=====+=========+
| u*>    | 4.4.4.4:10    | 0   | 44.44.44.44/32 | 4.4.4.4  | 4.4.4.4  | 10  | 0.0.0.0 |
+--------+---------------+-----+----------------+----------+----------+-----+---------+
---------------------------------------------------------------------------------------
1 IP Prefix routes 1 used, 1 valid
---------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]-- 

6.2.5.2 Checking for VXLAN tunnel creation

Procedure

When the routes are correct, the VXLAN tunnels are created. Use the show network-instance tunnel-
table all command to verify that the VXLAN tunnels are created.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

91

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

Example: Check for VXLAN tunnel creation

--{ [FACTORY] + candidate shared default }--[  ]--
# show network-instance default tunnel-table all
-----------------------------------------------------------------------------------------------------
Show report for network instance "default" tunnel table
------------------------------------------------------------------------------------------------------
+-------------+-----------+-------+-------+--------+------------+---------+--------------------------+
| IPv4 Prefix |   Owner   | Type  | Index | Metric | Preference |Fib-prog |       Last Update        |
+=============+===========+=======+=======+========+============+=========+==========================+
| 2.2.2.2/32  | vxlan_mgr | vxlan | 7     | 0      | 0          | Y       | 2021-04-13T10:43:09.483Z |
| 4.4.4.4/32  | vxlan_mgr | vxlan | 6     | 0      | 0          | Y       | 2021-04-13T10:43:09.144Z |
+-------------+-----------+-------+-------+--------+------------+---------+--------------------------+
------------------------------------------------------------------------------------------------------
2 VXLAN tunnels, 2 active, 0 inactive
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
Show report for network instance "default" tunnel table
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]-- 

6.2.5.3 Checking for remote VTEPS and associated destinations

Procedure

Use the show tunnel vxlan-tunnel vtep command to show the remote VTEPs and the associated
destinations. A destination is the combination of the VTEP and VNI that is created when the EVPN routes
are received and the VXLAN tunnel is created. IP destinations are created from RT5s.

Example: Check for remote VTEPs and associated destinations

# show tunnel vxlan-tunnel vtep 2.2.2.2 
----------------------------------------------------------------------------
Show report for vxlan-tunnels vtep
---------------------------------------------------------------------------
VTEP Address: 2.2.2.2
Index       : 202418627561
Last Change : 2021-04-13T11:47:09.000Z
---------------------------------------------------------------------------
Destinations
---------------------------------------------------------------------------
+------------------+-----------------+------------+-----------------------+
| Tunnel Interface | VXLAN Interface | Egress VNI |         Type          |
+==================+=================+============+=======================+
| vxlan1           | 1               | 1          | multicast-destination |
| vxlan2           | 10              | 10         | ip-destination        |
+------------------+-----------------+------------+-----------------------+
---------------------------------------------------------------------------
1 bridged destinations, 1 multicast, 0 unicast, 0 es
1 routed destinations
--------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--
# show tunnel vxlan-tunnel vtep 4.4.4.4
---------------------------------------------------------------------------
Show report for vxlan-tunnels vtep
---------------------------------------------------------------------------
VTEP Address: 4.4.4.4
Index       : 202418627553
Last Change : 2021-04-14T15:40:23.000Z

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

92

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

--------------------------------------------------------------------------
Destinations
---------------------------------------------------------------------------
+------------------+-----------------+------------+-----------------------+
| Tunnel Interface | VXLAN Interface | Egress VNI |         Type          |
+==================+=================+============+=======================+
| vxlan1           | 1               | 1          | multicast-destination |
| vxlan1           | 1               | 1          | unicast-destination   |
| vxlan2           | 10              | 10         | ip-destination        |
+------------------+-----------------+------------+-----------------------+
---------------------------------------------------------------------------
2 bridged destinations, 1 multicast, 1 unicast, 0 es
1 routed destinations
--------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]-- 

6.2.5.4 Checking IP-VRF-10 route table

Procedure

Use the show route-table ipv4-unicast summary command to check the IP-VRF-10 route table to ensure
all the remote subnets and hosts are received and installed. All interface and local routes are automatically
advertised in RT5s. Because ECMP=2 is configured in the IP-VRF-10, there are two ECMP paths for the
101.1.1.0/24 subnet, which is attached to both LEAF-2 and LEAF-4.

Example: Check IP-VRF-10 route table

--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]-- 
# show route-table ipv4-unicast summary
------------------------------------------------------------------------------------------------
IPv4 Unicast route table of network instance IP-VRF-10
------------------------------------------------------------------------------------------------
+-----------------+-----+--------+------------+--------+------+--------------------+-----------+
|     Prefix      | ID  | Active | Route Type | Metric | Pref |  Next-hop (Type)   | Next-hop  |
|                 |     |        |            |        |      |                    | Interface |
+=================+=====+========+============+========+======+====================+===========+
| 31.31.31.31/32  | 0   | true   | bgp-evpn   | 0      | 170  | 2.2.2.2 (indirect) | None      |
| 20.1.1.0/24     | 0   | true   | bgp-evpn   | 0      | 170  | 2.2.2.2 (indirect) | None      |
| 20.1.1.3/32     | 0   | true   | bgp-evpn   | 0      | 170  | 2.2.2.2 (indirect) | None      |
| 22.22.22.22/32  | 0   | true   | bgp-evpn   | 0      | 170  | 2.2.2.2 (indirect) | None      |
| 33.33.33.33/32  | 0   | true   | host       | 0      | 0    | None (extract)     | None      |
| 44.44.44.44/32  | 0   | true   | bgp-evpn   | 0      | 170  | 4.4.4.4 (indirect) | None      |
| 101.1.1.0/24    | 0   | true   | bgp-evpn   | 0      | 170  | 2.2.2.2 (indirect) | None      |
|                 |     |        |            |        |      | 4.4.4.4 (indirect) | None      |
| 101.1.1.1/32    | 0   | true   | bgp-evpn   | 0      | 170  | 2.2.2.2 (indirect) | None      |
| 102.1.1.0/24    | 0   | true   | bgp-evpn   | 0      | 170  | 2.2.2.2 (indirect) | None      |
| 103.1.1.0/24    | 0   | true   | local      | 0      | 0    | 103.1.1.3 (direct) | irb0.3    |
| 103.1.1.1/32    | 0   | true   | arp-nd     | 0      | 1    | 103.1.1.1 (direct) | irb0.3    |
| 103.1.1.3/32    | 0   | true   | host       | 0      | 0    | None (extract)     | None      |
| 103.1.1.254/32  | 0   | true   | host       | 0      | 0    | None (extract)     | None      |
| 103.1.1.255/32  | 0   | true   | host       | 0      | 0    | None (broadcast)   | None      |
| 104.1.1.0/24    | 0   | true   | bgp-evpn   | 0      | 170  | 4.4.4.4 (indirect) | None      |
+-----------------+-----+--------+------------+--------+------+--------------------+-----------+
------------------------------------------------------------------------------------------------
15 IPv4 routes total
15 IPv4 prefixes with active routes
1 IPv4 prefixes with active ECMP routes
-----------------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]--

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

93

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

6.2.5.5 Checking route-table state for a RT5

Procedure

Use the info from state route-table command to check the route-table state for a RT5. This can be
useful to understand how the RT5 is resolved to a vxlan tunnel and what vxlan VNI, inner source, and
destination MACs are be used when sending VXLAN packets to that route. The following uses ECMP route
101.1.1.0/24 on LEAF-3. The route's next-hop group has two separate next-hops pointing at the remote
LEAF-2 and LEAF-4 VTEPs:

Example: Check route-table state for a RT5

--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]-- 
# info from state route-table ipv4-unicast route 101.1.1.0/24 id 0 
    route-table {
        ipv4-unicast {
            route 101.1.1.0/24 id 0 {
                route-type bgp-evpn
                route-owner bgp_evpn_mgr
                metric 0
                preference 170
                active true
                last-app-update "a day ago"
                next-hop-group 202418627581
                resilient-hash false
                fib-programming {
                    status success
                }
            }
        }
    }
--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]--
# info from state route-table next-hop-group 202418627581 next-hop *
    route-table {
        next-hop-group 202418627581 {
            next-hop 0 {
                next-hop 202418627569
                resolved true
            }
            next-hop 1 {
                next-hop 202418627565
                resolved true
            }
        }
    }
--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]--
# info from state route-table next-hop 202418627569 
    route-table {
        next-hop 202418627569 {
            type indirect
            ip-address 2.2.2.2
            resolving-tunnel {
                ip-prefix 2.2.2.2/32
                tunnel-type vxlan
                tunnel-owner vxlan_mgr
            }
            vxlan {
                vni 10
                source-mac 00:01:03:FF:00:00
                destination-mac 00:01:02:FF:00:00
            }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

94

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

        }
    }

6.2.5.6 Monitoring pings

Procedure

Use the tools system traffic-monitor command to monitor pings between the local LEAF-3 loopback and
LEAF-2's loopback (22.22.22.22), the inner source, and destination MACs that are associated to the RT5's
next-hop that are used in the actual packets. Note that the source-mac is the chassis MAC advertised in
the mac-nh of the local RT5s:

Example: Monitor pings

--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]--
// a ping is sent from Leaf-3 to 22.22.22.22 (the loopback on Leaf-2’s IP-VRF-10)
# network-instance IP-VRF-10

--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]--
# ping 22.22.22.22 
Using network instance IP-VRF-10
PING 22.22.22.22 (22.22.22.22) 56(84) bytes of data.
64 bytes from 22.22.22.22: icmp_seq=1 ttl=64 time=4.88 ms
64 bytes from 22.22.22.22: icmp_seq=2 ttl=64 time=4.76 ms
^C
--- 22.22.22.22 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1000ms
rtt min/avg/max/mdev = 4.767/4.827/4.888/0.092 ms
// the monitor command catches the inner packet sent on VXLAN
--{ [FACTORY] +! candidate shared default }--[ network-instance IP-VRF-10 ]--
# /tools system traffic-monitor destination-address 33.33.33.33 protocol icmp
Running as user "root" and group "root". This could be dangerous.
Capturing on 'monit'
1       0.000000000     ethernet-1/1    00:01:02:ff:00:00       00:01:03:ff:00:00
         22.22.22.22     33.33.33.33    ICMP    146     Echo (ping) reply    id=0x580c,
         seq=1/256, ttl=64

// the source MAC is the local chassis mac:

--{ [FACTORY] + candidate shared default }--[  ]-- 
# info from state platform chassis mac-address
    platform {
        chassis {
            mac-address 00:01:03:FF:00:00
        }
    }

// that source MAC is also advertised in the RT5’s mac-nh

--{ [FACTORY] + candidate shared default }--[  ]--
# info from state network-instance default bgp-rib evpn rib-in-out rib-out-post ip-prefix-routes
 3.3.3.3:10 ethernet-tag-id 0 ip-prefix-length 32 ip-prefix 33.33.33.33/32 neighbor 2.2.2.2
    network-instance default {
        bgp-rib {
            evpn {
                rib-in-out {
                    rib-out-post {
                        ip-prefix-routes 3.3.3.3:10 ethernet-tag-id 0 ip-prefix-length 32
                        ip-prefix 33.33.33.33/32 neighbor 2.2.2.2 {
                            esi 00:00:00:00:00:00:00:00:00:00

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

95

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

                            gateway-ip 0.0.0.0
                            vni 10
                            attr-id 132
                            next-hop 3.3.3.3
                        }
                    }
                }
            }
        }
    }
--{ [FACTORY] + candidate shared default }--[  ]--
# info from state network-instance default bgp-rib attr-sets attr-set rib-out index 132
    network-instance default {
        bgp-rib {
            attr-sets {
                attr-set rib-out index 132 {
                    origin igp
                    atomic-aggregate false
                    next-hop 3.3.3.3
                    med 0
                    local-pref 100
                    aggregator {
                    }
                    pmsi-tunnel {
                    }
                    communities {
                        ext-community [
                            target:64500:10
                            mac-nh:00:01:03:ff:00:00
                            bgp-tunnel-encap:VXLAN
                        ]
                    }
                    unknown-attributes {
                    }
                }
            }
        }
    }

The received EVPN IFL IP Prefix routes are only installed in the IP-VRF-10 route-table if:

•

•

•

the import route-target matches the RT5 route-target

the RT5's VNI matches the VNI of the vxlan-interface in the IP-VRF-10

the RT5's gateway-ip is zero

Additional guidelines:

•

Importing an RT5 into multiple ip-vrf network-instances is not supported due to the VNI restriction:
an ip-vrf can only use a single VNI for ingress and egress VXLAN packets. This is a TD3
limitation.

• The route next-hop cannot be changed in ip-vrf network-instances. It is always the system-ip in

this release.

• The ip-vrf bgp-evpn bgp instance can be oper-down for the same reasons as the bgp-evpn bgp
instance can be down in mac-vrfs. See EVPN-VXLAN for layer-2 and multi-homing for details.

• VXLAN statistics are also accounted for when EVPN-IFL is used.

• No MTU checks are done for VXLAN in EVPN-IFL. If the routed packet plus the VXLAN overhead
exceeds the underlay interface MTU of the egress interface in the default network-instance, the
packet is still encapsulated and sent to the remote leaf. No statistics increment or drops occur.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

96

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

• Outer TTL for VXLAN packets is always initialized to 255 and not copied or propagated from or to

the inner IP packet.

6.2.6 Checking PE-CE routing on an IP-VRF with EVPN-IFL

In an EVPN-VXLAN Layer 3 network, PE-CE routing refers to the unicast routing between a CE connected
to a BD in a leaf node and the IRB subinterface of the IP-VRF connected to the same BD. Static or BGP
routing is supported in SR Linux. BFD can also be used between the IRB and the CE.

6.2.6.1 Checking PC-CE routing on IP-VRF

Procedure

Figure 9: Example of EVPN-VXLAN IP-VRF domain depicts a PE-CE BGP session between CE-3 and IP-
VRF-10 in LEAF-2. Use the following configuration in IP-VRF-10 to enable a PE-CE BGP session to CE-3.

Example: Check PE-CE routing on IP-VRF

// IP-VRF-10 in Leaf-2
--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF* ]--
# info 
    network-instance IP-VRF-10 {
        type ip-vrf
        interface irb0.2 {
        }
        interface irb0.24 {
        }
        interface lo10.2 {
        }
        vxlan-interface vxlan2.10 {
        }
        protocols {
            bgp-evpn {
                bgp-instance 1 {
                    vxlan-interface vxlan2.10
                    evi 10
                    ecmp 2
                }
            }
            bgp {
                admin-state enable
                afi-safi ipv4-unicast {
                    admin-state enable
                }
                autonomous-system 645002
                router-id 2.2.2.2
                group eBGP-PE-CE {
                    admin-state enable
                    export-policy export-all
                    import-policy import-all
                    afi-safi ipv4-unicast {
                        admin-state enable
                    }
                }
                neighbor 20.1.1.3 {
                    peer-as 645003
                    peer-group eBGP-PE-CE
                    local-as as-number 645002 {

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

97

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

                    }
                    transport {
                        local-address 20.1.1.2
                    }
                }
            }
            bgp-vpn {
                bgp-instance 1 {
                    route-target {
                        export-rt target:64500:10
                        import-rt target:64500:10
                    }
                }
            }
        }
    }
--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]-- 
# show protocols bgp neighbor 20.1.1.3 
---------------------------------------------------------------------------------------------------
BGP neighbor summary for network-instance "IP-VRF-10"
Flags: S static, D dynamic, L discovered by LLDP, B BFD enabled, - disabled, * slow
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
+-----------+----------+------------+--------+---------+------------+---------+---------+------------+
|  Net-Inst |    Peer  |   Group    |  Flags | Peer-AS |   State    |  Uptime | AFI/    | [Rx/Active |
|           |          |            |        |         |            |         | SAFI    |    /Tx]    |
+===========+============+==========+========+=========+============+=========+======================+
| IP-VRF-10 | 20.1.1.3 | eBGP-PE-CE | S      | 645003  | established| 1d:21h: | ipv4-   | [2/1/11]   |
|           |          |            |        |         |            | 46m:56s | unicast |            |
+------------+----------+-----------+--------+---------+------------+---------+---------+------------+
-----------------------------------------------------------------------------------------------------
1 configured neighbors, 1 configured sessions are established,0 disabled peers
0 dynamic peers

6.2.6.2 PE-CE EBGP session: import and export policies

By default, all local routes to the IP-VRF route-table are automatically advertised in EVPN-IFL routes. This
includes static routes, local routes, IGP routes, arp-nd host routes, and so on. Consider the following for
routes coming from or going to a PE-CE EBGP session.

• EVPN-IFL to PE-CE EBGP: An export policy must be configured so that EVPN IFL routes can be re-

advertised to a CE on the PE-CE BGP session.

• PE-CE EBGP to EVPN-IFL: Either an import policy to accept the routes or ebgp-default-policy import-

reject-all false must be configured so that the BGP routes are re-advertised to EVPN-IFL.

For example, the following two policies are configured to import and export all routes:

Example: PE-CE EBGP session: import and export policies

--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]--
# /info routing-policy policy import-all
    routing-policy {
        policy import-all {
            statement 1 {
                action {
                    accept {
                    }
                }
            }
        }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

98

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

    }
--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]--
# /info routing-policy policy export-all 
    routing-policy {
        policy export-all {
            statement 1 {
                action {
                    accept {
                    }
                }
            }
        }
    }

6.2.6.3 Additional PE-CE considerations

BGP PE-CE sessions can only be established with primary IP addresses. Therefore, in an IRB with both an
anycast-gw-ip and a non-anycast-gw-ip, the BGP session can be setup against the non-anycast-gw-ip only
if it is configured as primary.

A BGP session is not established if the configured BGP local-address for that session is a non-primary
address. Adding a secondary address on an interface where the primary address has established a BGP
session is supported.

Example: BGP PE-CE sessions and primary IP addresses

In the following, the local IP address is primary, but not an anycast-gw IP:

--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]--
# /info from state interface irb0 subinterface 2
    interface irb0 {
        subinterface 2 {
            admin-state enable
            ip-mtu 1500
            name irb0.2
            ifindex 1082130435
            oper-state up
            last-change "a day ago"
            ipv4 {
                allow-directed-broadcast false
                address 20.1.1.2/24 {
                    anycast-gw false
                    origin static
                    primary
                    status preferred
                }
                arp {
                    duplicate-address-detection true
                    timeout 14400
                    learn-unsolicited true
                    debug [
                        messages
                    ]
                    neighbor 20.1.1.3 {
                        link-layer-address 00:01:03:FF:00:0B
                        origin dynamic
                        expiration-time "an hour from now"
                    }
                    host-route {
                        populate dynamic {
                        }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

99

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

                    }
                    evpn {
                    }
                }
            }
            anycast-gw {
                virtual-router-id 1
                anycast-gw-mac 00:00:5E:00:01:01
                anycast-gw-mac-origin vrid-auto-derived
            }

6.2.6.3.1 Changing the route preference

Procedure

In SR Linux, the route selection across BGP families (EVPN-IFL vs PE-CE IPv4/v6) occurs based
on the route-table preference. For example, if the same prefix 31.31.31.31/32 is received on the IP-
VRF-10's route-table via BGP PE-CE (ipv4 family) and via EVPN-IFL, the route with the lowest route-table
preference wins. By default, the preference for both EVPN-IFL and BGP PE-CE is set to 170. Therefore,
for the PE-CE route to be selected, use the protocols bgp preference ebgp command to change the
preference for the PE-CE routes to a value lower than 170 as shown in the following example.

Example: Changing the route preference

--{ [FACTORY] +* candidate shared default }--[ network-instance IP-VRF-10 ]-- 
# diff             
    protocols {
        bgp {
            preference {
+               ebgp 160
            }
        }
    }
--{ [FACTORY] +* candidate shared default }--[ network-instance IP-VRF-10 ]--
# commit stay
All changes have been committed. Starting new transaction.
--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]-- 
# show route-table ipv4-unicast prefix 31.31.31.31/32 detail
---------------------------------------------------------------------------
IPv4 Unicast route table of network instance IP-VRF-10
---------------------------------------------------------------------------
Destination   : 31.31.31.31/32
ID            : 0
Route Type    : bgp
Metric        : 0
Preference    : 160
Active        : true
Last change   : 2021-04-15T09:05:53.745Z
Resilient hash: false
--------------------------------------------------------------------------
Next hops: 1 entries
20.1.1.3 (indirect) resolved by 20.1.1.3/32 (arp-nd)
  via 20.1.1.3 (direct) via [irb0.2] 
--------------------------------------------------------------------------
Destination   : 31.31.31.31/32
ID            : 1
Route Type    : bgp-evpn
Metric        : 0
Preference    : 170
Active        : false

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

100

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

Last change   : 2021-04-15T08:58:50.600Z
Resilient hash: false
-----------------------------------------------------------------------------
Next hops: 1 entries
3.3.3.3 (indirect) resolved by None (None)
-----------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]-- 

In the current release, there is no ECMP across different owners (for instance across EVPN-IFL and
PE-CE BGP), only within the same routing owner.

6.2.7 Checking multi-homing in an EVPN-VXLAN Layer 3 network

An EVPN-VXLAN Layer 3 network needs to provide a multi-homing solution where upstream and
downstream traffic is always routed efficiently, without hair-pinning. As shown in Figure 10: Example of
EVPN-VXLAN layer 3 multi-homing, LEAF-2 and LEAF-4 are all-active multi-homed to SERVER-1. The
use of IRB anycast-gw IP and MAC addresses, along with the synchronization of MACs and ARPs on the
multi-homed leaf nodes, provides efficient routing.

Figure 10: Example of EVPN-VXLAN layer 3 multi-homing

6.2.7.1 Consistency check for anycast-gw IPs

The configuration of the anycast-gw must be consistent in the IRB sub-interfaces of LEAF-2 and LEAF-4.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

101

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

6.2.7.1.1 Checking anycast-gw IP address consistency

Procedure

Use the info from state command for the subinterface to check the consistency of the anycast-gw
configuration.

Example: Check configuration consistency

// Leaf-2 irb0.24 subinterface
--{ [FACTORY] + candidate shared default }--[  ]-- 
# info from state interface irb0 subinterface 24
    interface irb0 {
        subinterface 24 {
            admin-state enable
            ip-mtu 1500
            name irb0.24
            ifindex 1082130457
            oper-state up
            last-change "2 days ago"
            ipv4 {
                allow-directed-broadcast false
                address 101.1.1.254/24 {
                    anycast-gw true
                    origin static
                    primary
                    status preferred
                }
            anycast-gw {
                virtual-router-id 1
                anycast-gw-mac 00:00:5E:00:01:01
                anycast-gw-mac-origin vrid-auto-derived
            }
// Leaf-4 irb.024 subinterface
--{ [FACTORY] + candidate shared default }--[  ]--
# info from state interface irb0 subinterface 24
    interface irb0 {
        subinterface 24 {
            admin-state enable
            ip-mtu 1500
            name irb0.24
            ifindex 1082130457
            oper-state up
            last-change "2 days ago"
            ipv4 {
                allow-directed-broadcast false
                address 101.1.1.254/24 {
                    anycast-gw true
                    origin static
                    primary
                    status preferred
                }
            anycast-gw {
                virtual-router-id 1
                anycast-gw-mac 00:00:5E:00:01:01
                anycast-gw-mac-origin vrid-auto-derived
            }

The anycast-gw-mac address is automatically derived by default as 00:00:5e:00:01:VRID per draft-
ietf-bess-evpn-inter-subnet-forwarding. It can also be manually configured. Either way, the anycast-
gw IP and MAC must match in the two leaf nodes.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

102

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

6.2.7.1.2 Checking anycast-gw IP address resolution

About this task

In the next example, HOST-12 is configured with default-gw 101.1.1.254 (the anycast-gw IP address
of BD24). When HOST-12 ARPs for the default-gw IP, the ARP Request can be hashed to either leaf.
Regardless which leaf gets the ARP Request, the ARP reply contains the anycast-gw MAC. Unicast
traffic from HOST-12 can now be hashed to either leaf (for example, LEAF-2 in Figure 10: Example
of EVPN-VXLAN layer 3 multi-homing) and the receiving leaf node always routes the traffic directly to
LEAF-3 without sending it to the peer leaf first (LEAF-4 in the example). Using no anycast-gw IPs or MAC
addresses causes hair-pinning and uses unnecessary spine bandwidth.

Procedure

Use the arp and ping commands to show the resolution of the anycast-gw IP from HOST-12 and upstream
routed traffic.

Example: anycast-gw IP address resolution

[:host-12]$ arp -n -I veth2
[:host-12]$ 
[:host-12]$ 
[:host-12]$ ping 33.33.33.33
PING 33.33.33.33 (33.33.33.33) 56(84) bytes of data.
02:58:15.782587 00:00:64:01:01:01 > Broadcast, ethertype ARP (0x0806), length 42:
  Request who-has 101.1.1.254 tell 101.1.1.1, length 28

02:58:15.787404 00:00:5e:00:01:01 > 00:00:64:01:01:01, ethertype ARP (0x0806),
  length 60: Reply 101.1.1.254 is-at 00:00:5e:00:01:01, length 46

02:58:15.787436 00:00:64:01:01:01 > 00:00:5e:00:01:01, ethertype IPv4 (0x0800),
  length 98: 101.1.1.1 > 33.33.33.33: ICMP echo request, id 3140, seq 1, length 64

02:58:15.791393 00:00:5e:00:01:01 > 00:00:64:01:01:01, ethertype IPv4 (0x0800),
  length 98: 33.33.33.33 > 101.1.1.1: ICMP echo reply, id 3140, seq 1, length 64

64 bytes from 33.33.33.33: icmp_seq=1 ttl=63 time=8.96 ms

--- 33.33.33.33 ping statistics ---
9 packets transmitted, 9 received, 0% packet loss, time 8008ms
rtt min/avg/max/mdev = 2.362/3.792/8.962/1.907 ms
[:host-12]$ arp -n -i veth2
Address                  HWtype  HWaddress           Flags Mask            Iface
101.1.1.254              ether   00:00:5e:00:01:01   C                     veth2

6.2.7.1.3 Checking synchronization in both multi-home leaf nodes

About this task

As shown in Figure 10: Example of EVPN-VXLAN layer 3 multi-homing, downstream routed traffic from
LEAF-3 to HOST-12 is routed directly by LEAF-2 or LEAF-4 without hair-pinning, regardless of who gets
the packets. This occurs because HOST-12's ARP and the MAC entries are synchronized in both multi-
homed leaf nodes. LEAF-2 learns 101.1.1.1->00:00:64:01:01:01 (host-12 ip and mac) as dynamic and
advertises both in MAC/IP routes that are imported by LEAF-4. LEAF-4 installs the HOST-12 ARP and
MAC entries as evpn. However, the MAC points at the local ES lag interface, and forwarding is direct to
HOST-12.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

103

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

Procedure

To verify the synchronization in both multi-home leaf nodes, show the ARP entries for the IRB subinterface
and show the MAC table report for the network-instance.

Example: Synchronization in both multi-home leaf nodes

--{ [FACTORY] + candidate shared default }--[  ]-- 
# show arpnd arp-entries interface irb0 subinterface 24
+-----------+-----------+----------------+-----------+----------------------+-----------------+
| Interface | Subinterf |    Neighbor    |  Origin   |  Link layer address  | Expiry          |
|           |    ace    |                |           |                      |                 |
+===========+===========+================+===========+======================+=================+
| irb0      |        24 |      101.1.1.1 |   dynamic | 00:00:64:01:01:01    | 3 hours from now|
| irb0      |        24 |      101.1.1.4 |      evpn | 00:01:04:FF:00:41    |                 |
+-----------+-----------+----------------+-----------+----------------------+-----------------+
---------------------------------------------------------------------------------------------
  Total entries : 2 (0 static, 2 dynamic)
----------------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--
# show network-instance BD24 bridge-table mac-table all
----------------------------------------------------------------------------------------------
Mac-table of network instance BD24
-----------------------------------------------------------------------------------------------
+--------------+---------------------+-------+--------+------+-----+--------------------------+
|   Address    | Destination         | Dest- |  Type  |Active|Aging|      Last Update         |
|              |                     | Index |        |      |     |                          |
+==============+=====================+=======+========+======+=====+==========================+
| 00:00:5E:00: | irb                 | 0     | irb-int| true | N/A | 2021-04-13T10:42:14.000Z |
|  01:01       |                     |       | erface-|      |     |                          |
|              |                     |       | anycast|      |     |                          |
| 00:00:64:01: | lag1.24             | 20    | learnt | true | 285 | 2021-04-15T10:13:11.000Z |
|  01:01       |                     |       |        |      |     |                          |
| 00:00:66:01: | ethernet-1/12.24    | 17    | learnt | true | 285 | 2021-04-15T10:13:11.000Z |
|  01:01       |                     |       |        |      |     |                          |
| 00:01:02:FF: | irb                 | 0     | irb-int| true | N/A | 2021-04-13T10:42:14.000Z |
|  00:41       |                     |       | erface |      |     |                          |
| 00:01:04:FF: | vxlan-interface:    | 202418| evpn-  | true | N/A | 2021-04-13T10:42:54.000Z |
|  00:41       |  vxlan1.24          |       |        |      |     |                          |
|              | vtep:4.4.4.4 vni:24 | 653897| static |      |     |                          |
+--------------+---------------------+-------+--------+------+-----+--------------------------+
Total Irb Macs            :    1 Total    1 Active
Total Static Macs         :    0 Total    0 Active
Total Duplicate Macs      :    0 Total    0 Active
Total Learnt Macs         :    2 Total    2 Active
Total Evpn Macs           :    0 Total    0 Active
Total Evpn static Macs    :    1 Total    1 Active
Total Irb anycast Macs    :    1 Total    1 Active
Total Macs                :    5 Total    5 Active
-----------------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--   

// ARP and MAC entries for Leaf-4

--{ [FACTORY] + candidate shared default }--[  ]--
# show arpnd arp-entries interface irb0 subinterface 24
+-----------+-----------+----------------+-----------+----------------------+-------+
| Interface | Subinterf |    Neighbor    |  Origin   |  Link layer address  | Expiry|
|           |    ace    |                |           |                      |       |
+===========+===========+================+===========+======================+=======+
| irb0      |        24 |      101.1.1.1 |      evpn | 00:00:64:01:01:01    |       |
| irb0      |        24 |      101.1.1.2 |      evpn | 00:01:02:FF:00:41    |       |
+-----------+-----------+----------------+-----------+----------------------+-------+

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

104

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

------------------------------------------------------------------------------------
  Total entries : 2 (0 static, 2 dynamic)
------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--
# show network-instance BD24 bridge-table mac-table all
-------------------------------------------------------------------------------------
Mac-table of network instance BD24
------------------------------------------------------------------------------------
+-------------------+--------------------------+------+--------+------+-----+-----------------+
|      Address      |        Destination       |Dest  | Type   |Active|Aging|   Last Update   |
|                   |                          |Index |        |      |     |                 |
+===================+==========================+======+========+======+=====+=================+
| 00:00:5E:00:01:01 | irb                      | 0    |irb-int | true | N/A |2021-04-13T10:42:|
|                   |                          |      |erface- |      |     |  38.000Z        |
|                   |                          |      |anycast |      |     |                 |
| 00:00:64:01:01:01 | lag1.24                  | 18   |evpn    | true | N/A |2021-04-15T10:04:|
|                   |                          |      |        |      |     |  12.000Z        |
| 00:00:66:01:01:01 |vxlan-interface:vxlan1.24 |202418|evpn    | true | N/A |2021-04-15T10:13:|
|                   |vtep:2.2.2.2 vni:24       |654989|        |      |     |  12.000Z        |
| 00:01:02:FF:00:41 |vxlan-interface:vxlan1.24 |202418|evpn-   | true | N/A |2021-04-13T10:42:|
|                   |vtep:2.2.2.2 vni:24       |654989|static  |      |     |  54.000Z        |
| 00:01:04:FF:00:41 |irb                       |0     |irb-int | true | N/A |2021-04-13T10:42:|
|                   |                          |      |erface  |      |     | 38.000Z         |
+-------------------+--------------------------+------+--------+------+-----+-----------------+
Total Irb Macs            :    1 Total    1 Active
Total Static Macs         :    0 Total    0 Active
Total Duplicate Macs      :    0 Total    0 Active
Total Learnt Macs         :    0 Total    0 Active
Total Evpn Macs           :    2 Total    2 Active
Total Evpn static Macs    :    1 Total    1 Active
Total Irb anycast Macs    :    1 Total    1 Active
Total Macs                :    5 Total    5 Active
-----------------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--

6.2.7.2 Non-anycast-gw IP addresses

In addition to using anycast-gw IPs for the routed traffic, the multi-homed leaf nodes also have non-
anycast-gw IPs that can be used for ICMP. The examples that follow check the availability of each
individual Leaf IRB (LEAF-2 and LEAF-4).

6.2.7.2.1 Checking LEAF-2 IRB availability

Procedure

Use the show interfaces command to check the LEAF-2 IRB availability. LEAF-2 has a non-anycast-gw IP
of 101.1.1.2.

Example: Check LEAF-2 IRB availability

--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]--
# show interfaces irb0.24
====================================================================================
Net instance    : IP-VRF-10
Interface       : irb0.24
Oper state      : up
Ip mtu          : 1500
  Prefix                                    Origin       Status

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

105

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

  ==================================================================================
  101.1.1.2/24                              static       preferred
  101.1.1.254/24                            static       preferred, primary, anycast
  102.1.1.254/24                            static       preferred
  2001:db8:24::254/64                       static       preferred, primary, anycast
  fe80::200:5eff:fe00:101/64                link-layer   preferred, anycast
  fe80::201:2ff:feff:41/64                  link-layer   preferred
====================================================================================
--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]--

6.2.7.2.2 Checking LEAF-4 IRB availability

Procedure

Use the show interfaces command to check the LEAF-4 IRB availability. LEAF-4 has a non-anycast-gw IP
of 101.1.1.4 in the same IRB:

Example: Check LEAF-4 IRB availability

--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]--
# show interfaces irb0.24
=====================================================================================
Net instance    : IP-VRF-10
Interface       : irb0.24
Oper state      : up
Ip mtu          : 1500
  Prefix                                    Origin       Status
  ===================================================================================
  101.1.1.4/24                              static       preferred
  101.1.1.254/24                            static       preferred, primary, anycast
  fe80::200:5eff:fe00:101/64                link-layer   preferred, anycast
  fe80::201:4ff:feff:41/64                  link-layer   preferred
====================================================================================
--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]--

6.2.7.2.3 Checking non-anycast-gw IPs reachability

Procedure

Use the arp and ping commands to check the non-anycast-gw IPs reachability.

Both non-anycast-gw IPs are reachable from HOST-12. ARP Requests to non-anycast-gw IPs reply with
the chassis MAC of the leaf and not with the anycast-gw MAC of the IRB. This allows using the non-
anycast-gw IPs for troubleshooting purposes when there are anycast-gw IPs on the same IRBs. The
example output from HOST-12 demonstrates this:

Example: non-anycast-gw IPs reachability from host

[:host-12]$ arp -n -i veth2
Address                  HWtype  HWaddress           Flags Mask            Iface
101.1.1.254              ether   00:00:5e:00:01:01   C                     veth2

[:host-12]$ ping 101.1.1.2
PING 101.1.1.2 (101.1.1.2) 56(84) bytes of data.

03:25:41.291765 00:00:64:01:01:01 > Broadcast, ethertype ARP (0x0806), length 42: 
  Request who-has 101.1.1.2 tell 101.1.1.1, length 28

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

106

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

03:25:41.295105 00:01:02:ff:00:41 > 00:00:64:01:01:01, ethertype ARP (0x0806), 
   length 60: Reply 101.1.1.2 is-at 00:01:02:ff:00:41, length 46

03:25:41.295130 00:00:64:01:01:01 > 00:01:02:ff:00:41, ethertype IPv4 (0x0800), 
   length 98:101.1.1.1 > 101.1.1.2: ICMP echo request, id 3307, seq 1, length 64

03:25:41.299204 00:01:02:ff:00:41 > 00:00:64:01:01:01, ethertype IPv4 (0x0800), 
   length 98: 101.1.1.2 > 101.1.1.1: ICMP echo reply, id 3307, seq 1, length 64

64 bytes from 101.1.1.2: icmp_seq=1 ttl=64 time=7.59 ms

--- 101.1.1.2 ping statistics ---
4 packets transmitted, 4 received, 0% packet loss, time 3003ms
rtt min/avg/max/mdev = 2.073/3.684/7.596/2.269 ms

[:host-12]$ arp -n -i veth2
Address                  HWtype  HWaddress           Flags Mask            Iface
101.1.1.254              ether   00:00:5e:00:01:01   C                     veth2
101.1.1.2                ether   00:01:02:ff:00:41   C                     veth2
[:host-12]$ ping 101.1.1.4
PING 101.1.1.4 (101.1.1.4) 56(84) bytes of data.

03:25:52.696934 00:00:64:01:01:01 > Broadcast, ethertype ARP (0x0806), length 42:
   Request who-has 101.1.1.4 tell 101.1.1.1, length 28

03:25:52.700615 00:01:04:ff:00:41 > 00:00:64:01:01:01, ethertype ARP (0x0806), 
   length 60: Reply 101.1.1.4 is-at 00:01:04:ff:00:41, length 46

03:25:52.700649 00:00:64:01:01:01 > 00:01:04:ff:00:41, ethertype IPv4 (0x0800), 
   length 98: 101.1.1.1 > 101.1.1.4: ICMP echo request, id 3318, seq 1, length 64

03:25:52.703463 00:01:04:ff:00:41 > 00:00:64:01:01:01, ethertype IPv4 (0x0800), 
   length 98: 101.1.1.4 > 101.1.1.1: ICMP echo reply, id 3318, seq 1, length 64

64 bytes from 101.1.1.4: icmp_seq=1 ttl=64 time=6.64 ms

--- 101.1.1.4 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2003ms
rtt min/avg/max/mdev = 2.200/3.821/6.648/2.006 ms

[:host-12]$ arp -n -i veth2
Address                  HWtype  HWaddress           Flags Mask            Iface
101.1.1.4                ether   00:01:04:ff:00:41   C                     veth2
101.1.1.254              ether   00:00:5e:00:01:01   C                     veth2
101.1.1.2                ether   00:01:02:ff:00:41   C                     veth2

6.2.7.3 Additional anycast gateway considerations

The following guidelines also apply for using anycast-gw in SR Linux.

In a bgp-evpn-enabled MAC-VRF with an IRB subinterface, the following applies whether the IPs are
configured as primary, anycast-gw, or neither of these.

• All IPv4 and IPv6 addresses associated with the IRB subinterface are advertised in separate MAC/IP

routes.

• The anycast-gw-mac and its corresponding anycast-gw IP address are advertised in a MAC/IP route.

• Any other existing non-anycast-gw IP is advertised along with the interface MAC (hw-mac) in a MAC/IP

route.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

107

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

For example, if irb0.24 is configured in LEAF-2 with anycast-gw (ip,mac)=(101.1.1.254/24,
00:5e:00:00:01:01), and 101.1.1.2/24 is also configured as non-anycast-gw IP, two MAC/IP routes are
advertised in the context of BD24: MAC/IP route (101.1.1.254, 00:5e:00:00:01:01), and MAC/IP route
(101.1.1.2, hw-mac-1).

For IPv6, Local Link Addresses (LLDs) are also advertised in addition to global addresses.

When the IRB subinterface is admin disabled, the IRB MAC addresses are removed from the mac-table
(and withdrawn from EVPN). ARP Requests and Neighbor Solicitation messages for the IRB subinterface
IP addresses from the hosts connected to the Broadcast Domain are only processed when coming from
local subinterfaces. These messages cannot be processed when received over VXLAN, so each of the
Leaf routers attached to the same BD need to have their anycast IRB subinterface operationally up to
process the requests for the local hosts.

6.2.7.3.1 Checking protection flags per MAC address

About this task

The IRB MAC addresses are protected in the mac-table if they are not anycast-gw-MACs. Protection
means that received frames are dropped if their MAC SA match a protected MAC. The mac-table state
shows the protection flag per MAC.

Procedure

Use the info from state network-instance bridge-table mac-table to check the protection flags per MAC
address.

Example: mac-table state

--{ [FACTORY] + candidate shared default }--[  ]--
# info from state network-instance BD24 bridge-table mac-table mac *
    network-instance BD24 {
        bridge-table {
            mac-table {
                mac 00:00:5E:00:01:01 {
                    destination-type irb-interface
                    destination-index 0
                    type irb-interface-anycast
                    last-update "2 days ago"
                    destination irb
                    is-protected false
                }
                mac 00:01:02:FF:00:41 {
                    destination-type irb-interface
                    destination-index 0
                    type irb-interface
                    last-update "2 days ago"
                    destination irb
                    is-protected true
                }
                mac 00:01:04:FF:00:41 {
                    destination-type vxlan
                    destination-index 202418653897
                    type evpn-static
                    last-update "2 days ago"
                    destination "vxlan-interface:vxlan1.24 vtep:4.4.4.4 vni:24"
                    is-protected true
                }
            }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

108

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

        }
    }

6.3 Testing and checking Layer 3 host mobility

In EVPN-VXLAN Layer 3 networks, multiple leaf nodes are attached to the same BD. Hosts of the same
subnet can be connected to any of those leaf nodes. They can also move between leaf nodes of the
same BD. In either case, the upstream and downstream traffic must be efficient and avoid hair-pinning.
This is shown in the following figure, where LEAF-2 and LEAF-4 configurations are modified (no ES) and
HOST-12 was originally connected to LEAF-2.

Upstream traffic from HOST-12 to HOST-3 must be routed by LEAF-2 to LEAF-3 directly. If HOST-12
later moves to LEAF-4, upstream traffic to HOST-3 must be routed by LEAF-4 to LEAF-3 directly. This is
accomplished using anycast-gw IPs and MACs on the IRB interfaces.

When HOST-12 is attached to LEAF-2, downstream traffic from HOST-3 must be sent from LEAF-3 to
LEAF-2 directly. If HOST-12 later moves to LEAF-4, the routers need to update their tables quickly so
that LEAF-3 routes the traffic to LEAF-4 directly, and no bandwidth is wasted on the spines because of
unnecessary hair-pinning. This is achieved by learning HOST-12's IP address in the route-table of the
connected leaf as a /32 route and advertising that host route in an EVPN IFL route.

Upon a mobility event to LEAF-4, LEAF-2 withdraws the host route as fast as possible and LEAF-4 then
advertises the HOST-12 host route in an EVPN IFL route.

Figure 11: Example of L3 host mobility

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

109

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

6.3.1 Configuring efficient host routing

About this task

In the initial configuration, HOST-12 is connected to LEAF-2. For LEAF-3 to route traffic (to HOST-12)
directly to LEAF-2, LEAF-2 needs to learn HOST-12's IP and advertise its host route in an EVPN-IFL route.

Procedure

To configure efficient host routing, set the following parameter definitions as shown in the example.

•

learn-unsolicited true - Triggers the node to snoop/process all solicited and unsolicited ARP
messages received on sub-interfaces (no vxlan) and learns the corresponding ARP/ND entries as
'dynamic'. By default, the command is false and only solicited entries are learned, which does not
guarantee host mobility.

When enabled, dynamic ARP/ND entries are learned from the following messages received on the sub-
interfaces (if the IPs fall into the local subnets):

– ARP and Neighbor Solicitation requests

– Gratuitous ARP requests and unsolicited neighbor advertisements

• host-route populate dynamic -Triggers the creation of arp-nd host routes in the IP-VRF-10 route-table
out of dynamic ARP entries. These are disabled by default. The arp-nd host routes are not installed
in the FIB. They are only used in the control plane and advertised to the EVPN-IFL network to attract
traffic from LEAF-3. The arp-nd host routes can be exported in any routing protocol, such as EVPN-
IFL routes, BGP IPv4/IPv6 routes, OSPF, and ISIS. They are supported in network-instances ip-vrf and
default.

• evpn advertise dynamic - Triggers the advertisement of EVPN MAC/IP routes for the dynamic learned
ARP entries and allows the synchronization of the ARP entries in all IRB sub-interfaces of the same BD.
This is only supported on IRB sub-interfaces.

The MAC/IP routes that are advertised for ARP/ND entries contain the S bit set if the corresponding
MAC entry in the mac-table is static.

Note that an equivalent command can be used for ND entries.

Example: Efficient host routing model

# subinterface 24 
--{ [FACTORY] + candidate shared default }--[ interface irb0 subinterface 24 ]--
# info
    ipv4 {
        admin-state enable
        address 101.1.1.2/24 {
        }
        address 101.1.1.254/24 {
            anycast-gw true
            primary
        }
        arp {
            learn-unsolicited true
            debug [
                messages
            ]
            host-route {
                populate dynamic {
                }
            }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

110

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

            evpn {
                advertise dynamic {
                }
            }
        }
    }
    anycast-gw {
    }

The next examples show how an ARP Request from HOST-12 to a random IP in the subnet is
enough for the irb0.24 to learn the dynamic ARP. It can then create a host route that is advertised as
an EVPN IFL route, and imported by LEAF-3.

Example: LEAF-2 - HOST-12 unsolicited ARP Request

--{ [FACTORY] + candidate shared default }--[  ]--
# show arpnd arp-entries interface irb0 subinterface 24
+-----------+--------------+----------+-------+--------------------+------+
| Interface | Subinterface | Neighbor | Origin| Link layer address |Expiry|
+===========+==============+==========+=======+====================+======+
| irb0      |      24      |101.1.1.4 |  evpn | 00:01:04:FF:00:41  |      |
+-----------+--------------+----------+-------+--------------------+------+
--------------------------------------------------------------------------
  Total entries : 1 (0 static, 1 dynamic)
--------------------------------------------------------------------------

Example: Debug messages - ARP request received

2021-04-15T04:58:05.651861-07:00 dut2 local6|INFO sr_arp_nd_mgr: arpnd|1773|1773|19334|I:
  Received ARP request on interface irb0.24 (10247 - 22) from datapath. Source Mac :
  00:00:64:01:01:01 Source IP : 101.1.1.1 Target Mac : 00:00:00:00:00:00 Target IP :
  101.1.1.200

Example: Triggered learning of RT5 and RT2 advertisements

2021-04-15T04:58:06.019955-07:00 dut2 local6|DEBU sr_bgp_mgr: bgp|4933|5176|2128215|D:
  VR default (1) Peer 1: 3.3.3.3 UPDATE: Peer 1: 3.3.3.3 - Send BGP UPDATE:
    Withdrawn Length = 0
    Total Path Attr Length = 85
    Flag: 0x90 Type: 14 Len: 48 Multiprotocol Reachable NLRI:
        Address Family EVPN
        NextHop len 4 NextHop 2.2.2.2
        Type: EVPN-IP-PREFIX Len: 34 RD: 2.2.2.2:10, tag: 0, ip_prefix: 101.1.1.1/32 
          gw_ip 0.0.0.0 Label: 10 
    Flag: 0x40 Type: 1 Len: 1 Origin: 0
    Flag: 0x40 Type: 2 Len: 0 AS Path:
    Flag: 0x80 Type: 4 Len: 4 MED: 0
    Flag: 0x40 Type: 5 Len: 4 Local Preference: 100
    Flag: 0xc0 Type: 16 Len: 24 Extended Community:
        target:64500:10
        mac-nh:00:01:02:ff:00:00
        bgp-tunnel-encap:VXLAN
2021-04-15T04:58:06.020003-07:00 dut2 local6|DEBU sr_bgp_mgr: bgp|4933|5176|2128216|D:
  VR default (1) Peer 1: 3.3.3.3 UPDATE: Peer 1: 3.3.3.3 - Send BGP UPDATE:
    Withdrawn Length = 0
    Total Path Attr Length = 97
    Flag: 0x90 Type: 14 Len: 45 Multiprotocol Reachable NLRI:
        Address Family EVPN
        NextHop len 4 NextHop 2.2.2.2
        Type: EVPN-MAC Len: 37 RD: 2.2.2.2:24 ESI: ESI-0, tag: 0, mac len: 48 mac:
        00:00:64:01:01:01, IP len: 4, IP: 101.1.1.1, label1: 24 

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

111

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

    Flag: 0x40 Type: 1 Len: 1 Origin: 0
    Flag: 0x40 Type: 2 Len: 0 AS Path:
    Flag: 0x40 Type: 5 Len: 4 Local Preference: 100
    Flag: 0xc0 Type: 16 Len: 16 Extended Community:
        target:64500:24
        bgp-tunnel-encap:VXLAN
--{ [FACTORY] + candidate shared default }--[  ]--
# show arpnd arp-entries interface irb0 subinterface 24
+---------+----------+----------+---------+-------------------+------------------+
|Interface| Sub-     | Neighbor | Origin  | Link layer        |    Expiry        |
|         |interface |          |         |  address          |                  |
+=========+==========+==========+=========+===================+==================+
| irb0    |   24     |101.1.1.1 | dynamic | 00:00:64:01:01:01 | 3 hours from now |
| irb0    |   24     |101.1.1.4 |  evpn   | 00:01:04:FF:00:41 |                  |
+---------+----------+----------+---------+-------------------+------------------+
---------------------------------------------------------------------------------
  Total entries : 2 (0 static, 2 dynamic)
---------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--
--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]-- 
# show route-table ipv4-unicast prefix 101.1.1.1/32 detail 
--------------------------------------------------------------------------------
IPv4 Unicast route table of network instance IP-VRF-10
-----------------------------------------------------------------------------
Destination   : 101.1.1.1/32
ID            : 0
Route Type    : arp-nd
Metric        : 0
Preference    : 1
Active        : true
Last change   : 2021-04-15T11:58:05.653Z
Resilient hash: false
---------------------------------------------------------------------------------
Next hops: 1 entries
101.1.1.1 (direct) via [irb0.24] 
----------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]—

Example: LEAF-3 imports routes as bgp-evpn host route

--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]--
# show route-table ipv4-unicast summary
------------------------------------------------------------------------------------------
IPv4 Unicast route table of network instance IP-VRF-10
------------------------------------------------------------------------------------------
+----------------+------+-------+----------+-------+-----+--------------------+----------+
|     Prefix     |  ID  |Active | Route    | Metric| Pref|  Next-hop          | Next-hop |
|                |      |       |  Type    |       |     |   (Type)           |Interface |
+================+======+=======+==========+=======+=====+====================+==========+
| 20.1.1.0/24    | 0    | true  | bgp-evpn | 0     | 170 | 2.2.2.2 (indirect) | None     |
| 20.1.1.3/32    | 0    | true  | bgp-evpn | 0     | 170 | 2.2.2.2 (indirect) | None     |
| 22.22.22.22/32 | 0    | true  | bgp-evpn | 0     | 170 | 2.2.2.2 (indirect) | None     |
| 31.31.31.31/32 | 0    | true  | host     | 0     | 0   | None (extract)     | None     |
| 31.31.31.31/32 | 1    | false | bgp-evpn | 0     | 170 | 2.2.2.2 (indirect) | None     |
| 33.33.33.33/32 | 0    | true  | host     | 0     | 0   | None (extract)     | None     |
| 44.44.44.44/32 | 0    | true  | bgp-evpn | 0     | 170 | 4.4.4.4 (indirect) | None     |
| 101.1.1.0/24   | 0    | true  | bgp-evpn | 0     | 170 | 2.2.2.2 (indirect) | None     |
|                |      |       |          |       |     | 4.4.4.4 (indirect) | None     |
| 101.1.1.1/32   | 0    | true  | bgp-evpn | 0     | 170 | 2.2.2.2 (indirect) | None     |
| 102.1.1.0/24   | 0    | true  | bgp-evpn | 0     | 170 | 2.2.2.2 (indirect) | None     |
| 103.1.1.0/24   | 0    | true  | local    | 0     | 0   | 103.1.1.3 (direct) | irb0.3   |
| 103.1.1.1/32   | 0    | true  | arp-nd   | 0     | 1   | 103.1.1.1 (direct) | irb0.3   |
| 103.1.1.3/32   | 0    | true  | host     | 0     | 0   | None (extract)     | None     |

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

112

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

| 103.1.1.254/32 | 0    | true  | host      | 0    | 0   | None (extract)     | None     |
| 103.1.1.255/32 | 0    | true  | host      | 0    | 0   | None (broadcast)   | None     |
| 104.1.1.0/24   | 0    | true  | bgp-evpn  | 0    | 170 | 4.4.4.4 (indirect) | None     |
+----------------+------+-------+-----------+------+-----+--------------------+----------+
-----------------------------------------------------------------------------------------
16 IPv4 routes total
15 IPv4 prefixes with active routes
1 IPv4 prefixes with active ECMP routes
----------------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[ network-instance IP-VRF-10 ]--

6.3.2 Mobility event - efficient host routing

When HOST-12 is attached to LEAF-2, the ARP entry must be maintained even if HOST-12 does not send
any traffic. If the entry is removed or ages out, the associated arp-nd host route in IP-VRF-10 is removed
and the EVPN-IFL route withdrawn. This can cause hair-pinning for traffic routed from LEAF-3. To maintain
the HOST-12 ARP entry (and other dynamic ARP/ND entries), the system supports timer-based ARP/ND
refreshes (ARP-Request for the host IP).

Timer-based refreshes are triggered 30 seconds before the ARP age-out timer expires, and irrespective
of the arrival of packets requiring resolution for the entry. Note that in SR OS, the arp-proactive-refresh
command is needed so that entries are always refreshed irrespective of the arrival of packets that hit
the entry. In SR Linux, this is the default behavior, so there is no command to enable the timer-based
refreshes.

When HOST-12 moves from LEAF-2 to LEAF-4, LEAF-4 must advertise the host route for 101.1.1.1/32
in EVPN-IFL as fast as possible and LEAF-2 withdraws its EVPN-IFL route for it. The process used by
LEAF-2 and LEAF-4 to update their ARP/route-tables when HOST-12 moves between them is called
"EVPN Layer 3 host mobility". SR Linux provides this support per section 4 of draft-ietf-bess-evpn-inter-
subnet-forwarding. EVPN Layer 3 host mobility supports the three cases specified in the draft:

• HOST-12 moves to LEAF-4 and generates a GARP

• HOST-12 moves to LEAF-4 and generates traffic, but not ARP

• HOST-12 moves to LEAF-4 and remains silent

To support fast mobility, SR Linux supports triggered refreshes. Triggered refreshes (ARP-Requests on
events and not based on timer expiration) are issued from irb0.24 leaf nodes, for the existing dynamic ARP
entry 101.1.1.1>00:00:64:01:01:01. The following events apply:

• an EVPN MAC/IP route for 101.1.1.1-> 00:00:64:01:01:01 is received

• an EVPN route for 00:00:64:01:01:01 (no IP) is received

• 00:00:64:01:01:01 ages out in the mac-table (or the entry in the MAC table is cleared manually)

As shown in Figure 11: Example of L3 host mobility, when HOST-12 moves to LEAF-4, and if it issues a
GARP or ethernet traffic, the advertised routes immediately updates the ARP/route tables on both leaf
nodes. LEAF-3 then changes its next-hop for HOST-12 from LEAF-2 to LEAF-4.

Example: Silent move - HOST-2 initially attached to LEAF-2

--{ [FACTORY] + candidate shared default }—[  ]--
# show arpnd arp-entries interface irb0 subinterface 24 ipv4-address 101.1.1.1

+---------+----------+-----------+---------+-------------------+-----------------+
|Interface| Sub-     |  Neighbor | Origin  | Link layer        |     Expiry      |
|         |interface |           |         |  address          |                 |

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

113

 
 
 
 
       
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

+=========+==========+===========+=========+===================+=================+
| irb0    |  24      | 101.1.1.1 | dynamic | 00:00:64:01:01:01 | 3 hours from now|
+---------+----------+-----------+---------+-------------------+-----------------+
---------------------------------------------------------------------------------
  Total entries : 1 (0 static, 1 dynamic)
---------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--
# show network-instance BD24 bridge-table mac-table mac 00:00:64:01:01:01
---------------------------------------------------------------------------------
Mac-table of network instance BD24
---------------------------------------------------------------------------------
Mac                     : 00:00:64:01:01:01
Destination             : lag1.24
Dest Index              : 20
Type                    : learnt
Programming Status      : Success
Aging                   : 2680
Last Update             : 2021-04-15T14:32:45.000Z
Duplicate Detect time   : N/A
Hold down time remaining: N/A
---------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--

Example: Silent move - initial LEAF-4

 --{ [FACTORY] + candidate shared default }--[  ]-- 
# show arpnd arp-entries interface irb0 subinterface 24 ipv4-address 101.1.1.1
+---------+----------+-----------+---------+-------------------+-----------------+
|Interface| Sub-     |  Neighbor | Origin  | Link layer        |     Expiry      |
|         |interface |           |         |  address          |                 |
+=========+==========+===========+=========+===================+=================+
| irb0    |  24      | 101.1.1.1 | evpn    | 00:00:64:01:01:01 |                 |
+---------+----------+-----------+---------+-------------------+-----------------+
---------------------------------------------------------------------------------
  Total entries : 1 (0 static, 1 dynamic)
---------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--
# show network-instance BD24 bridge-table mac-table mac 00:00:64:01:01:01
---------------------------------------------------------------------------------
Mac-table of network instance BD24
---------------------------------------------------------------------------------
Mac                     : 00:00:64:01:01:01
Destination             : vxlan-interface:vxlan1.24 vtep:2.2.2.2 vni:24
Dest Index              : 202418654989
Type                    : evpn
Programming Status      : Success
Aging                   : N/A
Last Update             : 2021-04-15T14:15:00.000Z
Duplicate Detect time   : N/A
Hold down time remaining: N/A
-----------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]—

Example: Silent move - watch command output for LEAF-3

Every 2.0s: show route-table ipv4-unicast prefix 101.1.1.1/32 detail 
 (Executions 903, Thu 07:41:40AM)

--------------------------------------------------------------------- 
IPv4 Unicast route table of network instance IP-VRF-10
--------------------------------------------------------------------- 
Destination   : 101.1.1.1/32                            

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

114

 
 
 
 
                                                              
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

ID            : 0 
Route Type    : bgp-evpn 
Metric        : 0    
Preference    : 170  
Active        : true  
Last change   : 2021-04-15T14:15:00.450Z 
Resilient hash: false 
------------------------------------------------------------------
Next hops: 1 entries
2.2.2.2 (indirect) resolved by None (None)
------------------------------------------------------------------

Example: Silent move - move HOST-12 to LEAF-2

In this example, HOST-12 is moved to LEAF-4 to simulate a silent move. Immediately after flushing
MAC 00:00:64:01:01:01 in LEAF-2, the MAC/IP routes are withdrawn and LEAF-2 issues three
triggered refreshes.

--{ [FACTORY] + candidate shared default }--[  ]--
#  2021-04-15T07:43:16.422816-07:00 dut2 local6|INFO sr_arp_nd_mgr: arpnd|1773|1773|20438|
I:
  Sending ARP request on interface irb0.24 (10247 - 22). Source Mac : 00:00:5E:00:01:01
  Source IP : 101.1.1.254 Target Mac : 00:00:00:00:00:00 Target IP : 101.1.1.1 Ethernet
  SA 00:00:5E:00:01:01 Ethernet DA FF:FF:FF:FF:FF:FF

2021-04-15T07:43:16.422816-07:00 dut2 local6|INFO sr_arp_nd_mgr: arpnd|1773|1773|20438|I:
  Sending ARP request on interface irb0.24 (10247 - 22). Source Mac : 00:00:5E:00:01:01
  Source IP : 101.1.1.254 Target Mac : 00:00:00:00:00:00 Target IP : 101.1.1.1 Ethernet
  SA 00:00:5E:00:01:01 Ethernet DA FF:FF:FF:FF:FF:FF

2021-04-15T07:43:16.422816-07:00 dut2 local6|INFO sr_arp_nd_mgr: arpnd|1773|1773|20438|I:
  Sending ARP request on interface irb0.24 (10247 - 22). Source Mac : 00:00:5E:00:01:01
  Source IP : 101.1.1.254 Target Mac : 00:00:00:00:00:00 Target IP : 101.1.1.1 Ethernet
  SA 00:00:5E:00:01:01 Ethernet DA FF:FF:FF:FF:FF:FF

    Flag: 0x90 Type: 15 Len: 77 Multiprotocol Unreachable NLRI:
        Address Family EVPN
        Type: EVPN-MAC Len: 37 RD: 2.2.2.2:24 ESI: ESI-0, tag: 0, mac len: 48 mac:
           00:00:64:01:01:01, IP len: 4, IP: 101.1.1.1, label1: 0 
        Type: EVPN-MAC Len: 33 RD: 2.2.2.2:24 ESI: ESI-0, tag: 0, mac len: 48 mac:
           00:00:64:01:01:01, IP len: 0, IP: NULL, label1: 0 

Example: Silent move - LEAF-2 updates

When the refreshes arrive at HOST-12 in LEAF-4, the ARP reply is consumed by LEAF-4 (since the
MAC destination address matches the anycast-gw MAC address). LEAF-4 then advertises the MAC/
IP routes and IP Prefix route for HOST-12.

 Type: EVPN-IP-PREFIX Len: 34 RD: 4.4.4.4:10, tag: 0, ip_prefix: 101.1.1.1/32
          gw_ip 0.0.0.0 Label: 10 
    Flag: 0x40 Type: 1 Len: 1 Origin: 0
    Flag: 0x40 Type: 2 Len: 0 AS Path:
    Flag: 0x80 Type: 4 Len: 4 MED: 0
    Flag: 0x40 Type: 5 Len: 4 Local Preference: 100
    Flag: 0xc0 Type: 16 Len: 24 Extended Community:
        target:64500:10
        mac-nh:00:01:04:ff:00:00
        bgp-tunnel-encap:VXLAN
2021-04-15T07:43:18.763551-07:00 dut2 local6|DEBU sr_bgp_mgr: bgp|4933|5176|2169872|D:
   VR default (1) Peer 1: 4.4.4.4 UPDATE: Peer 1: 4.4.4.4 - Received BGP UPDATE:
    Withdrawn Length = 0
    Total Path Attr Length = 97

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

115

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

    Flag: 0x90 Type: 14 Len: 45 Multiprotocol Reachable NLRI:
        Address Family EVPN
        NextHop len 4 NextHop 4.4.4.4
        Type: EVPN-MAC Len: 37 RD: 4.4.4.4:24 ESI: ESI-0, tag: 0, mac len: 48 mac:
          00:00:64:01:01:01, IP len: 4, IP: 101.1.1.1, label1: 24 
        Type: EVPN-MAC Len: 33 RD: 4.4.4.4:24 ESI: ESI-0, tag: 0, mac len: 48 mac:
          00:00:64:01:01:01, IP len: 0, IP: NULL, label1: 24 
    Flag: 0x40 Type: 1 Len: 1 Origin: 0
    Flag: 0x40 Type: 2 Len: 0 AS Path:
    Flag: 0x40 Type: 5 Len: 4 Local Preference: 100
    Flag: 0xc0 Type: 16 Len: 16 Extended Community:
        target:64500:24
        bgp-tunnel-encap:VXLAN
        Type: EVPN-IP-PREFIX Len: 34 RD: 4.4.4.4:10, tag: 0, ip_prefix:
          101.1.1.1/32 gw_ip 0.0.0.0 Label: 10 
    Flag: 0x40 Type: 1 Len: 1 Origin: 0
    Flag: 0x40 Type: 2 Len: 0 AS Path:
    Flag: 0x80 Type: 4 Len: 4 MED: 0
    Flag: 0x40 Type: 5 Len: 4 Local Preference: 100
    Flag: 0xc0 Type: 16 Len: 24 Extended Community:
        target:64500:10
        mac-nh:00:01:04:ff:00:00
        bgp-tunnel-encap:VXLAN
2021-04-15T07:43:18.766923-07:00 dut2 local6|INFO sr_arp_nd_mgr:
   arpnd|1773|1773|20450|I: The ARP entry for 101.1.1.1 has been updated.

After the move, LEAF-2 and LEAF-4 tables are updated, and LEAF-3 points at LEAF-4 as the next-
hop for the HOST-12 route.

Example: Silent move - LEAF-2 tables

 --{ [FACTORY] + candidate shared default }--[  ]--
# show arpnd arp-entries interface irb0 subinterface 24 ipv4-address 101.1.1.1

+---------+----------+-----------+---------+-------------------+-----------------+
|Interface| Sub-     |  Neighbor | Origin  | Link layer        |     Expiry      |
|         |interface |           |         |  address          |                 |
+=========+==========+===========+=========+===================+=================+
| irb0    |  24      | 101.1.1.1 | evpn    | 00:00:64:01:01:01 |                 |
+---------+----------+-----------+---------+-------------------+-----------------+
----------------------------------------------------------------------------------
  Total entries : 1 (0 static, 1 dynamic)
---------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--
# show network-instance BD24 bridge-table mac-table mac 00:00:64:01:01:01

--------------------------------------------------------------------------------
Mac-table of network instance BD24
--------------------------------------------------------------------------------
Mac                     : 00:00:64:01:01:01
Destination             : vxlan-interface:vxlan1.24 vtep:4.4.4.4 vni:24
Dest Index              : 202418653897
Type                    : evpn
Programming Status      : Success
Aging                   : N/A
Last Update             : 2021-04-15T14:43:18.000Z
Duplicate Detect time   : N/A
Hold down time remaining: N/A
--------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

116

 
 
 
 
               
                 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

Example: Silent move - LEAF-4 tables

--{ [FACTORY] + candidate shared default }--[  ]--
# show arpnd arp-entries interface irb0 subinterface 24 ipv4-address 101.1.1.1 

+---------+----------+-----------+---------+------------------+------------------+
|Interface| Sub-     |  Neighbor | Origin  | Link layer       |     Expiry       |
|         |interface |           |         |  address         |                  |
+=========+==========+===========+=========+==================+==================+
| irb0    |  24      | 101.1.1.1 | dynamic | 00:00:64:01:01:01| 3 hrs from now   |
+---------+----------+-----------+---------+------------------+------------------+
----------------------------------------------------------------------------------
  Total entries : 1 (0 static, 1 dynamic)
---------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--
--{ [FACTORY] + candidate shared default }--[  ]--
# show network-instance BD24 bridge-table mac-table mac 00:00:64:01:01:01

---------------------------------------------------------------------------------
Mac-table of network instance BD24
---------------------------------------------------------------------------------
Mac                     : 00:00:64:01:01:01
Destination             : lag1.24
Dest Index              : 18
Type                    : learnt
Programming Status      : Success
Aging                   : 2875
Last Update             : 2021-04-15T14:43:18.000Z
Duplicate Detect time   : N/A
Hold down time remaining: N/A
-----------------------------------------------------------------------------------
--{ [FACTORY] + candidate shared default }--[  ]--

Example: Silent move - watch command output for LEAF-3

Every 2.0s: show route-table ipv4-unicast prefix 101.1.1.1/32 detail
  (Executions 976, Thu 07:44:30AM)

-------------------------------------------------------------------
IPv4 Unicast route table of network instance IP-VRF-10 
------------------------------------------------------------------
Destination   : 101.1.1.1/32                                               
ID            : 0 
Route Type    : bgp-evpn 
Metric        : 0   
Preference    : 170  
Active        : true  
Last change   : 2021-04-15T14:43:19.767Z
Resilient hash: false 
-------------------------------------------------------------------
Next hops: 1 entries 
4.4.4.4 (indirect) resolved by None (None)
-------------------------------------------------------------------

6.4 EVPN-VXLAN Layer 3 feature parity for IPv6 prefixes

All the features discussed in this chapter are supported for IPv6 prefixes and hosts. EVPN IFL works
for Prefix IPv6 routes without enabling a separate BGP family. EVPN supports IPv4 and IPv6 routes. In

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

117

 
 
 
 
                           
                                                        
          
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

addition, all IRB sub-interfaces must be configured with the IPv6 container using the same commands
used earlier in this chapter, but performed under ‟neighbor-discovery”.

6.4.1 Configuring IPv6 Container

Procedure

See the following example to configure the IPv6 container.

Example: IPv6 container configuration

--{ [FACTORY] + candidate shared default }--[ interface irb0 subinterface 24 ]--
# info                                                      
    ipv4 {
        admin-state enable
        address 101.1.1.2/24 {
        }
        address 101.1.1.254/24 {
            anycast-gw true
            primary
        }
        address 102.1.1.254/24 {
        }
        arp {
            learn-unsolicited true
            debug [
                messages
            ]
            host-route {
                populate dynamic {
                }
            }
            evpn {
                advertise dynamic {
                }
            }
        }
    }
    ipv6 {
        admin-state enable
        address 2001:db8:24::254/64 {
            anycast-gw true
        }
        neighbor-discovery {
            learn-unsolicited both
            host-route {
                populate dynamic {
                }
            }
            evpn {
                advertise dynamic {
                }
            }
        }
    anycast-gw {
    }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

118

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

6.4.2 Additional feature parity considerations

The anycast-gw container is common for IPv4 and IPv6. Therefore, the anycast-gw mac is the same for
both families. Only one anycast-gw MAC is programmed in the interface, and IPv4 and IPv6 packets use
this anycast-gw-mac as MAC SA when sourcing packets to the BD.

LLA and global addresses are advertised in EVPN. The command neighbor-discovery learn-unsolicited
both includes global and link local addresses.

The following example shows that when anycast-gw is enabled, an anycast-gw LLA is automatically
generated. The anycast-gw ipv6 link local address is based off the anycast-gw-mac when the anycast-gw
and the ipv6 containers are present. The logic to compute this new anycast-gw ipv6 link local address is
the same as is used for computing the regular ipv6 LLA except the anycast-gw-mac is used instead of the
interface mac. This new ipv6 LLA appears in the list of ipv6 addresses associated with the subinterface,
but with the attribute anycast-gw true.

Multicast NS messages use the anycast-gw LLA and anycast-gw MAC. Unicast NS use the global IPv6
and hw-address.

Example: LLA generation

--{ [FACTORY] + candidate shared default }--[ interface irb0 subinterface 24 ipv6 ]--
# info from state 
    address 2001:db8:24::254/64 {
        anycast-gw true
        origin static
        primary
        status preferred
    }
    address fe80::200:5eff:fe00:101/64 {
        anycast-gw true
        origin link-layer
        status preferred
    }
    address fe80::201:2ff:feff:41/64 {
        origin link-layer
        status preferred
    }
    neighbor-discovery {
        duplicate-address-detection true
        reachable-time 30
        stale-time 14400
        learn-unsolicited both
        neighbor fe80::201:4ff:feff:41 {
            link-layer-address 00:01:04:FF:00:41
            origin evpn
        }
        host-route {
            populate dynamic {
            }
        }
        evpn {
            advertise dynamic {
                admin-tag 0
            }
        }
    }
    router-advertisement {
        router-role {
            current-hop-limit 64

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

119

 
 
 
 
Advanced Solutions Guide Release 24.10

EVPN-VXLAN for layer 3

            managed-configuration-flag false
            other-configuration-flag false
            max-advertisement-interval 600
            min-advertisement-interval 200
            reachable-time 0
            retransmit-time 0
            router-lifetime 1800
        }
    }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

120

 
 
 
 
Advanced Solutions Guide Release 24.10

Security hardening using CPM filters

7 Security hardening using CPM filters

Protecting the control and management plane of each routing switch in the data center fabric (access leaf,
border leaf, spine) from unauthorized or out-of-profile sources of traffic is important. Without control plane
protection policies, routers are vulnerable to attacks on the data center infrastructure and performance
degradation can occur because of misconfiguration.

The SR Linux supports a special Access Control List (ACL) type called a cpm-filter for control plane
protection. There are separate Control Processing Module (CPM) filters for IPv4 traffic and for IPv6 traffic.
The entries of each cpm-filter are installed on each line card and in the Control CPM software. There are
different types of cpm-filter actions that can be applied and all actions are not relevant at all locations. ACL
configuration for control plane protection defines each action and how to configure it.

7.1 ACL configuration for control plane protection

ACLs support the following actions:

• accept - Allows the packet through to the next processing function.

• drop - Discards the packet without Internet Control Message Protocol (ICMP) generation.

•

log - Extracts information about each matching packet and sends it to the log application.

• distributed-policer - Sends the packet to a policer instance implemented in the forwarding ASIC of the

ingress line card. This policer sends the packet to the CPM only if the policer token bucket does not go
into the exceed/violate state. The rate of a distributed-policer is defined in units of kb/s and the bucket
depth is defined in units of bytes.

•

system-cpu-policer - Sends the packet to a policer instance implemented by CPM software when the
packet reaches the CPM from any line card as source. This policer admits the packet to its owner
application only if the policer token bucket does not go into the exceed/violate state. The rate of a
system-cpu-policer is defined in units of packets-per-second and the bucket depth is defined in units of
packets.

7.1.1 CPM filter rules

CPM filter rules that apply a system-cpu-policer or distributed-policer action do not directly specify the
policer parameters. Instead, the rules refer to a generically defined policer under the ACL configuration
tree. This allows different CPM filter entries, even across multiple ACLs, to use the same policer if needed.
Optionally, each policer can be configured as entry-specific. This means that a different policer instance is
used by each referring filter entry, even if they are part of the same ACL.

CPM filter ACL actions are applied to the following traffic flows:

•

•

IPv4 and IPv6 traffic flows originating by external systems, arriving on any line card port, accepted
by the interface ACLs applied to the ingress subinterface (if any), system ACLs applied globally, and
determined to be locally terminating by lookup of the IP destination address

IPv4 and IPv6 traffic flows originating by external systems, arriving on the Out-of-Band (OOB)
management port and accepted by the interface ACLs applied to ingress traffic on the OOB port

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

121

 
 
 
 
Advanced Solutions Guide Release 24.10

Security hardening using CPM filters

subinterface, and system ACLs applied globally. If the CPM-filter policy has distributed-policer actions,
these are ignored for inbound traffic on the OOB management port.

The startup configuration of a new SR Linux router includes a default IPv4 cpm-filter policy and a default
IPv6 cpm-filter policy. These default policies block packets associated with any protocol that is not
supported by the SR Linux operating system. However, they do not limit the sending sources or enforce
any rate limits aside from ICMPv4/ICMPv6 traffic, which is subject to an aggregate rate limit of 1000
pps. The default policies should be modified to add these additional restrictions, and to allow protocols
associated with NetOps Development Kit (NDK) applications, if applicable.

7.1.2 Restricting source subnets for incoming traffic using CPM filter

Procedure

Use the acl cpm-filter command to define how to restrict the source subnets for incoming SSH traffic
associated with remotely originated TCP connections to a specified IP address.

Example: (IPv4 address of 192.0.2.0/24)

--{  candidate shared default }--[  ]--
# acl cpm-filter ipv4-filter
--{ candidate shared default }--[ acl cpm-filter ipv4-filter ]--
# entry 100 match
--{ candidate shared default }--[ acl cpm-filter ipv4-filter entry 100 match ]--
# source-ip address 192.0.2.0 mask 255.255.255.0
--{ * candidate shared default }--[ acl cpm-filter ipv4-filter entry 100 match ]--
# protocol tcp destination-port value ssh
--{ * candidate shared default }--[ acl cpm-filter ipv4-filter entry 100 match ]--
# exit
--{ * candidate shared default }--[ acl cpm-filter ipv4-filter entry 100 ]--
# action drop
--{ * candidate shared default }--[ acl cpm-filter ipv4-filter entry 100 ]--
# exit all
--{  candidate shared default }--[  ]--
# info acl cpm-filter ipv4-filter entry 100
    acl {
        cpm-filter {
            ipv4-filter {
                entry 100 {
                    description "Restrict the source subets 192.0.2.0/24 for incoming SSH
 Traffic"
                    action {
                        drop {
                        }
                    }
                    match {
                        protocol tcp
                        source-ip {
                            address 192.0.2.0
                            mask 255.255.255.0
                        }
                        destination-port {
                            value ssh
                        }
                    }
                }
            }
        }
    }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

122

 
 
 
 
Advanced Solutions Guide Release 24.10

Security hardening using CPM filters

Example: (IPv6 address of 2001:db8:3200/48)

--{  candidate shared default }--[  ]--
# acl cpm-filter ipv6-filter entry 140
--{ candidate shared default }--[ acl cpm-filter ipv6-filter entry 140]--
# match next-header tcp destination-port value ssh operator eq
--{ candidate shared default }--[ acl cpm-filter ipv6-filter entry 140]--
# match source-ip address 2001:db8::1 mask FFFF:FFFF:FFFF:FFF8:FFFF:FFFF:FFFF:FFFF
--{ candidate shared default }--[ acl cpm-filter ipv6-filter entry 140]--
# action drop
--{ candidate shared default }--[ acl cpm-filter ipv6-filter entry 140]--
# exit all
--{  candidate shared default }--[  ]--
# info acl cpm-filter ipv6-filter entry 140
    acl {
        cpm-filter {
            ipv6-filter {
                entry 140 {
                    description "Restrict the source subets 2001:db8:32::/48 for incoming
 SSH Traffic"
                    action {
                        drop {
                        }
                    }
                    match {
                        next-header tcp
                        source-ip {
                            address 2001:db8::1
                            mask ffff:ffff:ffff:fff8:ffff:ffff:ffff:ffff
                        }
                        destination-port {
                            operator eq
                            value ssh
                        }
                    }
                }
            }
        }
    }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

123

 
 
 
 
Advanced Solutions Guide Release 24.10

Configuring IP-VPN services

8 Configuring IP-VPN services

IP-VPN services use a combination of MP-BGP and MPLS to distribute IPv4/v6 routing information and
provide Layer 3 VPN services.

Each IP-VPN consists of a set of customer end points connected to one or more PE routers. Each
associated PE router maintains a separate IP forwarding table for each IP-VPN instance. Additionally,
the PE routers exchange the routing information configured or learned from all customer sites via MP-
BGP peering. Each route exchanged via the MP-BGP protocol includes a Route Distinguisher (RD), which
identifies the IP-VPN association and handles any potential IP address overlap.

Multi-Protocol BGP (MP-BGP) is used to exchange the routes of a particular VPN among the PE routers
that are attached to that VPN. This route exchange is done in a way that ensures that routes from different
VPNs remain distinct and separate, even if two VPNs have an overlapping address space. When BGP
distributes a VPN route it also distributes an MPLS label for that route to identify the advertising IP-VPN
instance.

Before a customer data packet travels across the service provider's backbone, it is encapsulated
with the MPLS label that corresponds, in the customer's IP-VPN, to the route that best matches the
packet's destination address. The MPLS packet is further encapsulated with one or more MPLS labels
corresponding to the resolving MPLS path to deliver the packet to the intended egress PE router. The
following figure displays an IP-VPN network diagram example.

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

124

 
 
 
 
Advanced Solutions Guide Release 24.10

Configuring IP-VPN services

Figure 12: IP Virtual Private Network

Example: IP-VPN configuration

The following is an example of an IP-VPN configuration.

--{ * candidate shared default }--[  ]--
A:srl1# info interface ethernet-1/2
    interface ethernet-1/2 {
        admin-state enable
        subinterface 1 {
            type routed
            admin-state enable
            ipv4 {
                address 10.30.30.1/24 {
                }
            }
        }
    }
A:srl1# info network-instance Base
    network-instance Base {
        type default
        protocols {
            bgp {
                admin-state enable
                autonomous-system 65550
                router-id 10.10.10.1
                afi-safi l3vpn-ipv4-unicast {
                    admin-state enable
                }
                group base-group {

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

125

 
 
 
 
Advanced Solutions Guide Release 24.10

Configuring IP-VPN services

                }
                neighbor 10.10.10.2 {
                    peer-group base-group
                }
            }
        }
    }

--{ * candidate shared default }--[  ]--
A:srl1# info network-instance ip-vrf-red
    network-instance ip-vrf-red {
        type ip-vrf
        interface ethernet-1/2 {
            interface-ref {
                interface ethernet-1/2
                subinterface 1
            }
        }
        protocols {
            bgp-ipvpn {
                bgp-instance 1 {
                    admin-state enable
                    ecmp 8
                    mpls {
                        next-hop-resolution {
                            allowed-tunnel-types [
                                ldp
                                sr-isis
                            ]
                        }
                    }
                }
            }
            bgp {
                admin-state enable
                autonomous-system 65551
                router-id 10.10.10.1
                afi-safi ipv4-unicast {
                    admin-state enable
                }
                group ip-vrf-red-peers {
                    admin-state enable
                    afi-safi ipv4-unicast {
                    }
                }
                neighbor 10.10.10.3 {
                    peer-group ip-vrf-red-peers
                    }
                }
            }
            bgp-vpn {
                bgp-instance 1 {
                    route-distinguisher {}
                    route-target {}
                }
            }
        }

3HE 20952 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

126

 
 
 
 
Customer document and product support

Customer documentation
Customer documentation welcome page

Technical support
Product support portal

Documentation feedback
Customer documentation feedback

Nokia Service Router Linux

CONFIGURATION BASICS

RELEASE 22.6

3HE 18781 AAAA TQZZA
Issue 01

June 2022

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

Nokia is committed to diversity and inclusion. We are continuously reviewing our customer
documentation and consulting with standards bodies to ensure that terminology is inclusive and
aligned with the industry. Our future customer documentation will be updated accordingly.

This document includes Nokia proprietary and confidential information, which may not be distributed
or disclosed to any third parties without the prior written consent of Nokia.

This document is intended for use by Nokia’s customers (“You”/”Your”) in connection with a product
purchased or licensed from any company within Nokia Group of Companies. Use this document
as agreed. You agree to notify Nokia of any errors you may find in this document; however, should
you elect to use this document for any purpose(s) for which it is not intended, You understand and
warrant that any determinations You may make or actions You may take will be based upon Your
independent judgment and analysis of the content of this document.

Nokia reserves the right to make changes to this document without notice. At all times, the
controlling version is the one available on Nokia’s site.

No part of this document may be modified.

NO WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT
LIMITED TO ANY WARRANTY OF AVAILABILITY, ACCURACY, RELIABILITY, TITLE, NON-
INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, IS MADE
IN RELATION TO THE CONTENT OF THIS DOCUMENT. IN NO EVENT WILL NOKIA BE LIABLE
FOR ANY DAMAGES, INCLUDING BUT NOT LIMITED TO SPECIAL, DIRECT, INDIRECT,
INCIDENTAL OR CONSEQUENTIAL OR ANY LOSSES, SUCH AS BUT NOT LIMITED TO LOSS
OF PROFIT, REVENUE, BUSINESS INTERRUPTION, BUSINESS OPPORTUNITY OR DATA
THAT MAY ARISE FROM THE USE OF THIS DOCUMENT OR THE INFORMATION IN IT, EVEN
IN THE CASE OF ERRORS IN OR OMISSIONS FROM THIS DOCUMENT OR ITS CONTENT.

Copyright and trademark: Nokia is a registered trademark of Nokia Corporation. Other product
names mentioned in this document may be trademarks of their respective owners.

The registered trademark Linux® is used pursuant to a sublicense from the Linux Foundation, the
exclusive licensee of Linus Torvalds, owner of the mark on a worldwide basis.

© 2022 Nokia.

CONFIGURATION BASICS RELEASE 22.6

Table of contents

Table of contents

1  About  this  guide......................................................................................................................................12

1.1 Precautionary and information messages........................................................................................ 12

1.2  Conventions.......................................................................................................................................12

2  What's  new...............................................................................................................................................14

3  System  management...............................................................................................................................15

3.1  Configuring  a  hostname....................................................................................................................15

3.2 Configuring a domain name............................................................................................................. 15

3.3  Configuring  DNS  settings................................................................................................................. 16

3.4 Configuring the management network-instance............................................................................... 16

3.5  Access  types..................................................................................................................................... 17

3.5.1 Enabling an SSH server...........................................................................................................17

3.5.1.1 Configure SSH key-based authentication........................................................................ 18

3.5.2  Configuring  FTP........................................................................................................................19

3.6  Configuring  banners..........................................................................................................................20

3.7 Synchronizing the system clock....................................................................................................... 20

3.8  Configuring  SNMP............................................................................................................................ 21

3.9  IP  ECMP  Load  Balancing.................................................................................................................21

3.9.1 Configuring IP ECMP load balancing.......................................................................................22

4  Configuration  management....................................................................................................................24

4.1  Default  configuration......................................................................................................................... 24

4.2  Configuration  datastores................................................................................................................... 24

4.3  Configuration  modes......................................................................................................................... 24

4.3.1 Configuration candidates.......................................................................................................... 25

4.3.2 Setting the configuration mode................................................................................................ 25

4.4 Committing a configuration in candidate mode................................................................................ 26

4.4.1 Confirming a commit operation................................................................................................ 27

4.4.2 Validating a commit operation.................................................................................................. 28

4.4.3 Updating the baseline datastore.............................................................................................. 28

4.5  Deleting  a  configuration.................................................................................................................... 29

4.6 Annotating the configuration............................................................................................................. 29

4.7 Discarding a configuration in candidate mode................................................................................. 30

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

3

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Table of contents

4.8 Displaying configuration details........................................................................................................ 30

4.9 Displaying the configuration state.....................................................................................................33

4.10 Saving a configuration to a file.......................................................................................................34

4.11  Loading  a  configuration...................................................................................................................35

4.12 Executing configuration statements from a file...............................................................................35

4.13 Configuration checkpoints...............................................................................................................36

4.13.1 Generating a checkpoint........................................................................................................ 36

4.13.2  Loading  a  checkpoint............................................................................................................. 37

4.13.3 Reverting to a previous checkpoint........................................................................................37

4.13.4  Clearing  a  checkpoint.............................................................................................................38

4.13.5 Configuring maximum number of checkpoints....................................................................... 38

4.13.6 Displaying checkpoint information.......................................................................................... 38

4.14  Rescue  configuration...................................................................................................................... 39

4.14.1 Saving a rescue configuration................................................................................................39

4.14.2 Clearing a rescue configuration............................................................................................. 40

4.15  Configuration  upgrades...................................................................................................................40

4.15.1 Upgrading configuration files.................................................................................................. 40

5  Securing  access...................................................................................................................................... 42

5.1  User  types......................................................................................................................................... 42

5.1.1  Linux  users............................................................................................................................... 42

5.1.2  Local  users............................................................................................................................... 42

5.1.3  Remote  users........................................................................................................................... 42

5.2  AAA  functions....................................................................................................................................42

5.2.1  Authentication........................................................................................................................... 43

5.2.2  Authorization............................................................................................................................. 43

5.2.3  Accounting................................................................................................................................ 43

5.3 AAA server group configuration........................................................................................................44

5.3.1 Configuring an AAA server group............................................................................................ 44

5.4 Authentication for local users........................................................................................................... 45

5.4.1 Configuring authentication for local users................................................................................ 45

5.5 Authorization using role-based access control................................................................................. 46

5.5.1  Role  configuration.....................................................................................................................46

5.5.1.1  Configuring  a  role.............................................................................................................47

5.5.2 Assigning roles to users........................................................................................................... 48

5.5.3 Authorization using a TACACS+ server................................................................................... 49

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

4

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Table of contents

5.5.3.1 Configuring TACACS+ Authorization............................................................................... 49

5.5.4 Service authorization for local users........................................................................................ 51

5.5.4.1 Configuring service authorization.....................................................................................52

5.6  Accounting  configuration...................................................................................................................53

5.6.1  Configuring  accounting............................................................................................................. 54

5.7 Displaying user session information................................................................................................. 54

5.8 Disconnecting user sessions............................................................................................................ 54

5.9 Configuring idle-timeout for user sessions....................................................................................... 55

6  Management  servers...............................................................................................................................56

6.1  gNMI  server.......................................................................................................................................56

6.1.1 Configuring a gNMI server....................................................................................................... 56

6.2  JSON-RPC  server.............................................................................................................................57

6.2.1 Configuring a JSON-RPC server............................................................................................. 57

6.3  TLS  profiles....................................................................................................................................... 58

6.3.1 Configuring a TLS profile......................................................................................................... 58

6.3.2 Generating a self-signed certificate..........................................................................................59

6.3.3 Generating a certificate signing request.................................................................................. 60

7  Logging.....................................................................................................................................................61

7.1 Input sources for log messages....................................................................................................... 61

7.2  Filters  for  log  messages................................................................................................................... 63

7.3 Output destinations for log messages.............................................................................................. 64

7.4  Defining  filters................................................................................................................................... 64

7.5 Logging destination configuration..................................................................................................... 65

7.5.1 Specifying a log file destination............................................................................................... 65

7.5.2 Specifying a buffer destination................................................................................................. 67

7.5.3 Specifying the console as destination......................................................................................67

7.5.4 Specifying a remote server destination....................................................................................68

7.6 Specifying a Linux syslog facility for SR Linux subsystem messages..............................................68

8  Interfaces.................................................................................................................................................. 69

8.1 Linux interface naming conventions................................................................................................. 70

8.2 Basic interface configuration.............................................................................................................70

8.3  Subinterfaces.....................................................................................................................................70

8.3.1 Routed and bridged subinterfaces........................................................................................... 71

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

5

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Table of contents

8.3.2 Subinterface naming conventions............................................................................................ 71

8.3.3 Basic subinterface configuration...............................................................................................71

8.3.4 Subinterface VLAN configuration............................................................................................. 73

8.3.5 VLAN tag TPID configuration................................................................................................... 74

8.3.5.1 Configuring the VLAN tag TPID for an interface............................................................. 75

8.3.5.2 Displaying the VLAN tag TPID........................................................................................ 75

8.3.6 Bridged subinterface configuration........................................................................................... 75

8.4  IRB  interfaces....................................................................................................................................76

8.4.1 IRB interface configuration....................................................................................................... 77

8.5 Displaying interface statistics............................................................................................................77

8.5.1 Clearing interface statistics...................................................................................................... 82

8.6 Displaying subinterface statistics...................................................................................................... 82

8.6.1 Clearing subinterface statistics.................................................................................................84

8.7  Displaying  interface  status................................................................................................................84

8.8  LAG................................................................................................................................................... 90

8.8.1  Min-link  threshold......................................................................................................................90

8.8.2  LACP.........................................................................................................................................90

8.8.2.1  LACP  fallback...................................................................................................................90

8.8.3  LAG  configuration..................................................................................................................... 90

8.8.3.1 Configuring the min-link threshold................................................................................... 91

8.8.3.2 Configuring LACP and LACP fallback............................................................................. 92

8.8.3.3 Configuring forwarding viability for LAG member links.................................................... 93

8.8.4 Displaying LAG interface statistics...........................................................................................93

8.8.4.1 Clearing LAG interface statistics......................................................................................94

8.9 Breakout ports (7220 IXR-D3 only).................................................................................................. 94

8.9.1 Configuring breakout mode for an interface............................................................................ 96

8.10  DHCP  relay..................................................................................................................................... 97

8.10.1  DHCP  relay  for  IPv4...............................................................................................................98

8.10.1.1 Configuring DHCP relay for IPv4.................................................................................103

8.10.1.2 Using the GIADDR as the source address for DHCP Discover/Request packets........ 104

8.10.1.3 Trusted and untrusted DHCP requests........................................................................105

8.10.2  DHCP  relay  for  IPv6.............................................................................................................105

8.10.2.1 Configuring DHCP relay for IPv6.................................................................................107

8.10.3  QoS  for  DHCP  relay.............................................................................................................109

8.10.4 DHCP relay operational down reasons................................................................................ 109

8.10.5 Displaying DHCP relay statistics.......................................................................................... 109

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

6

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Table of contents

8.10.5.1 Clearing DHCP relay statistics.....................................................................................110

8.11  DHCP  server................................................................................................................................. 110

8.11.1 Configuring the DHCP server............................................................................................... 111

8.12 IPv6 router advertisements........................................................................................................... 113

8.12.1 Configuring IPv6 router advertisements............................................................................... 113

8.13 IPv6 Router Advertisement guard (RA guard)..............................................................................114

8.13.1 Configuring IPv6 RA guard policies..................................................................................... 115

8.13.2 Applying IPv6 RA guard policies to subinterfaces............................................................... 115

8.14 Interface port speed configuration................................................................................................ 116

8.14.1 Configuring interface port speed.......................................................................................... 117

8.14.2 Configuring link auto-negotiation (7220 IXR-D1 only)..........................................................118

8.15  Interface  hold-timers..................................................................................................................... 118

8.15.1 Configuring interface hold timers......................................................................................... 119

8.16  Reload-delay  timer........................................................................................................................ 120

8.16.1 Configuring the reload-delay timer for an interface..............................................................121

9  Network-instances................................................................................................................................. 123

9.1 Basic network-instance configuration............................................................................................. 123

9.2  Path  MTU  discovery....................................................................................................................... 124

9.3  Static  routes.................................................................................................................................... 124

9.3.1 Configuring static routes.........................................................................................................125

9.3.2 Configuring failure detection for static routes.........................................................................126

9.4  Aggregate  routes.............................................................................................................................126

9.4.1 Configuring aggregate routes................................................................................................. 127

9.5  Route  preferences...........................................................................................................................127

9.6 Displaying network-instance status.................................................................................................128

9.7  mac-vrf  network-instance................................................................................................................ 129

9.7.1  MAC  selection.........................................................................................................................129

9.7.2 MAC duplication detection and actions.................................................................................. 130

9.7.2.1 MAC duplication detection............................................................................................. 130

9.7.2.2 MAC duplication actions................................................................................................ 130

9.7.2.3 MAC duplication process restarts.................................................................................. 130

9.7.2.4 Configurable hold-down-time......................................................................................... 131

9.7.3 Bridge table configuration.......................................................................................................131

9.7.3.1 Deleting entries from the bridge table........................................................................... 131

9.7.4 mac-vrf network instance configuration..................................................................................132

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

7

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Table of contents

10  OSPF..................................................................................................................................................... 133

10.1 OSPF global configuration............................................................................................................133

10.1.1 Configuring basic OSPF parameters....................................................................................134

10.1.2 Configuring the router ID......................................................................................................135

10.1.3  Configuring  an  area..............................................................................................................136

10.1.4 Configuring a stub area........................................................................................................136

10.1.5 Configuring a Not-So-Stubby area....................................................................................... 137

10.1.6 Configuring an interface....................................................................................................... 137

11  BGP....................................................................................................................................................... 139

11.1 BGP global configuration.............................................................................................................. 139

11.1.1  Configuring  an  ASN.............................................................................................................. 139

11.1.2 Configuring the router ID...................................................................................................... 140

11.2 Configuring a BGP peer group..................................................................................................... 140

11.3 Configuring BGP neighbors.......................................................................................................... 140

11.4  eBGP  multihop.............................................................................................................................. 141

11.4.1 Configuring eBGP multihop.................................................................................................. 142

11.5  AS  path  options.............................................................................................................................143

11.5.1 Configuring allow-own-as......................................................................................................143

11.5.2 Configuring replace-peer-as................................................................................................. 143

11.5.3 Configuring remove-private-as..............................................................................................144

11.6  Route  reflection............................................................................................................................. 145

11.6.1 Configuring route reflection...................................................................................................146

11.7  Graceful  restart..............................................................................................................................146

11.7.1 Configuring graceful restart.................................................................................................. 147

11.8 BGP unnumbered peering............................................................................................................ 147

11.8.1 Configuring BGP unnumbered peering................................................................................ 150

11.9 BGP configuration management................................................................................................... 151

11.9.1  Modifying  an  ASN.................................................................................................................151

11.9.2  Deleting  a  neighbor.............................................................................................................. 151

11.9.3  Deleting  a  group................................................................................................................... 151

11.9.4 Resetting BGP peer connections......................................................................................... 151

11.10  Protocol  authentication................................................................................................................152

11.10.1 Configuring protocol authentication.................................................................................... 152

11.11  BGP  shortcuts............................................................................................................................. 153

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

8

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Table of contents

11.11.1 Configuring BGP shortcuts over segment routing.............................................................. 155

12  IS-IS....................................................................................................................................................... 157

12.1 Basic IS-IS configuration.............................................................................................................. 159

12.1.1 Enabling an IS-IS instance...................................................................................................159

12.1.2 Configuring the router level.................................................................................................. 159

12.1.3 Configuring the Network Entity Title.....................................................................................160

12.1.4 Configuring global parameters............................................................................................. 160

12.1.5 Configuring interface parameters......................................................................................... 161

12.2 Displaying IS-IS information......................................................................................................... 162

12.3 Clearing IS-IS information.............................................................................................................166

13  BFD........................................................................................................................................................167

13.1 Configuring BFD for a subinterface.............................................................................................. 167

13.2 Configuring BFD under the BGP protocol.................................................................................... 168

13.3 Configuring BFD under OSPF...................................................................................................... 169

13.4 Configuring BFD under IS-IS........................................................................................................169

13.5  Viewing  the  BFD  state.................................................................................................................. 170

13.6  Micro-BFD..................................................................................................................................... 170

13.6.1 Configuring micro-BFD for a LAG interface......................................................................... 171

13.6.2 Viewing the micro-BFD state................................................................................................171

14  Routing  policies...................................................................................................................................173

14.1 Creating a routing policy...............................................................................................................173

14.1.1 Specifying match conditions................................................................................................. 173

14.1.1.1 Specifying a list as a match condition......................................................................... 174

14.1.2  Specifying  actions.................................................................................................................175

14.1.3 Specifying a default action................................................................................................... 176

14.2 Applying a routing policy.............................................................................................................. 176

14.2.1 Applying a default policy to eBGP sessions........................................................................ 177

14.2.2 Replacing an AS path.......................................................................................................... 178

15  Access  control  lists............................................................................................................................ 179

15.1  ACL  actions...................................................................................................................................179

15.1.1 Supported ACL actions for 7250 IXR systems.................................................................... 180

15.1.2 Supported ACL actions for 7220 IXR-D systems.................................................................181

15.1.3 Supported ACL actions for 7220 IXR-H systems.................................................................182

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

9

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Table of contents

15.2  ACL  match  conditions...................................................................................................................183

15.3  Interface  filters...............................................................................................................................184

15.3.1 Creating an IPv4 ACL.......................................................................................................... 185

15.3.2 Creating an IPv6 ACL.......................................................................................................... 186

15.3.3 Attaching an ACL to a subinterface..................................................................................... 187

15.3.4 Attaching an ACL to the management interface.................................................................. 187

15.3.5 Detaching an ACL from an interface....................................................................................188

15.3.6 Detaching an ACL from the management interface.............................................................189

15.3.7  Modifying  ACLs.....................................................................................................................190

15.3.8 Resequencing ACL entries...................................................................................................191

15.4  Packet  capture  filters.................................................................................................................... 192

15.5 Control plane module (CPM) filters.............................................................................................. 193

15.6  System  filters.................................................................................................................................194

15.6.1 Creating a system filter........................................................................................................ 194

15.7 Configuring logging for ACLs........................................................................................................195

15.7.1 Enabling syslog for the ACL subsystem.............................................................................. 195

15.7.1.1 Syslog entry examples................................................................................................. 195

15.7.2 Logging ACL resource usage...............................................................................................196

15.7.3 Logging TCAM resource usage........................................................................................... 196

15.8 Collecting and displaying ACL statistics.......................................................................................197

15.8.1 Collecting ACL statistics....................................................................................................... 197

15.8.2 Displaying ACL statistics...................................................................................................... 198

15.8.3 Displaying ACL resource usage...........................................................................................199

15.8.4 Clearing ACL statistics......................................................................................................... 200

15.8.5 Displaying ACL statistics using show commands................................................................ 201

16  SR  Linux  applications.........................................................................................................................204

16.1  Installing  an  application................................................................................................................ 204

16.2  Starting  an  application.................................................................................................................. 205

16.3 Terminating an application............................................................................................................ 205

16.4 Reloading application configuration.............................................................................................. 206

16.5 Clearing application statistics....................................................................................................... 206

16.6 Restricted operations for applications.......................................................................................... 207

16.7 Configuring an application............................................................................................................ 208

16.8 Removing an application from the system................................................................................... 212

16.9 Partioning and isolating application resources............................................................................. 213

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

10

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Table of contents

16.9.1  Cgroup  profiles..................................................................................................................... 213

16.9.1.1 Default cgroup profile...................................................................................................213

16.9.1.2 Customer-defined cgroup profile..................................................................................215

16.9.2  Configuring  a  cgroup............................................................................................................ 216

16.9.2.1 Cgroup configuration example..................................................................................... 216

16.9.3 Kernel low-memory killer...................................................................................................... 218

16.9.3.1 SR Linux process kill strategy..................................................................................... 218

16.9.4 Application manager extensions for cgroups....................................................................... 220

16.9.5  Debugging  cgroups...............................................................................................................221

16.9.5.1 SR Linux cgroup debugging commands......................................................................221

16.9.5.2 Linux-provided cgroup debugging commands............................................................. 225

17  Mirroring............................................................................................................................................... 227

17.1  Mirror  sources............................................................................................................................... 227

17.2  Mirror  destinations.........................................................................................................................227

17.3  Configuring  mirroring.....................................................................................................................229

17.3.1 Configuring mirroring sources.............................................................................................. 229

17.3.2 Configuring mirroring destinations........................................................................................230

17.4 Displaying mirroring information................................................................................................... 232

17.5 Displaying mirroring statistics....................................................................................................... 232

18  UFT  profiles..........................................................................................................................................234

18.1 Shared bank partitioning for SR Linux systems........................................................................... 234

18.2  LPM  table  partitioning................................................................................................................... 235

18.3 Default UFT allocations for SR Linux systems.............................................................................235

18.4 Configuring a UFT profile............................................................................................................. 236

18.5 Displaying UFT profile information............................................................................................... 236

19  Maintenance  Mode.............................................................................................................................. 238

19.1 Configuring a maintenance group................................................................................................ 238

19.2 Configuring a maintenance profile................................................................................................239

19.3 Placing a maintenance group into maintenance mode................................................................ 240

19.4 Taking a maintenance group out of service................................................................................. 240

19.5 Restoring the maintenance group to service................................................................................241

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

11

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

About this guide

1 About this guide

This document describes basic configuration for the Nokia Service Router Linux (SR Linux). Examples of
commonly used commands are provided.

This document is intended for network technicians, administrators, operators, service providers, and others
who need to understand how the router is configured.

Note:
This manual covers the current release and may also contain some content that will be released
in later maintenance loads. See the SR Linux Release Notes for information on features
supported in each load.

1.1 Precautionary and information messages

The following are information symbols used in the documentation.

DANGER: Danger warns that the described activity or situation may result in serious personal
injury or death. An electric shock hazard could exist. Before you begin work on this equipment,
be aware of hazards involving electrical circuitry, be familiar with networking environments, and
implement accident prevention procedures.

WARNING:  Warning indicates that the described activity or situation may, or will, cause
equipment damage, serious performance problems, or loss of data.

Caution: Caution indicates that the described activity or situation may reduce your component or
system performance.

Note: Note provides additional operational information.

Tip: Tip provides suggestions for use or best practices.

1.2 Conventions

Nokia SR Linux documentation uses the following command conventions.

• Bold type indicates a command that the user must enter.

•

Input and output examples are displayed in Courier text.

• An open right-angle bracket indicates a progression of menu choices or simple command sequence

(often selected from a user interface). Example: start > connect to.

• A vertical bar (|) indicates a mutually exclusive argument.

• Square brackets ([ ]) indicate optional elements.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

12

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

About this guide

• Braces ({ }) indicate a required choice. When braces are contained within square brackets, they indicate

a required choice within an optional element.

•

Italic type indicates a variable.

Generic IP addresses are used in examples. Replace these with the appropriate IP addresses used in the
system.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

13

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

What's new

2 What's new

Topic

Location

DHCPv6 option 79

Configuring DHCP relay for IPv6

BGP dynamic peers on unnumbered interfaces
(available in 22.6.3)

BGP unnumbered peering

ACL actions for 7220 IXR-D5 systems

Access control lists

Free static and free dynamic TCAM usage per
ACL type (available in 22.6.3)

Displaying ACL resource usage

Mirroring to underlay destination (GRE
+ERSPAN) - IPv6 - TD3

Mirror sources

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

14

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

System management

3 System management

This chapter contains procedures for setting up basic system management functions on SR Linux,
including the hostname, domain name, DNS settings, and management network-instance. It contains
examples of configuring an SSH server and FTP server, as well as NTP for the system clock, and enabling
an SNMP server.

3.1 Configuring a hostname

The SR Linux device must have a hostname configured. The default hostname is srlinux. The hostname
normally appears on all CLI prompts on the device, although you can override this with the environment
prompt CLI command.

The hostname should be a unique name on the network, and can be a fully qualified domain name
(FQDN), or an unqualified single-label name. If the hostname is a single-label name (for example,
srlinux), the system may use its domain name, if configured, to infer its own FQDN.

Example:

The following example shows the configuration for a hostname on the SR Linux device.

--{ candidate shared default }--[  ]--
# info system name
    system {
        name {
            host-name 3-node_srlinux-A
        }
    }

3.2 Configuring a domain name

The SR Linux device uses its hostname, combined with a domain name to form its fully qualified domain
name (FQDN). It is expected that the FQDN exists within the DNS servers used by SR Linux, though this is
not a requirement.

Assuming the SR Linux FQDN is in the DNS server, you can use the FQDN to reach the SR Linux device
without knowing its management address. A domain name is not mandatory, but if specified, it is added to
the DNS search list by default.

Example:

The following shows the configuration for a domain name on the SR Linux device. In this example, the
device FQDN is set to 3-node_srlinux-A.mv.usa.nokia.com.

--{ candidate shared default }--[  ]--
# info system name
    system {
        name {
            host-name 3-node_srlinux-A

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

15

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

System management

            domain-name mv.usa.nokia.com
        }
    }

3.3 Configuring DNS settings

The SR Linux device uses DNS to resolve hostnames within the configuration, or for operational
commands, such as ping. You can specify up to three DNS servers for the SR Linux device to use, with
either IPv4 or IPv6 addressing.

You can also specify a search list of DNS suffixes that the device can use to resolve single-label names; for
example, for a search list of nokia1.com and nokia2.com, a ping for host srlinux does a DNS lookup
for srlinux.nokia1.com, and if unsuccessful, does a DNS lookup for srlinux.nokia2.com.

The SR Linux device supports configuration of static DNS entries. Static DNS entries allow resolution of
hostnames that may not be in the DNS servers used by the SR Linux device. Using a static DNS entry, you
can map multiple addresses (both IPv4 and IPv6) to one hostname. The SR Linux linux_mgr application
adds the static DNS entries to the /etc/hosts file in the underlying Linux OS.

Example:

In the following example, the SR Linux device is configured to use two DNS servers to resolve hostnames,
a search list of DNS suffixes for resolving single-label names, and IPv4 and IPv6 static DNS entries for a
host.

DNS requests are sourced from the mgmt network-instance (see Configuring the management network-
instance).

--{ candidate shared default }--[  ]--
# info system dns
    system {
        dns {
            network-instance mgmt
            server-list [
                1.1.1.1
                2.2.2.2
            ]
            search-list [
                nokia1.com
                nokia2.com
            ]
            host-entry srlinux.nokia.com {
                ipv4-address 3.3.3.3
                ipv6-address 2001:db8:123:456::11:11
            }
        }
    }

3.4 Configuring the management network-instance

Management of the SR Linux device is primarily done via a management network-instance. The
management network-instance isolates management traffic from other network-instances configured on the
device.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

16

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

System management

The out-of-band mgmt0 interface is automatically added to the management network-instance, and
management services run within the management network-instance.

Although the management network-instance is primarily intended to handle management traffic, you can
configure it in the same way as any other network-instance on the device, including protocols, policies,
and filters. The management network instance is part of the default configuration, but may be deleted if
necessary.

Addressing within the management network-instance is available via DHCP and static IP addresses. Both
IPv4 and IPv6 addresses are supported.

Example:

--{ candidate shared default }--[  ]--
# info network-instance mgmt
    network-instance mgmt {
        type ip-vrf
        admin-state enable
        description "Management network instance"
        interface mgmt0.0 {
        }
        protocols {
            linux {
                export-routes true
                export-neighbors true
            }
        }
    }

3.5 Access types

Access to the SR Linux device is available via a number of APIs and protocols. The SR Linux supports the
following ways to access the device:

• SSH – Secure Shell, a standard method for accessing network devices. See Enabling an SSH server.

• FTP – File Transfer Protocol, a secure method for transferring files to and from network devices. See

Configuring FTP.

• Console – Access to the SR Linux CLI via direct connection to a serial port on the device.

• gNMI – A gRPC-based protocol for the modification and retrieval of configuration from a target device,
as well as the control and generation of telemetry streams from a target device to a data collection
system. See gNMI server.

•

JSON-RPC – Ability to retrieve and set configuration and state using a JSON-RPC API. See JSON-
RPC server.

• SNMP – Simple Network Management Protocol, a commonly used network management protocol. The

SR Linux device supports SNMPv2 with a limited set of OIDs.

Regardless of the method of access, all sessions are authenticated (if authentication is enabled), whether
the session is entered via the console, SSH, or an API. Access to the device is controlled via the aaa_mgr
application. See Securing access.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

17

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

System management

3.5.1 Enabling an SSH server

You can enable an SSH server for one or more network instances on the SR Linux device, so that users
can log in to the CLI using an SSH client. The SR Linux device implements SSH via OpenSSH, and
configures /etc/ssh/sshd_config in the underlying Linux OS. Only SSHv2 is supported.

Example:

In the following example, an SSH server is enabled in the mgmt and default network-instances, specifying
the IP addresses where the device listens for SSH connections:

--{ candidate shared default }--[  ]--
# info system ssh-server
    system {
        ssh-server {
            network-instance mgmt {
                admin-state enable
                source-address [
                    1.1.1.1
                    1.1.1.2
                ]
            }
            network-instance default {
                admin-state enable
                source-address [
                    2.1.1.1
                    2.1.1.2
                ]
            }
        }
    }

3.5.1.1 Configure SSH key-based authentication

The SR Linux SSH server supports RSA public-private key-based authentication, where an SSH client
provides a signed message that has been encrypted by a private key. If the SSH client’s corresponding
public key is configured on the SR Linux, the SSH server can authenticate the client.

When performing authentication for a user, the SR Linux first tries public-key authentication; if this fails, the
SR Linux tries password authentication.

To configure SSH key-based authentication, you generate a public-private key pair, then add the public key
to the SR Linux.

Example:

The following is an example of using the ssh-keygen utility in Linux to generate an RSA key pair with a
length of 2,048 bits:

# ssh-keygen -t rsa -b 2048
Generating public/private rsa key pair.
Enter file in which to save the key (/home/user/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/user/.ssh/id_rsa.
Your public key has been saved in /home/user/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:RNVV8/XRVK7PhY2OJxa7rjkSUFqyVoj4pUXL2PDs7mI user@linux
The key's randomart image is:

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

18

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

System management

+---[RSA 2048]----+
| .o+o. ...oo*|
| o.oB*.. +=|
| . .o@* +|
| Fo = |
| . .M . + o|
| .. = o.|
| .. = o o|
| E.. .o + |
| . ...o+o |
+----[SHA256]-----+

Example

After generating the RSA key pair, you can add the public key to the SR Linux. The location for the public
key depends on the type of user for which SSH key-based authentication is being configured:

• For Linux users (see Linux users), you add the public key to the user’s $HOME/.ssh/authorized_

keys file.

• For users configured within the SR Linux CLI (see Local users), you add the public key to the SR Linux

configuration file. This can be done with a CLI command.

For example, the following CLI command configures a public key and password for the SR Linux user
srlinux:

--{ candidate shared default }--[  ]--
# system aaa authentication user username srlinux ssh-key 
[ <public-key> ] password <password> 

In the example, the <public-key> has the format ssh-rsa <key> <comment>. If multiple public keys
are configured for a user, they are tried in the order they were configured.

3.5.2 Configuring FTP

You can enable an FTP server for one or more network instances on the SR Linux device, so that users
can transfer files to and from the device. The SR Linux uses the vsftpd (very secure FTP daemon)
application within the underlying Linux OS. The authenticated user's home directory returned by the
aaa_mgr application is set as the user's FTP root directory.

Example:

In the following example, the FTP server is enabled in the mgmt and default network-instance, specifying
the IP addresses where the device listens for FTP connections:

--{ candidate shared default }--[  ]--
# info system ftp-server
    system {
        ftp-server {
            network-instance mgmt {
                admin-state enable
                source-address [
                    1.1.1.1
                ]
            }
            network-instance default {
                admin-state enable
                source-address [
                    2.1.2.1

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

19

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

System management

                ]
            }
        }
    }

3.6 Configuring banners

You can specify banner text that appears when a user connects to the SR Linux device. The following
banners can be configured:

• Login banner – Displayed before a user has been authenticated by the system (for example, at the SSH

login prompt)

• Message of the day (motd) banner – Displayed after the user has been authenticated by the system

The banners appear regardless of the method used to connect to the SR Linux, so they are displayed to
users connecting via SSH, console, and so on.

Example:

In the following example, login and motd banners are configured. The login banner text appears at the
prompt when a user attempts to log in to the system, and the motd banner text appears after the user has
been authenticated.

--{ candidate shared default }--[  ]--
# info system banner
    system {
        banner {
            login-banner "Enter your SRLinux login credentials."
            motd-banner "Welcome to the SRLinux CLI. Your activity may be monitored."
        }
    }

3.7 Synchronizing the system clock

Network Time Protocol (NTP) is used to synchronize the system clock to a time reference. You can
configure NTP settings on the SR Linux device using the CLl, and the SR Linux linux_mgr application
provisions the settings in the underlying Linux OS.

NTP does not account for time zones, instead relying on the host to perform such computations. Time
zones on the SR Linux device are based on the IANA tz database, which is implemented by the underlying
Linux OS. You can specify the time zone of the SR Linux device using the CLI.

Example:

The following configuration enables the system NTP client on the SR Linux device and specifies an NTP
server to use for clock synchronization. The NTP client runs in the mgmt network-instance. The system
time zone is set to America/Los_Angeles.

--{ candidate shared default }--[  ]--
# info system ntp
    system {
        ntp {
            admin-state enable

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

20

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

System management

            network-instance mgmt
            server 4.53.160.75 {
            }
        }
        clock {
            timezone America/Los_Angeles
        }
    }

3.8 Configuring SNMP

The SR Linux device supports SNMPv2. See the SR Linux System Management Guide for descriptions of
the supported SNMP OIDs. The MIB file that covers these OIDs is packaged with each release.

Example:

In the following example, an SNMP server is running within the mgmt and default network-instances, and
the configuration specifies the IP addresses where the device listens for SNMP client connections:

--{ candidate shared default }--[  ]--
# info system snmp
    system {
        snmp {
            community test1 {
                permission r
                version v2c
            }
            network-instance mgmt {
                admin-state enable
                source-address [
                    1.1.1.1
                ]
            }
            network-instance default {
                admin-state enable
                source-address [
                    3.3.3.3
                ]
            }
        }
    }

3.9 IP ECMP Load Balancing

Equal-Cost Multipath Protocol (ECMP) refers to the distribution of packets over two or more outgoing links
that share the same routing cost. Static, IS-IS, OSPF, and BGP routes to IPv4 and IPv6 destinations can
be programmed into the datapath by their respective applications, with multiple IP ECMP next-hops.

The SR Linux load-balances traffic over multiple equal-cost links with a hashing algorithm that uses header
fields from incoming packets to calculate which link to use. When an IPv4 or IPv6 packet is received on a
subinterface, and it matches a route with a number of IP ECMP next-hops, the next-hop that forwards the
packet is selected based on a computation using this hashing algorithm. The goal of the hash computation
is to keep packets in the same flow on the same network path, while distributing traffic proportionally

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

21

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

System management

across the ECMP next-hops, so that each of the N ECMP next-hops carries approximately 1/Nth of the
load.

The hash computation takes various key and packet header field values as inputs and returns a value that
indicates the next-hop. The key and field values that can be used by the hash computation depend on the
platform, packet type, and configuration options, as follows:

On 7250 IXR systems, the following can be used in the hash computation:

• For IPv4 TCP/UDP non-fragmented packets: user-configured hash-seed (0-65535; default 0), source

IPv4 address, destination IPv4 address, IP protocol, L4 source port, L4 destination port. The algorithm
is asymmetric; that is, inverting source and destination pairs does not produce the same result.

• For IPv6 TCP/UDP non-fragmented packets: user-configured hash-seed (0-65535; default 0), source
IPv6 address, destination IPv6 address, IPv6 flow label (even if it is 0), IP protocol (IPv6 next-header
value in the last extension header), L4 source port, L4 destination port. The algorithm is symmetric; that
is, inverting source and destination pairs produces the same result.

• For all other packets: user-configured hash-seed (0-65535; default 0), source IPv4 or IPv6 address,

destination IPv4 or IPv6 address.

On 7220 IXR-D1, D2, D3 and 7220 IXR-H2 and H3 systems, the following can be used in the hash
computation:

• For IPv4 TCP/UDP non-fragmented packets: VLAN ID, user-configured hash-seed (0-65535; default

0), source IPv4 address, destination IPv4 address, IP protocol, L4 source port, L4 destination port. The
algorithm is asymmetric.

• For IPv6 TCP/UDP non-fragmented packets: VLAN ID, user-configured hash-seed (0-65535; default 0),
source IPv6 address, destination IPv6 address, IPv6 flow label (even if it is 0), IP protocol (IPv6 next-
header value in the last extension header), L4 source port, L4 destination port.

• For all other packets: user-configured hash-seed (0-65535; default 0), source IPv4 or IPv6 address,

destination IPv4 or IPv6 address.

3.9.1 Configuring IP ECMP load balancing

To configure IP ECMP load balancing, you specify hash-options that are used as input fields for the hash
calculation, which determines the next-hop for packets matching routes with multiple ECMP hops.

Example:

The following example configures hash options for IP ECMP load balancing, including a hash seed and
packet header field values to be used in the hash computation.

--{ * candidate shared default }--[  ]--
# info system load-balancing
    system {
        load-balancing {
            hash-options {
                hash-seed 128
                ipv6-flow-label false
            }
        }
    }

If no value is configured for the hash-seed the default value is 0. If a hash-option is not specifically
configured, the default is true.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

22

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

System management

On 7250 IXR systems, if source-address is configured as a hash option, the destination-address
must also be configured as a hash option. Similarly, if source-port is configured as a hash option, the
destination-port must also be configured as a hash option.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

23

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

4 Configuration management

The chapter describes concepts behind managing the SR Linux configuration, including configuration
datastores, modes, and how to commit changes to the running configuration.

4.1 Default configuration

At startup, the SR Linux loads a JSON configuration file, located at /etc/opt/srlinux/config.json.
If this startup configuration does not exist, the system is started using a factory default configuration.

The factory default configuration brings device into management, enables DHCP/v6 on the management
interface, adds it to the management network-instance, enables an SSH server, and creates various
system logs and applies a default set of CPM filters.

You can optionally create a rescue configuration, which is loaded if the startup configuration fails to load
(see Rescue configuration). If the startup configuration fails to load, and no rescue configuration exists, the
system is started using the factory default configuration.

4.2 Configuration datastores

Configuration and state information reside in datastores on the SR Linux device. The following datastores
are available:

• Running – contains the currently active configuration.

• State – contains the running configuration, plus dynamically added data such as operational state of
interfaces or BGP peers added via auto-discovery, as well as session states and routing tables.

• Candidate – contains a user-configurable version of the running datastore. After it has been committed,

the candidate datastore becomes the running datastore.

• Tools – contains executable commands that allow you to perform operations such as restarting the

device and clearing interface statistics.

Within the CLI, you can use the info command to display information from a datastore. For example,
entering the info from state command (or entering the info command in state mode) displays
configuration and statistics from the state datastore for the current context, and entering the info from
running command (or the info command in running mode) displays configuration from the running
datastore for the current context.

4.3 Configuration modes

The candidate datastore corresponds to a configuration mode within the SR Linux CLI. In candidate mode,
you can modify SR Linux configuration settings.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

24

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

By default, candidate mode operates in shared mode, which allows multiple users to modify the candidate
configuration concurrently. When the configuration is committed in shared mode, all of the users’ changes
are applied.

You can optionally use candidate mode in exclusive mode, which locks out all other users from making
changes to the candidate configuration.

4.3.1 Configuration candidates

When a user enters candidate mode, the system creates two copies of the running datastore: one is
modifiable by the user, and the other serves as a baseline. The modifiable datastore and the baseline
datastore are collectively known as a configuration candidate.

A configuration candidate can be either shared or private.

• Shared – is the default configuration candidate for CLI sessions. Multiple users can modify the shared
candidate concurrently. When the configuration is committed, the changes from all of the users are
applied.

• Private – is the default configuration candidate when using JSON-RPC or gNMI clients, and can

optionally be used in the CLI. With a private candidate, each user modifies their own separate instance
of the configuration candidate. When a user commits their changes, only the changes from that user are
committed.

By default, there is a single unnamed global configuration candidate. You can optionally configure one or
more named configuration candidates, which function identically to the global configuration candidate. Both
shared and private configuration candidates support named versions.

4.3.2 Setting the configuration mode

After logging in to the CLI, you are initially placed in running mode. Table 1: Commands to change
configuration mode describes the commands to change between modes.

Table 1: Commands to change configuration mode

To enter this mode:

Type this command:

Candidate shared

enter candidate

Candidate mode for named shared
candidate

enter candidate name <name>

Candidate private

enter candidate private

Candidate mode for named private
candidate

enter candidate private name <name>

Candidate exclusive

enter candidate exclusive

Exclusive mode for named candidate

enter candidate exclusive name <name>

Running

enter running

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

25

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

To enter this mode:

Type this command:

State

Show

Example:

enter state

enter show

For example, to change from running to candidate mode:

--{ running }--[  ]--
# enter candidate
--{ * candidate shared default }--[  ]--

The asterisk (*) next to the mode name indicates that the candidate configuration has changes that have
not yet been committed.

Example:

To enter candidate mode for a named configuration candidate, you specify the name of the configuration
candidate. For example:

--{ running }--[  ]--
# enter candidate name cand1
--{ candidate shared cand1}--[  ]--

4.4 Committing a configuration in candidate mode

About this task

Changes made during a configuration modification session do not take effect until a commit command is
issued. Use the commit command in candidate mode only.

Procedure

Step 1. Enter candidate mode:

Example

# enter candidate

Step 2. Enter configuration commands.

Step 3. Enter the commit command:

• To apply the changes and remain in candidate mode, enter commit stay.

• To apply the changes, exit candidate mode, and enter running mode, enter commit now.

• To apply the changes, remain in candidate mode, and save the changes to the startup

configuration, enter commit stay save.

• To apply a comment to a commit stay or save  operation, use the comment keyword and

specify a comment.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

26

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

Example

# enter candidate
--{ candidate shared default }--[  ]--
# interface ethernet-1/1 subinterface 1
--{ * candidate shared default }--[ interface ethernet-1/1 subinterface 1 ]--
# commit stay
All changes have been committed. Starting new transaction.
--{ + candidate shared default }--[ interface ethernet-1/1 subinterface 1 ]--
# save startup
/system:
    Saved current running configuration as initial (startup) configuration '/etc/
opt/srlinux/config.json'
--{ candidate shared default }--[ interface ethernet-1/1 subinterface 1 ]--
#

In this example, a user enters candidate mode and creates a subinterface for interface
ethernet-1/1. The asterisk (*) next to candidate shared default in the prompt
indicates that the candidate configuration has changes that have not yet been committed. After
committing the changes with the commit stay command, the new subinterface becomes part of
the running configuration.

The plus sign (+) in the prompt indicates that the currently running configuration differs from the
startup configuration. The save startup command saves the running configuration to the startup
configuration.

4.4.1 Confirming a commit operation

You can optionally configure the SR Linux to require explicit confirmation via a tools command for the
configuration changes from a commit operation to become permanent. If the new configuration is not
confirmed after a timeout period, the running datastore reverts to the previous version.

Example:

After entering configuration commands in candidate mode, use the following command to commit the
configuration and start the confirmation timer:

--{ candidate shared default }--[  ]--
# commit confirmed

The commit confirmed command applies the changes to the running datastore and activates them. If the
configuration is committed successfully, the confirmation timer is started (default 10 minutes). If you do not
confirm the commit operation before the timer expires, the configuration reverts to the previous version.

Example

To confirm the commit operation and make the configuration changes permanent, enter the following
command before the confirmation timer expires:

--{ candidate shared default }--[  ]--
# tools system configuration confirmed-accept

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

27

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

Example

To revert to the previous configuration without waiting for the confirmation timer to expire, enter the
following command:

--{ candidate shared default }--[  ]--
# tools system configuration confirmed-reject

4.4.2 Validating a commit operation

You can optionally validate the configuration changes made during a commit operation before they are
applied to the running datastore. The SR Linux management server checks the syntax of the changes in
the candidate configuration and displays messages if validation errors are found.

Example:

Use the following command to perform a validation check for configuration changes. Note that this
command only validates the changes; it does not apply them to the running datastore.

--{ candidate shared default }--[  ]--
# commit validate

If syntax errors are found in the configuration changes, SR Linux displays error messages; if validation is
successful, no output is displayed.

4.4.3 Updating the baseline datastore

A configuration candidate consists of a modifiable candidate datastore and a baseline datastore, both of
which are snapshots of the then-current running datastore when a user enters candidate mode.

During the lifetime of the configuration candidate, the running datastore can be modified via commits
initiated from other configuration sessions. At that point, the baseline in the configuration candidate is out-
of-date.

Updating the baseline datastore takes a new snapshot of the running configuration, applies the changes
in the candidate datastore, and checks for configuration conflicts in the updated baseline datastore. If
conflicts are found, the user is informed with a warning or error for each conflict.

A baseline datastore update is done automatically when the user commits the changes to the
configuration, or can be done manually with the baseline update command.

Example:

In the following example, the baseline datastore in a configuration candidate is out of date, as indicated by
the ! in the prompt. This indicates that another user has committed changes to the running datastore.

Entering the baseline update command copies the current running datastore to the baseline datastore,
applies the changes in the candidate datastore, then displays any conflicts in the updated baseline
datastore. If there are no conflicts, no output is returned by the command.

--{!* candidate shared default }--[  ]--
# baseline update
--{* candidate shared default }--[  ]--
# 

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

28

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

4.5 Deleting a configuration

Use the delete command to delete configurations while in candidate mode.

Example:

The following example displays the system banner configuration, deletes the configured banner, then
displays the resulting system banner configuration:

--{ candidate shared default }--[  ]--
# info system banner
    system {
        banner {
            login-banner "Welcome to SRLinux!"
        }
    }
--{ candidate shared default }--[  ]--
# delete system banner
--{ candidate shared default }--[  ]--
# info system banner
    system {
        banner {
        }
    }

4.6 Annotating the configuration

To aid in reading a configuration, you can add comments or descriptive annotations. The annotations are
indicated by !!! in displayed output.

You can enter a comment either directly from the command line or by navigating to a CLI context and
entering the comment in annotate mode.

Example:

The following example adds a comment to an ACL configuration. If there is already a comment in the
configuration, the new comment is appended to the existing comment.

--{ candidate shared default }--[  ]--
# acl ipv4-filter ip_tcp !! "Filter TCP traffic"

Example

To replace the existing comment, use !!! instead of !! in the command.

The following example adds the same comment to the ACL by navigating to the context for the ACL and
entering the comment in annotate mode:

--{ * candidate shared default }--[  ]--
# acl ipv4-filter ip_tcp
--{ * candidate shared default }--[ acl ipv4-filter ip_tcp ]--
# annotate
Press [Meta+enter] or [Esc] followed by [Enter] to finish
-> Filter TCP traffic

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

29

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

You can enter multiple lines in annotate mode. To exit annotate mode, press Esc, then the Enter key.

Example

In CLI output, the comment is displayed in the context it was entered. For example:

--{ running }--[  ]--
# info acl
    acl {
        ipv4-filter ip_tcp {
            !!! Filter TCP traffic
            entry 100 {
                action {
                    drop {
                        log true
                    }
                }
            }
            entry 110 {
                action {
                    accept {
                        log true
                    }
                }
            }
        }
    }

To remove a comment, enter annotate mode for the context and press Esc then Enter without entering any
text.

4.7 Discarding a configuration in candidate mode

You can discard previously applied configurations with the discard command. Use the discard command
in candidate mode only.

• To discard the changes and remain in candidate mode with a new candidate session, enter discard

stay.

• To discard the changes, exit candidate mode, and enter running mode, enter discard now.

Example:

All changes have been committed. Starting new transaction.

--{ candidate shared default }--[ interface ethernet-1/1 subinterface 1 ]--
# discard stay
--{ candidate shared default }--[ interface ethernet-1/1 subinterface 1 ]--

4.8 Displaying configuration details

The info command displays configuration and state information. Entering the info command from the
root context displays the entire configuration, or the configuration for a specified context. Entering the
command from within a context limits the display to the configuration under that context. Use this command
in candidate or running mode.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

30

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

Example:

To display the entire configuration, enter info from the root context:

--{ candidate shared default }--[  ]--
# info
<all the configuration is displayed>
--{ candidate }--[  ]--

Example

To display the configuration for a specific context, enter info and specify the context:

--{ candidate shared default }--[  ]--
# info system lldp
    system {
        lldp {
            admin-state enable
            hello-timer 600
            management-address mgmt0.0 {
                type [
                    IPv4
                ]
            }
            interface mgmt0 {
                admin-state disable
            }
        }
    }
--{ candidate }--[  ]--

Example

From a context, use the info command to display the configuration under that context:

--{ candidate shared default }--[  ]--
# system lldp
--{ candidate }--[ system lldp ]--
# info
    admin-state enable
    hello-timer 600
    management-address mgmt0.0 {
        type [
            IPv4
        ]
    }
    interface mgmt0 {
        admin-state disable
    }
--{ candidate }--[ system lldp ]--

Example

Use the as json option to display JSON-formatted output:

--{ candidate }--[ system lldp ]--
# info | as json
{
  "admin-state": "enable",
  "hello-timer": "600",
  "management-address": [

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

31

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

    {
      "subinterface": "mgmt0.0",
      "type": [
        "IPv4"
      ]
    }
  ],
  "interface": [
    {
      "name": "mgmt0",
      "admin-state": "disable"
    }
  ]
}

Example

Use the detail option to display values for all parameters, including those not specifically configured:

--{ candidate }--[ system lldp ]--
# info detail
    admin-state enable
    hello-timer 600
    hold-multiplier 4
    management-address mgmt0.0 {
        type [
            IPv4
        ]
    }
    interface mgmt0 {
        admin-state disable
    }

Example

Use the flat option to display the output as a series of set statements, omitting indentation for any sub-
contexts:

--{ candidate }--[ system lldp ]--
# info flat
set / system lldp admin-state enable
set / system lldp hello-timer 600
set / system lldp management-address mgmt0.0
set / system lldp management-address mgmt0.0 type [ IPv4 ]
set / system lldp interface mgmt0
set / system lldp interface mgmt0 admin-state disable

Example

Use the depth option to display parameters with a specified number of sub-context levels:

--{ candidate }--[ system lldp ]--
# info depth 0
    admin-state enable
    hello-timer 600

--{ candidate }--[ system lldp ]--
# info depth 1
    admin-state enable
    hello-timer 600
    management-address mgmt0.0 {

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

32

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

        type [
            IPv4
        ]
    }
    interface mgmt0 {
        admin-state disable
    }

4.9 Displaying the configuration state

To display information from the state datastore, enter the info from state command in candidate or running
mode, or the info command in state mode.

Example:

To display state information for a specified context from candidate or running mode:

--{ candidate shared default }--[  ]--
# info from state routing-policy policy bgp-export-policy
    routing-policy {
        policy bgp-export-policy {
            statement 999 {
                action {
                    accept {
                    }
                }
            }
        }
    }

Example

To display state information for a specified context from state mode:

--{ candidate shared default }--[  ]--
# enter state
--{ state }--[  ]--
# info routing-policy policy bgp-export-policy
    routing-policy {
        policy bgp-export-policy {
            statement 999 {
                action {
                    accept {
                    }
                }
            }
        }
    }
--{ state }--[  ]--

Example

You can change to a different mode (for example, from state mode to candidate mode), and remain in the
previous context. For example:

--{ candidate shared default }--[  ]--
# enter state
--{ state }--[  ]--

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

33

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

# routing-policy policy bgp-export-policy
--{ state }--[ routing-policy policy bgp-export-policy ]--
# info
    statement 999 {
        action {
            accept {
            }
        }
    }
--{ state }--[ routing-policy policy bgp-export-policy ]--
# enter candidate
--{ candidate shared default }--[ routing-policy policy bgp-export-policy ]--

4.10 Saving a configuration to a file

Save the existing configuration to a file using the save command. Use this command in candidate or
running mode.

Example:

To save the running configuration to a file:

--{ running }--[  ]--
# save file running-config.txt text from running
/ running configuration has been stored in 'running-config.txt'
--{ running }--[  ]--

Example

To save the running configuration in JSON format:

--{ running }--[  ]--
# save file running-config.json from running
/ running configuration has been stored in 'running-config.json'
--{ running }--[  ]--

Example

To save the running configuration in JSON format:

--{ running }--[  ]--
# save file running-config.json from running
/ running configuration has been stored in 'running-config.json'
--{ running }--[  ]--

Example

To save the running configuration to the initial (startup) configuration:

--{ + running }--[  ]--
# save startup
/ running configuration has been stored in '/etc/opt/srlinux/config.json'
--{ running }--[  ]--

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

34

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

The plus sign (+) in the prompt indicates that the running configuration differs from the startup
configuration. After you enter the save startup command, the running configuration is synchronized with
the startup configuration, and the plus sign is removed from the prompt.

4.11 Loading a configuration

Use the load command to load a configuration. The configuration can be from a checkpoint (see
Configuration checkpoints), a JSON-formatted configuration file, the startup configuration, the factory
default configuration, a rescue configuration (see Rescue configuration), or from manually entered or
pasted JSON-formatted input.

Example:

To load a configuration from a checkpoint:

--{ * candidate shared default }--[  ]--
# load checkpoint id 0
/system/configuration/checkpoint[id=0]:
    Loaded checkpoint '/etc/opt/srlinux/checkpoint/checkpoint-0.json'

Example

To load a configuration from a file:

--{ * candidate shared default }--[  ]--
# load file home/config.txt
Loading configuration from 'home/config.txt'

Example

To load a rescue JSON configuration from a checkpoint:

--{ * candidate shared default }--[  ]--
# load rescue auto-commit
/system/configuration/checkpoint[id=__rescue__]:
    Reverting to rescue configuration

Example

To load a configuration from manually entered JSON-formatted input:

--{ * candidate shared default }--[  ]--
# system banner
--{ * candidate shared default }--[ system banner ]--
# load json
Press [Meta+enter] or [Esc] followed by [Enter] to finish
<< {
<<   "login-banner": "Welcome to SRLinux!"
<< }

You can enter or paste multiple lines at the << prompt in JSON-input mode. To exit JSON-input mode,
press Esc, then the Enter key.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

35

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

4.12 Executing configuration statements from a file

You can execute configuration statements from a source file consisting of set statements such as those
generated by the info flat command (see Displaying configuration details). The SR Linux reads the file
and executes each configuration statement line-by-line. You can optionally commit the configuration
automatically after the file is read.

Example:

The following example executes a configuration from a specified file:

--{ running }--[  ]--
# source config.cfg
Sourcing commands from 'config.cfg'
Executed 20 lines in 1.6541 seconds from file config.cfg

Use the auto-commit option to commit the configuration after the commands in the source file are
executed.

4.13 Configuration checkpoints

You can roll back the configuration to a previous state, known as a checkpoint. You can load a saved
checkpoint into the candidate configuration, and revert the running configuration to a previously saved
checkpoint.

A checkpoint is saved as a JSON-formatted file containing the complete configuration for the system. If a
checkpoint file is larger than 1 Mb, it is compressed and saved in GZIP format. Checkpoint files are saved
in the /etc/opt/srlinux/checkpoint directory. They are named checkpoint-<number>.json (for
example, checkpoint-0.json), or checkpoint-<number>.json.gz, with the lowest number being
the most recently saved checkpoint.

By default, the 10 most recent checkpoints are saved; you can configure the maximum number of
checkpoint files that are kept by the system.

4.13.1 Generating a checkpoint

You can generate a checkpoint with a tools command or with the save checkpoint command. You can
optionally configure the system to generate a checkpoint automatically when a configuration is committed.

Example:

The following example generates a checkpoint from the current configuration:

--{ !* candidate shared default }--[  ]--
# tools system configuration generate-checkpoint
/system:
    Generated checkpoint '/etc/opt/srlinux/checkpoint/checkpoint-
0.json' with name 'checkpoint-2020-10-20T23:14:12.703Z' and comment ''

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

36

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

Example

You can optionally configure a name or comment for a checkpoint; for example:

--{ !* candidate shared default }--[  ]--
# save checkpoint comment My-checkpoint
/system:
    Generated checkpoint '/etc/opt/srlinux/checkpoint/checkpoint-
0.json' with name 'checkpoint-2020-10-20T23:23:25.891Z' and comment 'My-checkpoint'

Example

The following example configures the system to generate a checkpoint automatically whenever a
configuration is committed:

--{ !* candidate shared default }--[  ]--
# info system configuration
    system {
        configuration {
            auto-checkpoint true
            }
        }
    }

For automatically generated checkpoints, the comment is set to automatic checkpoint after
commit <n>, where <n> is the ID of the commit that triggered the checkpoint.

4.13.2 Loading a checkpoint

Loading a checkpoint requires an interactive configuration session with a candidate session already active.

Example:

The following example loads a checkpoint into the candidate configuration. Note that you must be in
candidate mode to load a checkpoint.

--{ * running }--[  ]--
# enter candidate
--{ * candidate shared default }--[  ]--
# tools system configuration checkpoint 0 load
/system/configuration/checkpoint[id=0]:
    Loaded checkpoint '/etc/opt/srlinux/checkpoint/checkpoint-0.json'

4.13.3 Reverting to a previous checkpoint

You can revert the running configuration to a previous checkpoint. When used within a candidate session,
the revert operation loads the checkpoint, removing any present changes, then commits them and
establishes a new candidate session.

Example:

The following example reverts the running configuration to a previously saved checkpoint:

--{ * running }--[  ]--
# enter candidate

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

37

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

--{ * candidate shared default }--[  ]--
# tools system configuration checkpoint 0 revert
/system/configuration/checkpoint[id=0]:
    Reverting to checkpoint 0 (name 'checkpoint-2019-10-14T18:47:30.282Z' 
comment 'Daily_checkpoint')
/:
    Successfully reverted configuration

4.13.4 Clearing a checkpoint

Checkpoints can be cleared from the system either manually, with a tools command, or automatically
when the number of saved checkpoints exceeds the configured maximum.

When the number of saved checkpoints exceeds the configured maximum, the oldest checkpoint is
removed, and the number of each remaining checkpoint is incremented by 1. If you clear a checkpoint
manually, the other checkpoints are not renumbered.

Example:

The following example clears a previously saved checkpoint.

# tools system configuration checkpoint 2 clear
/system/configuration/checkpoint[id=2]:
    Cleared checkpoint '/etc/opt/srlinux/checkpoint/checkpoint-2.json'

4.13.5 Configuring maximum number of checkpoints

By default, the 10 most recent checkpoints are saved; you can configure the maximum number of
checkpoint files that are kept by the system.

Example:

The following example configures the system to keep a maximum of 15 checkpoint files.

--{ * candidate shared default }--[  ]--
# info system configuration
 system {
     configuration {
         max-checkpoints 15
         }
     }
 }

In this example, if 15 checkpoint files are being kept, adding a subsequent checkpoint file causes the
oldest checkpoint file to be deleted and the index for the remaining checkpoint files to be incremented by 1.

4.13.6 Displaying checkpoint information

Use the info from state command to display information about existing checkpoints.

Example:

# info from state system configuration checkpoint 0
    system {

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

38

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

        configuration {
            checkpoint 0 {
                name checkpoint-2020-10-20T23:23:25.891Z
                comment cp002
                created 2020-10-20T23:23:25.894Z
                version v20.6.0
                username srlinux
                size 28494
            }
        }
    }

4.14 Rescue configuration

You can save a secondary rescue configuration to load in place of the default JSON configuration file.
The rescue configuration is a checkpoint file that is loaded automatically by the management server if the
default config.json fails when the system starts.

If both the default configuration and rescue configuration files are missing or fail, a config.json is
regenerated and committed from the factory config.json that is compiled in the management server.

4.14.1 Saving a rescue configuration

You can save a rescue configuration to be loaded automatically if the default config.json fails when
the system starts. Save the rescue configuration to a file with a tools command or using the save rescue
command. Use these commands in running mode. The system generates a rescue-config.json file
and saves it to the /etc/opt/srlinux/checkpoint directory.

Example:

The following tools command saves a rescue configuration:

--{ running }--[ ]--
# tools system configuration rescue-save
/system:
    Saved current running configuration as rescue configuration '/etc/opt/srlinux/
checkpoint/rescue-config.json'

Example

The following example also saves a rescue configuration:

--{ running }--[ ]--
# save rescue
/system:
  Saved current running configuration as rescue configuration '/etc/opt/srlinux/
checkpoint/rescue-config.json'

Example

You can confirm the rescue configuration is saved by viewing the checkpoint directory. The following
example lists the checkpoint directory:

--{ running }--[ ]--

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

39

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

# file ls /etc/opt/srlinux/checkpoint
checkpoint-0.json
rescue-config.json

4.14.2 Clearing a rescue configuration

To remove an existing rescue configuration, use the rescue-clear command to clear the configuration from
the /etc/opt/srlinux/checkpoint directory. Use this command in running mode. You can then save
a new rescue configuration to replace the cleared configuration.

Example:

The following tools command clears a previously saved rescue configuration:

--{ running }--[ ]--
# tools system configuration rescue-clear
/system:
    Cleared rescue configuration '/etc/opt/srlinux/checkpoint/rescue-config.json'

Example

You can confirm the rescue configuration is cleared by viewing the checkpoint directory. The following
example lists the checkpoint directory:

--{ running }--[ ]--
# file ls /etc/opt/srlinux/checkpoint
checkpoint-0.json

4.15 Configuration upgrades

When the SR Linux is started following a software image upgrade, it reads the configuration in the startup
config.json file, makes any necessary changes to ensure compatibility with the new software image,
and places the upgraded configuration into the running configuration. This upgraded configuration is not
saved automatically; to save the contents of the running configuration, use the following commands:

• save startup – Saves the running configuration to the startup configuration file, located at /etc/opt/

srlinux/config.json (or config.gz).

• save rescue – Saves the running configuration to the rescue configuration file, located at /etc/opt/

srlinux/checkpoint/rescue-config.json (or rescue-config.gz).

• save checkpoint – Saves the running configuration to a configuration checkpoint; for example, /etc/

opt/srlinux/checkpoint/checkpoint-0.json (or checkpoint-0.gz).

• save file <name> from running – Saves the running configuration to the specified file in JSON format.

4.15.1 Upgrading configuration files

In addition to saving the upgraded running configuration to startup, rescue, and checkpoint configurations,
you can use the following tools commands to upgrade existing configuration files so they are compatible
with the current software version.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

40

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Configuration management

Example:

To upgrade the startup configuration file:

--{ running }--[ ]--
# tools system configuration upgrade startup

Example

To upgrade the rescue configuration file:

--{ running }--[ ]--
# tools system configuration upgrade rescue

Example

To upgrade a configuration checkpoint file:

--{ running }--[ ]--
# tools system configuration upgrade checkpoint 0

Example

To upgrade a specific JSON-formatted configuration file:

--{ running }--[ ]--
# tools system configuration upgrade file /etc/opt/srlinux/configs/myconfig.json

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

41

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Securing access

5 Securing access

The SR Linux is able to secure access to the device for users connecting via SSH or the console port, as
well as for applications and FTP access. Authentication can be performed for users configured within the
underlying Linux OS, and for administrative users configured within the SR Linux itself.

Depending on the user type, users are authenticated locally on the device or through interaction with the
SR Linux aaa_mgr application and an authentication server group (for example, TACACS+).

5.1 User types

The SR Linux supports three user types: Linux users, local users, and remote users. Each user type is
authenticated differently, as described in the following sections.

5.1.1 Linux users

Linux users are those configured in the underlying Linux OS, not in the SR Linux CLI. Information about
Linux users is stored in /etc/passwd in the underlying Linux OS.

By default, the SR Linux has a single Linux user (username linuxadmin, password NokiaSrl1!) who
has access to sudo to root and can run the SR Linux CLI with admin permissions. Other Linux users can
be added with the useradd command in the underlying Linux OS.

Linux users are authenticated via the underlying Linux OS, not through the SR Linux aaa_mgr application.
This means that Linux users are not subject to authentication settings configured within the SR Linux CLI,
such as authentication by a TACACS+ server group.

5.1.2 Local users

Local users are users configured within the SR Linux itself. By default, SR Linux supports a single local
user, named admin; other local users can be added as necessary.

Local users are authenticated via a gRPC interface to the aaa_mgr application. See Authentication for local
users for an example configuration.

5.1.3 Remote users

Remote users are users that are not configured either in /etc/passwd or within the SR Linux
configuration. Remote users are configured on a remote server, which is queried when the user attempts to
log in to the SR Linux device.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

42

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Securing access

5.2 AAA functions

The SR Linux performs authentication, authorization, and accounting (AAA) functions for each user type,
as described in the following sections.

5.2.1 Authentication

For Linux users, the SR Linux authenticates via the authentication mechanism built into the underlying
Linux OS.

For local users, including the SR Linux admin user, the SR Linux uses its gRPC interface to the aaa_mgr
application for authentication. Authentication settings that apply to the local users, including a local
password and TACACS+ server group, can be configured using the SR Linux CLI. See Authentication for
local users for information about configuring local users.

For remote users, authentication is performed using the aaa_mgr application in coordination with the
remote system.

5.2.2 Authorization

The SR Linux implements authorization through role-based access control, where each authenticated
user is assigned one or more predefined roles that specify the functions the user is allowed to perform on
the system. If no role is configured for a user, then the user is assigned a role that allows access to CLI
plugins, but no other functions.

Authorization via role based access control is performed for all user types on all interfaces (CLI, gNMI,
JSON-RPC), with the exception of the admin and linuxadmin users, which are permitted write access to
all commands in the command tree. You can configure service authorization, which can limit the interface
types for which the functions in a role are authorized.

You can configure the SR Linux to use information from a TACACS+ server to assign roles to an
authenticated user. In this case, the priv-lvl value in the authorization-reply message received from
the TACACS+ server maps to a role configured on the SR Linux. The user is assigned the role that
corresponds to the priv-lvl value.

See Authorization using role-based access control for information about configuring roles for users.

5.2.3 Accounting

The SR Linux supports command accounting. Accounting records generated by the SR Linux include the
entire CLI string that a user enters on the command line, including any pipes or output redirects specified in
the command.

You can configure the SR Linux device to send accounting records to a destination specified in an
accounting-method list, such as a TACACS+ server group or the local system.

For each user type, the SR Linux device generates accounting records as follows:

• For local users, including the SR Linux admin user, command accounting records are sent to the

destination specified in the accounting-method list, both for commands entered in the SR Linux CLI and
for commands entered in the bash shell.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

43

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Securing access

• For Linux users and remote users, command accounting records are sent for commands entered in

the SR Linux CLI (including Linux commands entered in the SR Linux CLI using the bash command),
although not for commands entered in the bash shell.

See Configuring accounting for an example configuration.

5.3 AAA server group configuration

The SR Linux supports the following server group types for AAA functions:

•

local – Uses local authentication, including /etc/passwd, /etc/group, and logging via syslog.

• TACACS+ – Performs authentication, authorization, and accounting via interaction with servers in a

TACACS+ server group.

Users whose AAA functions are handled by the aaa_mgr application (that is, the SR Linux admin user and
local users) can use one of these server groups for authentication and accounting.

The TACACS+ server group can have up to five servers. When authenticating a user or writing an
accounting record, the SR Linux tries each server in the group in a round-robin fashion until a response is
received. If no response is received within a specified timeout period, the SR Linux tries the next server in
the group.

If no response is received from any of the servers in the group, the SR Linux moves to the next specified
authentication or accounting method. If no other method is specified, or the TACACS+ server group is the
last method in the list, then the authentication or accounting request is rejected.

5.3.1 Configuring an AAA server group

The following example shows settings for a TACACS+ and a local server group to be used for AAA
functions. TACACS+ requests are sourced from the mgmt network-instance.

The TACACS+ server group consists of three TACACS+ servers. The timeout period specifies that the SR
Linux wait 30 seconds for a response from a server before trying the next server in the group.

For the server group of type local, no external servers can be specified. The local server group uses /
etc/passwd and /etc/group for authentication, and syslog for accounting. The timeout period specifies
that the SR Linux wait a maximum of 60 seconds for an AAA function to complete.

Example:

--{ * candidate shared default }--[  ]--
# info system aaa
 system {
     aaa {
         server-group tacacs-all {
            type tacacs
            timeout 30
            server 1.2.2.1 {
                network-instance mgmt
                tacacs {
                    secret-key $aes$3/Iz5veTDRV0=$6GxkrGjFbqWbYMA0T3itgQ==
                }
            }
            server 1.2.2.2 {
                network-instance mgmt

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

44

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Securing access

                tacacs {
                    secret-key $aes$3/Iz5veTDRV0=$6GxkrGjFbqWbYMA0T3itgQ==
                }
            }
            server 1.2.2.3 {
                network-instance mgmt
                tacacs {
                    secret-key $aes$3/Iz5veTDRV0=$6GxkrGjFbqWbYMA0T3itgQ==
                }
            }
         server-group local {
            type local
            timeout 60
            }
         }
     }
 }

5.4 Authentication for local users

Local users are those configured within the SR Linux CLI. For a local user, you can configure a password
and specify one or more authentication methods, including local authentication or a TACACS+ server
group.

5.4.1 Configuring authentication for local users

By default, there is a single local user configured on the SR Linux, admin. You can configure additional
local users.

Example:

The following example configures a password for the SR Linux admin user:

--{ * candidate shared default }--[  ]--
# system aaa authentication admin-user password NewPass1234

Example

The following example creates a local user called sruser and configures a password:

--{ * candidate shared default }--[  ]--
# system aaa authentication user srlinux password sr1l234

When the user configuration is displayed, the password is hashed; for example:

--{ * candidate shared default }--[  ]--
# info system aaa
    system {
        aaa {
            authentication {
                user srlinux {
                    password $ar2$KGSITqfJu5g=$iZZ6XKXtXOZOGMbeXO2ypg==
                }
            }
        }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

45

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Securing access

    }

Example

To change an existing user’s password, use the same command that created the user and configure the
new password; for example:

--{ * candidate shared default }--[  ]--
# system aaa authentication user srlinux password NewPasswordl234

Example

The following example specifies authentication methods. When a user attempts to log in, the user is
authenticated using local authentication first. If local authentication fails, the SR Linux tries the servers
in TACACS+ server group tacacs-all. If the user cannot be authenticated through either method, the
authentication attempt is rejected.

--{ * candidate shared default }--[  ]--
# info system aaa
 system {
     aaa {
         authentication {
            authentication-method [
                local
                tacacs-all
            ]
         }
     }
 }

5.5 Authorization using role-based access control

Authorization is performed through role-based access control. Users can be configured with a set of one or
more roles that indicate the privileges for which they are authorized in the system.

A role consists of one or more rules, which specify a schema path the role can have privileges for, and
a corresponding action, which can be read, write, or deny. After authentication, a user is authorized to
perform the specified action defined in the path for the role the user is assigned.

Role-based access control supports service authorization, which allows you to limit the actions a user is
authorized to perform to specific access types such as CLI and gNMI.

5.5.1 Role configuration

Roles consist of a set of rules that define a schema path-reference and a corresponding action. The path-
reference specifies system functions that are subject to authorization, and the action specifies the privilege
type for users assigned the role: read, write, or deny.

The path-reference is specified relative to the root level. For example, the path-reference ‟/” indicates all
CLI functions at the root level and below; the path-reference ‟/system” indicates all CLI functions at the
system level and below, and the path-reference ‟/system configuration” indicates all CLI functions at the
system configuration level and below.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

46

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Securing access

If no role is assigned to a user at login, the user has access to all CLI plugins, but no access to CLI
commands at any level. This is equivalent to a rule with / as the path-reference and deny as the action.

Up to 32 roles are supported; each role can have a list of up to 256 paths. The order of the path-references
in a role does not matter; the longest match is used when validating a command against a path-reference.

The syntax for the path-reference is SR Linux CLI format, with ‟/” representing the root. Wildcards and
ranges can be used with path-references, in the same way they can in CLI syntax.

Each entry within the path-reference should use double quotes, unless the command string is a single
word with no spaces. If the path itself includes quotes, use backslash characters to indicate the quotes. For
example, to specify the following in a path-reference:

a "b" and c "d"

You can configure the following for the path-reference:

path-reference "a \"b\"" "c \"d\""

5.5.1.1 Configuring a role

To configure a role, you define one or more rules that specify a path indicating the command string that is
subject to authorization, and a corresponding action such as read, write, or deny.

Example:

The following is an example of creating a role named testrole that contains two rules: one rule to
limit access to network-instance red, and another rule to give write access to the rest of the tree. A user
assigned this role upon authentication is able to configure everything in the system except network-
instance red.

First, define the role under the system aaa authorization context:

--{ * candidate shared default }--[  ]--
# info system aaa
    system {
        aaa {
            authorization {
                role testrole {
                }
            }
        }
    }

Then specify the rules under the system configuration role context:

--{ * candidate shared default }--[  ]--
# info system configuration
    system {
        configuration {
            role testrole {
                rule / {
                    action write
                }
                rule "network-instance red" {
                    action read
                }
            }
        }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

47

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Securing access

    }

Example

The following example configures a role named acl_app that allows a user to view the state of the
acl_mgr application, but no other information:

--{ * candidate shared default }--[  ]--
# info system aaa
    system {
        aaa {
            authorization {
                role acl_app {
                }
            }
        }
    }

--{ * candidate shared default }--[  ]--
# info system configuration
    system {
        configuration {
            role acl_app {
                rule system {
                    action deny
                }
                rule "system app-management application acl_mgr state" {
                    action read
                }
            }
        }
    }

When a user that is assigned the acl_app role attempts to read information from the system state
datastore, only the state of the acl_mgr application is displayed. For example:

--{ * candidate shared default }--[  ]--
# info from state system application acl_mgr
system {
    app-management {
        application acl_mgr {
            state running
        }
    }
}

5.5.2 Assigning roles to users

A user can be assigned one or more roles. The rules configured in the user's roles specify the commands
the user is authorized to issue.

Up to 32 roles can be assigned to a user. If a user has multiple roles assigned, all of the rules configured in
all of the roles apply to the user. If multiple roles reference the same path, the most specific rule is used.

For service authorization, the system merges all roles that have the service (CLI, gNMI, and so on) the
user has logged in with, and excludes any roles that omit the service.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

48

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Securing access

Example:

In the following example, the user srlinux is assigned the role testrole.

After the srlinux user is authenticated, the user is authorized to use the system according to the rules
configured in the role testrole. Using the example from Configuring a role, this would authorize the
srlinux user to configure everything in the system except for the network-instance red.

--{ * candidate shared default }--[  ]--
# info system aaa
    system {
        aaa {
            authentication {
                user srlinux {
                    role [
                        testrole
                    ]
                }
            }
        }
    }

5.5.3 Authorization using a TACACS+ server

You can configure the SR Linux to use a TACACS+ server to provide authorization for role-based access
control. When TACACS+ authorization is configured, the actions an authenticated user can perform
depend on the priv-lvl value configured for the user on a TACACS+ server. If priv-lvl-authorization is not
set to true, the authenticated user is authorized as an admin user.

TACACS+ authorization for SR Linux users works as follows:

1. After a user is authenticated, the SR Linux sends the TACACS+ server an authorization-request
message based on a shell (exec) session starting. This authorization-request is sent immediately
following user authentication, but before the shell is started.

2. The TACACS+ server returns an authorization-reply message that includes the priv-lvl value configured

for the user for shell access.

3. On the SR Linux, roles have been configured that map to a priv-lvl value.

4. The SR Linux allows the user to perform actions specified in roles with a priv-lvl value equal or lower to

the priv-lvl value returned by the TACACS+ server.

5.5.3.1 Configuring TACACS+ Authorization

To configure TACACS+ authorization for SR Linux users, you enable priv-lvl authorization for the TACACS
+ server group and configure roles that specify the priv-lvl mapping for each role subject to authorization
using a TACACS+ server.

Example:

The following configuration enables priv-lvl authorization for the tacacs-all server group:

--{ * candidate shared default }--[  ]--
# info system aaa server-group tacacs-all
    system {
        aaa {

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

49

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Securing access

            server-group tacacs-all {
                priv-lvl-authorization true
            }
        }
    }

Example

The following configuration specifies two roles, interface oper-state and network-instance
oper-state. The interface oper-state role grants read access for all interface oper-states, and the
network-instance oper-state role grants read access for all network-instance oper-states.

--{ * candidate shared default }--[  ]--
# info system configuration role *
    system {
        configuration {
            role "interface oper-state" {
                rule "interface * oper-state" {
                    action read
                }
            }
            role "network-instance oper-state" {
                rule "network-instance * oper-state" {
                    action read
                }
            }
        }

Example

The following configuration specifies the priv-lvl mapping for both roles.

In this example, when a user is authenticated, the SR Linux sends an authorization-request based on a
shell (exec) session starting. The TACACS+ server returns an authorization-reply that specifies the priv-lvl
value for the shell.

If the priv-lvl value returned by the TACACS+ server is 14, the user is assigned both roles; that is, read
access to all interface oper-states and all network-instance oper-states, but no access to anything else in
the system.

If the priv-lvl value returned by the TACACS+ server is 13, the user is assigned only the network-
instance oper-state role and can read the oper-state for network-instances, but has no access to
anything else in the system.

--{ * candidate shared default }--[  ]--
# info system aaa authorization
    system {
        aaa {
            authorization {
                role "interface oper-state" {
                    tacacs {
                        priv-lvl 14
                    }
                }
                role "network-instance oper-state" {
                    tacacs {
                        priv-lvl 13
                    }
                }
            }
        }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

50

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Securing access

    }

Example

The following example configures service authorization for a role that uses TACACS+ authorization. See
Configuring service authorization.

In this example, when a user is authenticated by a TACACS+ server in the server group tacacs-all, if
the TACACS server returns priv-lvl 15 for the user, then role_1 is assigned to the user.

Service authorization is configured for the role so that all services except gNMI are authorized for users
assigned this role. This means users assigned role_1 are authorized for the functionality defined in
the rules of role_1 if they connect using the CLI, JSON-RPC, or FTP, but are not authenticated if they
connect using gNMI.

--{ * candidate shared default }--[  ]--
# info system aaa authorization role role_1
    system {
        aaa {
            authorization {
                role role_1 {
                    services [
                        cli
                        json-rpc
                        ftp
                    ]
                    tacacs {
                        priv-lvl 15
                    }
                }
            }
        }
    }

When a user is assigned multiple roles, the user is authorized for all services specified in the roles they
are assigned, according to the rules defined in the roles. For example, if a user is assigned role_1, which
allows access to the system via CLI, and also assigned role_2, which allows access via gNMI, the user is
authorized to use the CLI to perform the functions defined in the rules of role_1, and is authorized to use
the gNMI interface for the functions defined in the rules of role_2.

5.5.4 Service authorization for local users

Service authorization allows you to block or allow access to a user depending on the interface they use
to connect to the device. You can use service authorization to restrict access to a controller, allowing it to
speak through programmatic interfaces, but without credentials that can be used by someone logged into
the CLI.

To configure service authorization, you assign roles to local users that authorize them to issue commands
using specified services, such as the CLI, gNMI, or JSON-RPC interfaces. For example, you can define
a role that grants read access to subinterface statistics, and limits access to that information to the gNMI
service. When you assign that role to a user, the user is allowed to read subinterface information via the
gNMI interface only.

The following interface types can be configured for service authorization:

• cli - access to the system via CLI

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

51

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Securing access

• gnmi - access to the system via gNMI

• json-rpc - access to the system via JSON-RPC

• ftp - access to the system via FTP

• p4rt - access to the system via P4Runtime RPCs

After a user is authenticated, the system checks whether the user is assigned a role that allows access
via the interface they used to connect to the device. For example, if a user connects using gNMI, the
system checks whether the user is assigned any roles that authorize access via the gNMI interface. If the
user is assigned a role that authorizes access via gNMI, the user receives access to the system via gNMI
according to the rules defined in the set of roles that includes gNMI. If the user connects via gNMI, but
is not assigned any role that authorizes access via gNMI, the authorization attempt is rejected and the
session is closed.

If a user is assigned multiple roles, the user is authorized for all services specified in the roles they are
assigned, according to the rules defined in the roles. For example, consider a user assigned role r1, which
allows access to the system via CLI, and also assigned role r2, which allows access via gNMI. The user is
authorized to use the CLI to perform the functions defined in the rules of role r1, and is authorized to use
the gNMI interface for the functions defined in the rules of role r2.

By default, a role has no services configured for authorization. When you configure a role, you must specify
the services that apply to the role. Users assigned the role are authorized to perform the functions defined
in the role using the specified services.

5.5.4.1 Configuring service authorization

To configure service authorization, you create a role that defines rules permitting or denying access to
system functionality, assign the role to one or more users, and specify the services over which users
assigned the role are authorized to perform the rules defined in the role.

Example:

The following example creates a role read-oper-state that allows reading subinterface oper-state but
nothing else:

--{ * candidate shared default }--[  ]--
# info system configuration role *
    system {
        configuration {
            role read-oper-state {
                rule / {
                    action deny
                }
                rule "interface * subinterface * oper-state" {
                    action read
                }
            }
        }
    }

Example

The following example creates a user gnmiuser that is assigned the read-oper-state role when
authenticated:

--{ * candidate shared default }--[  ]--

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

52

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Securing access

# info system aaa authentication
    system {
        aaa {
            authentication {
                authentication-method [
                    local
                ]
                user gnmiuser {
                    role [
                        read-oper-state
                    ]
                }
            }
        }
    }

Example

The following example configures service authorization so that users assigned the read-oper-state
role, such as gnmiuser, can perform the functionality defined in the role only if they have connected to the
system via gNMI. If the user connects via a different service, such as by logging into the CLI, the user is
not authorized for the functionality defined in the role.

--{ * candidate shared default }--[  ]--
# info system aaa authorization
    system {
        aaa {
            authorization {
                role read-oper-state {
                    services [
                        gnmi
                    ]
                }
            }
        }
    }

5.6 Accounting configuration

When accounting is enabled, the SR Linux device generates command accounting records as described in
Accounting.

The following is an example of accounting records generated by the SR Linux device:

Aug 7 22:34:09
127.0.0.1 bob ssh 172.17.0.1 start task_id=2 timezone=UTC service=shell priv-lvl=15 
cmd=tail -f /var/log/tac_plus.acct
Aug 7 22:34:09
127.0.0.1 bob ssh 172.17.0.1 stop task_id=2 timezone=UTC service=shell priv-lvl=15 
cmd=tail -f /var/log/tac_plus.acct
Aug 7 22:34:14
127.0.0.1 bob ssh 172.17.0.1 start task_id=5 timezone=UTC service=shell priv-lvl=15 
cmd=help
Aug 7 22:34:14
127.0.0.1 bob ssh 172.17.0.1 stop task_id=5 timezone=UTC service=shell priv-lvl=15 
cmd=help

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

53

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Securing access

5.6.1 Configuring accounting

The following example configures accounting records to be sent to the tacacs-all server group. The SR
Linux generates an accounting record when a command is started and when it is stopped.

Example:

--{ * candidate shared default }--[  ]--
# info system aaa
 system {
     aaa {
         accounting {
            accounting-method [
                tacacs-all
            ]
            event commands {
                record start-stop
            }
         }
     }
 }

5.7 Displaying user session information

To display information about users currently logged in to the SR Linux device, use the show system aaa
authentication session command.

Example:

# show system aaa authentication session
+----+-------+-------------+----------------+----------+-------+-------------+---------------------+
| ID | User  |   Service   | Authentication | Priv-lvl |  TTY  | Remote  |      Login time         |
|    | name  |    name     |     method     |          |       |  host   |                         |
+====+=======+=============+================+==========+=======+=========+=========================+
| 4  | bob   | srlinux-cli |    tacacs      |    15    | pts/1 | 2.1.0.2 | 2021-12-06T21:24:07.80Z |
| 11 | user* | srlinux-cli |    local       |          | pts/4 |         | 2021-12-07T04:06:06.93Z |
+----+-------+-------------+----------------+----------+-------+---------+-------------------------+

The asterisk (*) next to the username indicates the session from which the show system aaa
authentication session was invoked.

5.8 Disconnecting user sessions

To disconnect a user currently logged in to the SR Linux device, use the tools system disconnect
session-id <session-id> command and specify the session ID of the user. To list the session IDs of active
users, enter the show system aaa authentication session command.

Example:

# show system aaa authentication session
+----+-------+-------------+----------------+----------+-------+-------------+---------------------+
| ID | User  |   Service   | Authentication | Priv-lvl |  TTY  | Remote  |      Login time         |

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

54

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Securing access

|    | name  |    name     |     method     |          |       |  host   |                         |
+====+=======+=============+================+==========+=======+=========+=========================+
| 6  | bob   | srlinux-cli |    tacacs      |    15    | pts/1 | 2.1.0.2 | 2021-12-06T21:24:07.80Z |
| 11 | user* | srlinux-cli |    local       |          | pts/4 |         | 2021-12-07T04:06:06.93Z |
+----+-------+-------------+----------------+----------+-------+---------+-------------------------+

# tools system disconnect session-id 6
Terminating cli session 6 owned by user 'bob' logged from pts/1
/system/aaa/authentication/session[id=6]:
    Disconnecting aaa cli session(s): 6

5.9 Configuring idle-timeout for user sessions

You can configure the idle-timeout for user sessions, which disconnects a user session after a specified
period of inactivity. By default, user sessions are disconnected after 15 minutes of inactivity.

The idle-timeout setting applies to SR Linux users and remote users. It does not apply to Linux users or to
JSON-RPC or gNMI client sessions.

After a user session has been inactive for one-half of the idle-timeout period, a notification is displayed
indicating that the user will be logged out if the session remains idle for the remainder of the idle-timeout
period.

Example:

The following example configures the idle-timeout so that SR Linux user sessions and remote user
sessions are disconnected after 20 minutes of inactivity:

--{ * candidate shared default }--[  ]--
# info system aaa
 system {
     aaa {
         authentication {
            idle-timeout 20
            }
         }
     }
 }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

55

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Management servers

6 Management servers

You can configure the following management servers on the SR Linux:

• gNMI server – allows external gNMI clients to connect to the device and modify the configuration and

collect state information.

•

JSON-RPC server – allows you to issue JSON-formatted requests to the device to retrieve and set
configuration and state.

You can configure Transport Layer Security (TLS) profiles, which contain TLS settings that can be provided
to the gNMI and JSON-RPC management servers.

6.1 gNMI server

The SR Linux device can enable a gNMI server that allows external gNMI clients to connect to the device
and modify the configuration and collect state information.

When the gNMI server is enabled, the SR Linux gnmi_mgr application functions as a target for gNMI
clients. The gnmi_mgr application validates gNMI clients and passes Get, Set, and Subscribe RPCs to the
SR Linux mgmt_svr application via the gRPC interface. See the SR Linux System Management Guide for
details about the supported RPCs.

Configuration changes made by gNMI clients are made within a private candidate configuration, using a
snapshot of the current running configuration as a baseline for the private candidate. As with other types of
candidate configurations, the private candidate can operate in exclusive mode, which locks out other users
from concurrently modifying the private candidate configuration.

Sessions between gNMI clients and the SR Linux device must be encrypted using TLS. You can specify
TLS settings within a TLS profile, and apply the TLS profile when configuring a gNMI server within a
network-instance. When the gNMI server is enabled, gNMI clients connect and authenticate to the SR
Linux device using the settings specified in the TLS profile.

New connections between gNMI clients and the SR Linux device are mutually authenticated. By default,
the SR Linux device validates the X.509 certificate of the gNMI client, and the other way around; this
behavior can be disabled in the TLS profile. The SR Linux device, after validating the X.509 certificate of
the gNMI client, performs local authentication, if the use-authentication parameter is set to true. In this
case, the gNMI client is required to provide a username and password in the metadata of the Get, Set,
and Subscribe RPCs. The supplied username and password are authenticated by the SR Linux aaa_mgr
application.

See the SR Linux System Management Guide for examples of using the gnmi_cli, gnmi_get, and gnmi_set
open source gNMI clients to configure and retrieve state information about the SR Linux device.

6.1.1 Configuring a gNMI server

The SR Linux supports configuring a gNMI server under one or more network-instances. You can specify
limits for the number of simultaneous active gNMI client sessions, as well as the number of connection
attempts per minute by gNMI clients.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

56

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Management servers

For the network-instance where the gNMI server is running, you can specify the IP address and port for
gNMI client connections, as well as the TLS profile used for authenticating gNMI clients. See TLS profiles.

Example:

The following example shows a configuration that enables a gNMI server on the SR Linux device. The
gNMI server is configured so that gNMI clients can connect to the SR Linux via the mgmt network-instance
on port 50052. Connecting gNMI clients are authenticated using the settings specified in the TLS profile
tls-profile-1.

--{ * candidate shared default }--[  ]--
# info system gnmi-server
 system {
     gnmi-server {
         admin-state enable
         timeout 7200
         rate-limit 60
         session-limit 20
         network-instance mgmt {
             admin-state enable
             use-authentication true
             port 50052
             tls-profile tls-profile-1
             source-address [
                 ::
             ]
         }
     }
 }

6.2 JSON-RPC server

You can enable a JSON-RPC server on the SR Linux device, which allows you to issue JSON-formatted
requests to the device to retrieve and set configuration and state. You can use the JSON-RPC API to run
CLI commands and standard get and set methods. The SR Linux device returns responses in JSON-
format.

Configuration changes made using the JSON-RPC API are made within a private candidate configuration,
using a snapshot of the current running configuration as a baseline for the private candidate. As with other
types of candidate configurations, the private candidate can operate in exclusive mode, which locks out
other users from concurrently modifying the private candidate configuration.

When the JSON-RPC server is enabled, the application passes the requests to the SR Linux mgmt_svr
application via the gRPC interface.This JSON-RPC API uses HTTP and HTTPS for transport, and users
are authenticated with the aaa_mgr application. HTTPS requests can be authenticated using TLS, using
settings specified in a TLS profile. See TLS profiles.

See the SR Linux System Management Guide for examples of using the get method to retrieve state
information from the SR Linux, the set method to modify the SR Linux configuration, and the cli method to
enter SR Linux CLI commands.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

57

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Management servers

6.2.1 Configuring a JSON-RPC server

The SR Linux supports configuring a JSON-RPC server under one or more network-instances. You can
specify limits for the number of simultaneous active HTTP or HTTPS connections and the TCP port used
for HTTP or HTTPS connections. If the TCP port is in use when the JSON-RPC server attempts to bind to
it, the commit operation fails.

Example:

The following example shows a configuration that enables a JSON-RPC server within the mgmt network-
instance on the SR Linux device. The JSON-RPC server is configured so that HTTP requests are
accepted on TCP port 4000, and HTTPS requests are accepted on TCP port 443. HTTPS requests are
authenticated using the settings in the TLS profile tls-profile-1.

--{ * candidate shared default }--[  ]--
# info system json-rpc-server
 system {
     json-rpc-server {
         admin-state enable {
         network-instance mgmt {
             http {
                 admin-state enable
                 use-authentication true
                 session-limit 1
                 port 4000
             }
             https {
                 admin-state enable
                 use-authentication true
                 session-limit 1
                 port 443
                 tls-profile tls-profile-1
             source-address [
                 ::
             ]
             }
     }
 }

6.3 TLS profiles

Transport Layer Security (TLS) is a protocol for enabling applications or devices to exchange information.
The SR Linux supports configuring TLS settings in TLS profiles, which can be provided to applications
such as the gNMI server and the JSON-RPC server, so that clients connecting to the SR Linux device via
these applications are authenticated using the settings in the TLS profile.

6.3.1 Configuring a TLS profile

A TLS profile can specify whether authentication is performed for clients connecting to SR Linux
applications to which the profile is applied. Within a TLS profile, you can configure certificates, keys, and
ciphers to use when negotiating TLS connections with clients.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

58

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Management servers

Example:

--{ * candidate shared default }--[  ]--
# info system tls
 system {
     tls {
         server-profile tls-profile-1 {
                key $aes$4NAaR4Zz5skA=$3Pv773cUer0TaPNHqRQ==
                certificate "-----BEGIN CERTIFICATE REQUEST-----
MIIEUjCCAjoCAQAwDTELMAkGA1UEBhMCVVMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDxG7nZ
qw7EjHM6uBit7Bi1gO/PgQTD2OqJTOtFqEXcFzGcbeeFk903v7OTNws0h11A1pZGnT9fPXv/
hYmAcvOv4FZz99jrGZ8WiwJMpxG+wG3rNdCwEfc59cqFOu9k8pbxLZVYck+pVcjgUK9wLZMHtDVYADXp7I5h
NYMLdettpSSucXaZcWpTzD/xJtePa9dkQ75LGcl/
JMivhx+7EYsbBRlkoSeluMByGavxjefNPJFtvOUAPE7CvdMprntHA7op5FkSoqZcoTzA0V1BcaNtblU7j8DL
1UnsRk6Mi9M5Sz5McQDW8cn223pT9AceLCM27LY62rNEcpAZHNumPqG352+mdLqZ7sJmfwScB3EISj6YV+ni
sZ+K8woR7PD0oz3rsnYGjjtE3xf/
NwXNdioFaVF80nkhwbpoSYZFuwzigkBvsyeUQzmYe4ehC5eFezmWracItmsqzjsDqoJZa5y3ngAK72ag9wQN
2Lz3AHYvMlC3Gn4D2P/
oNH1ywL0DeSdEMxukQamSF8EiEvCu1cBkBhab3blVOp61c7IsaNHdW1k95cFpfNLT+1HoWJlkaIVI7gCTgPW
2UURy67lUBAl4rdpFnnkRLnJfKYgjScLWSw0ur17NOTinflAgx4k5AXZP8FpvW3S0KyqR0S8UHajcsYsRd7W
aIVOhFOeXUxYeGQIDAQABoAAwDQYJKoZIhvcNAQELBQADggIBAFdyqd7yGmbM9E12i4y7nwUvORg5nwr6b5Z
aCGnCl3h8bYerhS/QjNTahAJYKl+G2pYCOdfq435B8NNFdsEfBJ9Z8C6Vs/
kixlfFVGGZVaglxR9Vgs13Srht0aE4LgE2BiUwJe5szicGRr7M/OXCN/
yS2fH5qbuHyJHdP3UiEliNleuYLO+U0ALN0XXVrFJ+FF+eyoFNKGETl+tg2Ruevh7tuVgMLD6jFhZwkm7hkS
eoG4h22rMYQ0EEJc/rjYuwT/xZySOhIIwbpg/TdDtoQi7j4Cru0b5BibZkcfRxQDhzqIvAPi7U113i7qPq/
jiC2fqnRoxl2lVuPuwCyEhDnWHatBT/
oIPEpJfvg7+zvnGk3PHvlpH3G6A85oEWFa8tbCkCt9ca8exwJCmbNCEbBnWL/
tl75HOGNfTweqNxoggQNbLEG8mmxDu9t5e/
LSDyeDycJ0CE2f8kFh+E7RGw6xznyUtS9c0CasOi0kAeXZ9fm1JRrYlAR+ADYECvRYmQEOfgpio/
2+vjTmBU0rmTSZkoNY5Ijw+SYljCzgjc9JX9Rt+EpRqnYm3BFBCg0yzW2bLyKFOZSYzbuHr0NXpJY50V04An
/Glj6Cv/vjPE8wUTkUecRBwYuyezNBPY7m7AU6sd1hTMcL3sDTJ2pzEJT56wKcV9zjnoQyBmrwatPjpU----
-END CERTIFICATE REQUEST-----"
                authenticate-client true
                cipher-list [
                    aes128-sha256
                    des-cbc3-sha
                    camellia128-sha
                ]
         }
     }
 }

6.3.2 Generating a self-signed certificate

From the SR Linux CLI, you can create a self-signed certificate and key. By default, SHA256 with RSA
encryption are used for the signature algorithm. Private keys are not encrypted using DES/3, and are 4096
bits in length.

Example:

The following example generates a private key, followed by the self signed certificate:

# tools system tls generate-self-signed email info@nokia.com country us organization nokia
/system/tls:
-----BEGIN PRIVATE KEY-----
MIIJRAIBADANBgkqhkiG9w0BAQEFAASCCS4wggkqAgEAAoICAQC3Q7PnCWjevlFn
--snip--
1ecXRjvpRvIEDUWYqVOioMfCaWxJoTJUX6HgjIY0Z9ktfWiceX1Ka4e3ZxIpEC4p
SvzKsoCTqpQcIk5pCsALhznOO6ArtPc4
-----END PRIVATE KEY-----

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

59

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Management servers

-----BEGIN CERTIFICATE-----
MIIE/TCCAuWgAwIBAgIJAKzAUREbPIV1MA0GCSqGSIb3DQEBCwUAMBQxEjAQBgNV
--snip-
BTTcAiQnIIkdJ0niqE+ZcOneSgxP3dKEovWQ+Bh3ES2QLsqbDvBYjz4eBoDigaAZ
KDnK207h3hiKLAaxMbAQeWGiu2ZKoKKdd4QE6OphOw6T
-----END CERTIFICATE-----

This tools command example is equivalent to the following openssl command:

# openssl req -x509 -newkey rsa:4096 -days 365

6.3.3 Generating a certificate signing request

You can issue a CLI command that returns a private key and certificate signing request (CSR). This CSR
can be passed to a certificate authority (the same one that the client/server uses to validate certificates on
either side) for the certificate authority to sign the request; the CSR cannot be used as-is.

Example:

The following command returns the private key, followed by the CSR:

# tools system tls generate-csr email info@nokia.com country us organization nokia
/system/tls:
-----BEGIN PRIVATE KEY-----
MIIJRAIBADANBgkqhkiG9w0BAQEFAASCCS4wggkqAgEAAoICAQC3Q7PnCWjevlFn
--snip--
1ecXRjvpRvIEDUWYqVOioMfCaWxJoTJUX6HgjIY0Z9ktfWiceX1Ka4e3ZxIpEC4p
SvzKsoCTqpQcIk5pCsALhznOO6ArtPc4
-----END PRIVATE KEY-----
-----BEGIN CERTIFICATE REQUEST-----
MIIC5TCCAc0CAQAwgZ8xCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlh
vy3MjE7rJtmWTg0pTfiuU4BFoAzLhHRN1hl1mXuE2m6XJ8gvBPp2sN7SvieUCy/L
RVTs+/Fmcc4vMjx3t/0hAewIsd7DNe+kVQ==
-----END CERTIFICATE REQUEST-----

This tools command example is equivalent to the following openssl command:

# openssl req -newkey rsa:4096

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

60

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Logging

7 Logging

The SR Linux device implements logging via the standard Linux syslog libraries. The SR Linux device
uses rsyslog in the underlying Linux OS to filter logs and pass them on to remote servers or other specified
destinations.

The main configuration file for rsyslog is /etc/rsyslog.conf. The SR Linux installs a minimal version
of the /etc/rsyslog.conf file, and maintains an SR Linux-specific configuration file in the /etc/
rsyslog.d/ directory. Per-application logging configuration files are also kept in the /etc/rsyslog.d/
 directory; these files are named /etc/rsyslog.d/nn-app.conf.

You can modify the SR Linux logging configuration using the CLI, northbound API, or by editing the .conf
files manually. The SR Linux device overwrites any parts of the configuration that are owned by SR Linux,
and this may supersede any configuration done manually.

The SR Linux .conf files in /etc/rsyslog.d use standard rsyslog syntax for configuring filters and
actions within rules.

The SR Linux supports configuration of Linux facilities and SR Linux subsystems as sources for log
messages to filter. See the SR Linux Log Events Guide for properties and descriptions of the log messages
that can be generated by SR Linux subsystems.

Basic logging configuration consists of specifying a source for input log messages, filtering the log
messages, and specifying an output destination for the filtered log messages.

7.1 Input sources for log messages

The SR Linux supports using messages logged to Linux syslog facilities and messages generated by SR
Linux subsystems as input sources for log messages.

Table 2: Linux syslog facilities  describes the Linux syslog facilities that can be used as input sources for
log messages.

Table 2: Linux syslog facilities

Facility

Description

auth

Security/authorization messages that do not contain secret information

authpriv

Security/authorization messages that may contain secret information

cron

Messages generated by cron

daemon

Messages generated by system daemons without their own facility

ftp

kern

local0

Messages generated by an FTP daemon

Messages generated by the kernel

Local use 0

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

61

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Logging

Facility

Description

local1

local2

local3

local4

local5

local6

local7

lpr

mail

news

syslog

user

uucp

Local use 1

Local use 2

Local use 3

Local use 4

Local use 5

Local use 6

Local use 7

Messages generated by the line printer subsystem

Messages generated by a mail client or server

Messages generated by the network news subsystem

Messages generated internally by syslog

Messages generated by a user

Messages generated by the UUCP (UNIX-to-UNIX copy) subsystem

Table 3: SR Linux logging subsystem names lists the SR Linux subsystems that produce messages that
can serve as input sources for log messages. By default, SR Linux subsystem messages are logged to
Linux syslog facility local6.

Table 3: SR Linux logging subsystem names

Subsystem

Description

aaa

Messages generated by the aaa_mgr application (not including
accounting messages)

accounting

Accounting messages generated by the aaa_mgr application

acl

app

Messages generated through an ACL log action

Messages generated by the aaa_mgr application

arpnd

Messages generated by the arp_nd_mgr application

bfd

bgp

Messages generated by the bfd_mgr application

Messages generated by the bgp_mgr application

chassis

Messages generated by the chassis_mgr application

fib

Messages generated by the fib_mgr application

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

62

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Logging

Subsystem

Description

gnmi

json

linux

lldp

mgmt

mpls

netinst

policy

sdk

Messages generated by the gnmi_server application

Messages generated by the json_rpc_server application

Messages generated by the linux_mgr application

Messages generated by the lldp_mgr application

Messages generated by the mgmt_svr application

Messages generated by the mpls_mgr application

Messages generated by the net_inst_mgr application

Messages generated by the policy_mgr application

Messages generated by the sdk_mgr application

staticroute

Messages generated by the static_route_mgr application

xdp

Messages generated by the xdp_mgr application

7.2 Filters for log messages

You can configure filters to target specific messages or groups of log messages captured within the input
message source.

A filter can specify the set of messages generated by a Linux facility at a specified priority; for example,
messages generated by the kernel that have a priority of warning or higher, or mail facility messages that
have a priority of critical.

Filtering can be done for messages generated by a specific SR Linux subsystem; for example, messages
generated by the aaa_mgr application, or messages generated by the chassis_mgr application. SR Linux
subsystem messages go to a specified Linux facility (by default, local6), and you can create filters for
subsystem-specific messages from this facility.

Table 4: Logging priorities  describes the logging priorities in order of severity.

Table 4: Logging priorities

Code

Priority name

Description

0

1

2

3

4

emergency

System is unusable

alert

critical

error

Action must be taken immediately

Critical conditions

Error conditions

warning

Warning conditions

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

63

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Logging

Code

Priority name

Description

5

6

7

notice

Normal but significant conditions

informational

Informational messages

debug

Debug-level messages

7.3 Output destinations for log messages

You can set the action that the SR Linux takes for input messages that meet the criteria specified in a filter.
This can include sending the messages to a destination such as a log file, the console, or a remote host.

For example, you can configure the SR Linux to send messages generated by the kernel that have priority
warning to a file called /var/log/srlinux/file/kernel-warning.

Messages generated by an SR Linux subsystem, such as the bgp_mgr or gnmi_server application, can be
sent to specified destinations.

Actions for messages matching a filter can include the following:

• Send the messages to a specified file in the /var/log/srlinux/file/ directory.

• Send the messages to a buffer. A buffer is similar to a file, but uses memory as storage and is not

persistent across system reboots. Messages sent to a buffer are stored in the /var/log/srlinux/
buffer/ directory.

• Send the messages to the console; that is, the Linux device /dev/console, which may be assigned to

a serial device in hardware.

• Send the messages to one or more remote servers. You can specify a network-instance where rsyslogd

is run and which serves as the source for the messages.

7.4 Defining filters

Filters target specific messages or groups of log messages within the input message source. Filter criteria
for log messages can include the following:

• Specific text within a message

• Prefix text at the beginning of a message

• Linux facility that generated the message

• Regular expression matching text within the message

• Syslog tag of the message

Example:

The following example shows a configuration that creates a filter that matches messages from the Linux
facility kern that have a priority of warning or higher. See Table 4: Logging priorities  for a list of logging
priorities.

--{ * candidate shared default }--[  ]--
# info system logging

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

64

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Logging

 system {
     logging {
         filter f1 {
                facility kern {
                    priority {
                        match-above warning [
                    }
                }
         }
     }
 }

Example:

The following example creates a filter that matches messages from the Linux facility local6 (where SR
Linux subsystem messages are logged by default) that have a priority of informational or higher and
contain the text accounting. This filter can be used to match messages from the SR Linux accounting
subsystem.

--{ * candidate shared default }--[  ]--
# info system logging
 system {
     logging {
         filter f2 {
                contains accounting {
                facility local6 {
                    priority {
                        match-above informational [
                    }
                }
         }
     }
 }

7.5 Logging destination configuration

You can configure the SR Linux to send logging information to the following destinations:

• A log file

• Memory buffer storage

• The console (/dev/console)

• One or more remote servers

7.5.1 Specifying a log file destination

The SR Linux can send log messages to a specified log file. By default, the log file resides in the /var/
log/srlinux/file directory. You can specify the retention policy for the file, including the maximum size
(default 10 Mb), as well as the number of files to keep in the rotation (default 4 files).

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

65

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Logging

Example:

The following example uses messages from Linux facility cron as input, filters the messages for those
that have critical priority, and sends the filtered messages to the file /var/log/srlinux/file/cron-
critical:

--{ * candidate shared default }--[  ]--
# info system logging
 system {
     logging {
         file cron-critical {
                facility cron {
                    priority {
                        match-exact [
                            critical
                        ]
                    }
                }
         }
     }
 }

Example

The following example sends messages matching criteria specified in filter f1 to the file /var/log/
srlinux/file/f1-match:

--{ * candidate shared default }--[  ]--
# info system logging
 system {
     logging {
         file f1-match {
                filter [
                    f1
                ]
         }
     }
 }

Example

The following example uses messages generated by the SR Linux AAA subsystem (that is, messages
generated by the aaa_mgr application, but not including accounting messages) as input. The messages
are filtered for those that have warning or informational priority, and the filtered messages are sent to the
file /var/log/srlinux/file/aaa-warn-info.

--{ * candidate shared default }--[  ]--
# info system logging
 system {
     logging {
         file aaa-warn-info {
                subsystem aaa {
                    priority {
                        match-exact [
                            warning
                            informational
                        ]
                    }
                }
         }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

66

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Logging

     }
 }

7.5.2 Specifying a buffer destination

The SR Linux can send log messages to a buffer. A buffer is similar to a file, except that a buffer uses
memory as storage and is not persistent across system reboots.

When the SR Linux device boots, it creates a non-swappable tmpfs virtual filesystem at /var/log/
srlinux/buffer. This tmpfs filesystem has a fixed size of 512 Mb, which is reserved for buffer usage.

When a buffer is created through a commit transaction, the SR Linux verifies that there is enough buffer
space available to contain all configured buffers based on their retention policies. If sufficient space is not
available, the commit transaction fails.

Example:

The following example sends messages matching criteria specified in filter f1 to the buffer /var/log/
srlinux/buffer/f1-match. A retention policy is specified so that when the buffer reaches 5,000,000
bytes, messages are written to a new buffer. After five buffers are filled, the oldest one is overwritten.

--{ * candidate shared default }--[  ]--
# info system logging
 system {
     logging {
         buffer f1-match {
                rotate 5
                size 5000000
                filter [
                    f1
                ]
         }
     }
 }

7.5.3 Specifying the console as destination

You can specify the console as a destination for log messages. The console refers to Linux device /dev/
console, The console may be assigned to a serial device in hardware.

Example:

The following example uses messages generated by the SR Linux accounting subsystem as input, filters
the messages for those that have informational priority or higher, and sends the filtered messages to /
dev/console:

--{ * candidate shared default }--[  ]--
# info system logging
 system {
     logging {
         console {
                subsystem accounting {
                    priority {
                        match-above informational
                    }
                }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

67

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Logging

         }
     }
 }

7.5.4 Specifying a remote server destination

The SR Linux can send log messages to one or more remote servers. You can specify the network-
instance that the SR Linux uses to contact the remote servers. The rsyslogd process is run within the
specified network-instance.

Example:

The following example uses messages generated by the SR Linux BGP subsystem (that is, messages
generated by the bgp_mgr application) as input, filters the messages for those that have alert priority or
higher, and sends the filtered messages to a remote server. The messages are sourced from the mgmt
network-instance.

--{ * candidate shared default }--[  ]--
# info system logging
 system {
     logging {
         network-instance mgmt
         remote-server 1.1.2.2 {
                subsystem bgp {
                    priority {
                        match-above alert
                    }
                }
            }
        }
    }
 }

7.6 Specifying a Linux syslog facility for SR Linux subsystem messages

All of the messages generated by SR Linux subsystems (see Table 3: SR Linux logging subsystem
names) are logged to the same Linux syslog facility. This allows you to filter messages from all SR Linux
subsystems by capturing logs from this facility.

By default, SR Linux subsystem messages are logged to the Linux syslog facility local6. You can optionally
specify a different syslog facility. See Table 2: Linux syslog facilities  for the syslog facilities.

Example:

The following example changes the Linux syslog facility where messages generated by SR Linux
subsystems are logged from the default of local6 to local7:

--{ * candidate shared default }--[  ]--
# info system logging
 system {
     logging {
         subsystem-facility local7
     }
 }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

68

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

8 Interfaces

On the SR Linux, an interface is any physical or logical port through which packets can be sent to or
received from other devices. The SR Linux supports the following interface types:

• Loopback

A loopback interface is a virtual interface that is always up, providing a stable source or destination
from which packets can always be originated or received. The SR Linux supports up to 256 loopback
interfaces system-wide, across all network-instances. Loopback interfaces are named loN, where N is
0 to 255.

• System

The system interface is a type of loopback interface that has characteristics that do not apply to regular
loopback interfaces:

– The system interface can be bound to the default network-instance only.

– The system interface does not support multiple IPv4 addresses or multiple IPv6 addresses.

– The system interface cannot be administratively disabled. Once configured, it is always up.

The SR Linux supports a single system interface named system0. When the system interface is
bound to the default network-instance, and an IPv4 address is configured for it, the IPv4 address is the
default local address for multi-hop BGP sessions to IPv4 neighbors established by the default network-
instance, and it is the default IPv4 source address for IPv4 VXLAN tunnels established by the default
network-instance. The same functionality applies with respect to IPv6 addresses / IPv6 BGP neighbors /
IPv6 VXLAN tunnels.

• Network

Network interfaces carry transit traffic, as well as originate and terminate control plane traffic and in-
band management traffic.

The physical ports in line cards installed in the SR Linux are network interfaces. A typical line card has
a number of front-panel cages, each accepting a pluggable transceiver. Each transceiver may support a
single channel or multiple channels, supporting one Ethernet port or multiple Ethernet ports, depending
on the transceiver type and its breakout options.

In the SR Linux CLI, each network interface has a name that indicates its type and its location in
the chassis. The location is specified with a combination of slot number and port number, using the
following formats:

ethernet-slot/port

For example, interface ethernet-2/1 refers to the line card in slot 2 of the SR Linux chassis, and port
1 on that line card.

• Management

Management interfaces are used for out-of-band management traffic. The SR Linux supports a single
management interface named mgmt0.

The mgmt0 interface supports the same functionality and defaults as a network interface, except for the
following:

– Packets sent and received on the mgmt0 interface are processed completely in software.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

69

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

– The mgmt0 interface does not support multiple output queues, so there is no output traffic

differentiation based on forwarding class.

– The mgmt0 interface does not support pluggable optics. It is a fixed 10/100/1000-BaseT copper port.

•

Integrated routing and bridging (IRB)

IRB interfaces enable inter-subnet forwarding. Network instances of type mac-vrf are associated with a
network instance of type ip-vrf via an IRB interface.

IRB interfaces are named irbN, where N is 0 to 255. See IRB interfaces.

On the SR Linux, each loopback, network, management, and IRB interface can be subdivided into one or
more subinterfaces. See Subinterfaces.

8.1 Linux interface naming conventions

Every type of SR Linux interface has an underlying interface in the Linux OS. These interfaces have names
that adhere to Linux restrictions (maximum 15 characters and no slashes). The Linux interface name
formats are as follows:

• Loopback interfaces: loN, where N is 0 to 255; for example, lo0

• Network interfaces: eslot-port-subinterface; for example, e4-2-1

• Management interface: mgmt0

• System interface: system0

• LAG interface: lagN

•

IRB interface: irbN

8.2 Basic interface configuration

The following example shows a configuration for interface basic parameters, including administratively
enabling the interface, specifying a description, and setting the MTU. The settings apply to any
subinterfaces on the port, unless overridden in the subinterface configuration.

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/2
 interface ethernet-1/2
    description Sample_interface_config
    admin-state enable
    mtu 1500

8.3 Subinterfaces

On the SR Linux, each loopback, network, management, and IRB interface can be subdivided into one or
more subinterfaces. A subinterface is a logical channel within its parent interface.

Traffic belonging to one subinterface can be distinguished from traffic belonging to other subinterfaces of
the same port using encapsulation methods such as 802.1Q VLAN tags.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

70

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

While each port can be considered a shared resource of the router that is usable by all network-instances,
a subinterface can only be associated with one network-instance at a time. To move a subinterface
from one network-instance to another, you must disassociate it from the first network-instance before
associating it with the second network-instance. See Network-instances.

You can configure ACL policies to filter IPv4 and IPv6 packets entering or leaving a subinterface. See
Access control lists.

The SR Linux supports policies for assigning traffic on a subinterface to forwarding classes or remarking
traffic at egress before it leaves the router. DSCP classifier policies map incoming packets to the
appropriate forwarding classes, and DSCP rewrite-rule policies mark outgoing packets with an appropriate
DSCP value based on the forwarding class.

8.3.1 Routed and bridged subinterfaces

SR Linux subinterfaces can be specified as type routed or bridged:

• Routed subinterfaces can be assigned to a network-instance of type mgmt, default, or ip-vrf.

• Bridged subinterfaces can be assigned to a network-instance of type mac-vrf.

Routed subinterfaces allow for configuration of IPv4 and IPv6 settings, and bridged subinterfaces allow for
configuration of bridge table and VLAN ingress/egress mapping.

8.3.2 Subinterface naming conventions

The CLI name of a subinterface is the name of its parent interface followed by a dot (.) and an index
number that is unique within the scope of the parent interface. For example, the subinterface named
ethernet-2/1.0 is a subinterface of ethernet-2/1, and it has index number 0.

• Each loopback interface (loN) can only have one subinterface, and the index number can be in the

range 0 to 255.

• Each network interface (ethernet-slot/port) where the vlan-tagging parameter is set to false can

have one subinterface, and the index number can be in the range 0 to 9999.

• Each network interface where the vlan-tagging parameter is set to true can have up to 4096

subinterfaces (up ro 1024 of type routed and 3072 of type bridged) with each subinterface assigned a
unique index number in the range 0 to 9999.

• The management and system interfaces (mgmt0 and system0) can only have one subinterface, with

an index number of 0.

The Linux name of a subinterface adheres to Linux restrictions (maximum 15 characters and no slashes).
For example, the subinterface named ethernet-2/1.0 has the Linux name e2-1.0.

8.3.3 Basic subinterface configuration

For IPv4 packets to be sourced from a subinterface, the IPv4 address family must be enabled on the
subinterface and the subinterface must be configured with an IPv4 address and prefix length that indicates
the other IPv4 hosts reachable on the same subnet.

A subinterface can have up to 64 IPv4 prefixes assigned to it. One or more of these can be optionally
configured as a primary candidate. Within the set of IPv4 prefixes configured as primary candidates, the

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

71

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

lowest IPv4 address that does not fail duplicate address detection is selected as the primary address for
the subinterface. The primary address is used by upper layer protocols that need to choose only one IPv4
address from which to source their messages, as well as for information about this interface displayed
with the info from state command. If there is no suitable address in the set of IPv4 prefixes configured
as primary candidates (or if no IPv4 prefix is configured as primary), a selection is made from the IPv4
prefixes not configured as primary candidates.

For IPv6 packets to be sourced from a subinterface, the IPv6 address family must be enabled on the
subinterface, which must be configured with a global unicast IPv6 address and prefix length. The address
can be configured statically or obtained from a DHCP server.

A subinterface can have up to 16 global unicast IPv6 addresses and prefixes assigned to it. One or more
of these can be optionally configured as a primary candidate. Within the set of IPv6 prefixes configured as
primary candidates, the lowest IPv6 address that does not fail duplicate address detection is selected as
the primary address for the subinterface. The primary address is used by upper layer protocols that need
to choose only one IPv6 address from which to source their messages, as well as for information about
this interface displayed with the info from state command. If there is no suitable address in the set of
IPv6 prefixes configured as primary candidates (or if no IPv6 prefix is configured as primary), a selection is
made from the IPv6 prefixes not configured as primary candidates.

The following example shows basic parameters for a subinterface configuration, including IPv4 and IPv6
addresses and prefix lengths.

The configuration for subinterface 1 administratively enables the subinterface, specifies an ACL policy for
input IPv4 traffic, and specifies a DSCP classifier policy that assigns input IPv4 traffic to a queue based on
the 6-bit DSCP value in the IP header.

The configuration for subinterface 2 administratively enables the subinterface, and configures multiple
IPv4 and IPv6 addresses and prefix lengths. The primary IPv4 address for the subinterface is selected
from among the set of IPv4 prefixes configured as primary candidates; the selected IPv4 address is the
numerically lowest address that does not fail duplicate address detection. The global unicast IPv6 address
for the subinterface is selected from the IPv6 prefix configured as primary. The selected global unicast IPv6
address is the numerically lowest address that does not fail duplicate address detection.

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/2
 interface ethernet-1/2
    description Sample_interface_config
    admin-state enable
    mtu 1500
    subinterface 1 {
        admin-state enable
        ipv4 {
            dhcp-client true {
            }
        }
        ipv6 {
            address 2001:1::192:168:12:1/126 {
            }
        }
        acl {
            input {
                ipv4-filter 101
            }
        }
        qos {
            input {
                classifiers {
                    ipv4-dscp 1

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

72

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

                }
            }
        }
    }
    subinterface 2 {
        admin-state enable
        ipv4 {
            address 192.168.12.1/30 {
                primary
            }
            address 192.168.12.2/30 {
                primary
            }
            address 192.168.12.2/30 {
            }
        }
        ipv6 {
            address 2001:1::192:168:12:2/126 {
                primary
            }
            address 2001:1::192:168:12:3/126 {
            }
        }
    }

8.3.4 Subinterface VLAN configuration

When the vlan-tagging parameter is set to true for a network interface, the interface can accept
ethertype 0x8100 frames with one or more VLAN tags. The interface can be configured with up to 4096
subinterfaces, each with a separate index number.

The following example enables VLAN tagging for an interface and configures two subinterfaces. Single-
tagged packets received on subinterface ethernet-2/1.1 are encapsulated with VLAN ID 101.

--{ * candidate shared default }--[  ]--
# info interface ethernet-2/1
 interface ethernet-2/1
    admin-state enable
    vlan-tagging true
    subinterface 1 {
        admin-state enable
        ipv4 {
            dhcp-client true {
            }
        }
    }
    subinterface 2 {
        admin-state enable
        ipv4 {
            dhcp-client true {
            }
        }
        vlan {
            encap {
                single-tagged {
                    vlan-id 101
                }
            }
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

73

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

8.3.5 VLAN tag TPID configuration

The 802.1Q VLAN Tag Protocol Identifier (TPID) in the VLAN tag of an Ethernet frame indicates the
protocol type of the VLAN tag. This feature allows you to configure the VLAN tag TPID that is used to
classify frames as Dot1q on single-tagged interfaces or to push at egress; by default, the value of the
VLAN tag TPID is 0x8100.

You can configure the following TPID values for an interface:

• TPID_0X8100

Default value typically used to identify 802.1Q single-tagged frames.

• TPID_0X88A8

Typical TPID value for 802.1Q provider bridging or QinQ S-tags.

• TPID_0X9100

Alternate TPID value for QinQ tags.

• TPID_0X9200

Alternate TPID value for QinQ tags.

• TPID_ANY

Wildcard that matches any of the generally used TPID values for single- or multi-tagged VLANs. This
value is equivalent to matching any of TPID_0X8100, TPID_0X88A8, TPID_0X9100, or TPID_
0x9200 at ingress. At egress, if a tag needs to be pushed and TPID_ANY is configured, the default
TPID value is used.

Note:

• This feature does not change the behavior of subinterfaces of type untagged or any, nor

does it change the behavior of interfaces configured with vlan-tagging false.

• On a Dot1q interface, if the configured TPID is (for example) TPID_0X88A8, the service-
delimiting tags have TPID value 0x88a8, so frames received with that TPID may match a
subinterface if they come with the appropriate VLAN ID. Frames with any other TPID value
only match untagged interfaces or tagged interfaces with VLAN ID any or untagged.

• Only one TPID value can be configured per interface.

• The TPID pushed at egress is one of the following:

– The configured TPID, if SR Linux is pushing a service-delimiting tag and the configured

TPID is different from TPID_ANY.

– The default TPID of 0x8100, if SR Linux is pushing a service-delimiting tag and the

configured TPID is TPID_0X8100 or TPID_ANY.

• This feature is supported on all interfaces that support VLAN tagging (that is, all interfaces

except for loopback, system, management, and IRB).

• For CPU injected packets, the configured interface TPID is used in injected unicast and

multicast frames (in the context of the MAC-VRF flood group), so the configured TPID appears
in CPM-outgoing Ethernet frames.

• When the TPID is configured on a LAG interface, the configuration is propagated to all LAG

members.

• This feature is not supported on interfaces configured in breakout mode.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

74

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

8.3.5.1 Configuring the VLAN tag TPID for an interface

The following example configures the TPID_ANY wildcard for an interface. At ingress, this configuration
matches TPID_0X8100, TPID_0X88A8, TPID_0X9100, or TPID_0x9200. SR Linux pushes the default
TPID of 0x8100 to egress frames.

Example:

--{ candidate shared default }--[  ]--
# info interface ethernet-1/1
    interface ethernet-1/1 {
        vlan-tagging true
        tpid TPID_ANY
        subinterface 1 {
            vlan {
                encap {
                    single-tagged {
                        vlan-id 101
                    }
                }
            }
        }
    }

8.3.5.2 Displaying the VLAN tag TPID

Use the show interface detail command to display the VLAN tag TPID for an interface.

Example:

--{ candidate shared default }--[  ]--
# show interface ethernet-1/12 detail 
==========================================================================
Interface: ethernet-1/12
--------------------------------------------------------------------------
  Description     : dut2
  Oper state      : up
  Down reason     : N/A
  Last change     : 47m6s ago, 1 flaps since last clear
  Speed           : 100G
  Flow control    : Rx is disabled, Tx is disabled
  MTU             : 9232
  VLAN tagging    : true
  VLAN TPID       : 0x8100
  Queues          : 8 output queues supported, 1 used since the last clear
  MAC address     : 00:01:02:FF:00:0C
  Last stats clear: 47m6s ago
  Breakout mode   : false

8.3.6 Bridged subinterface configuration

Bridged subinterfaces are associated with a mac-vrf network-instance. On mac-vrf network instances,
traffic can be classified based on VLAN tagging. Interfaces where VLAN tagging is set to false or true can
be used with mac-vrf network instances.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

75

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

A default subinterface can be specified, which captures untagged and non-explicitly configured VLAN-
tagged frames in tagged subinterfaces.

Within a tagged interface, a default subinterface (vlan-id value is set to any) and an untagged subinterface
can be configured. This kind of configuration behaves as follows:

• The vlan-id any subinterface captures untagged and non-explicitly configured VLAN-tagged frames.

• The untagged subinterface captures untagged and packets with tag0 as outermost tag.

When vlan-id any and untagged subinterfaces are configured on the same tagged interface, packets for
unconfigured VLANs go to the vlan-id any subinterface, and tag0/untagged packets go to the untagged
subinterface.

The vlan-id value can be configured as a specific valid number or with the keyword any, which means any
frame that does not hit the vlan-id configured in other subinterfaces of the same interface is classified in
this subinterface.

In the following example, the vlan encap untagged setting is enabled for subinterface 1. This setting
allows untagged frames to be captured on tagged interfaces.

For subinterface 2, the vlan encap single-tagged vlan-id any setting allows non-configured
VLAN IDs and untagged traffic to be classified to this subinterface.

With the vlan encap untagged setting on one subinterface, and the vlan encap single-tagged
vlan-id any setting on the other subinterface, traffic enters the appropriate subinterface; that is, traffic
for unconfigured VLANs goes to subinterface 2, and tag0/untagged traffic goes to subinterface 1.

--{ candidate shared default }--[  ]--
# info interface ethernet-1/2
 interface ethernet-1/2
  vlan-tagging true
  subinterface 1 {
    type bridged
    vlan {
      encap {
        untagged
             }
         }
  subinterface 2 {
    type bridged
    vlan {
      encap {
        single-tagged {
          vlan-id any
      } 

8.4 IRB interfaces

Integrated routing and bridging (IRB) interfaces enable inter-subnet forwarding. Network instances of type
mac-vrf are associated with a network instance of type ip-vrf via an IRB interface.

On SR Linux, IRB interfaces are named irbN, where N is 0 to 255. Up to 4095 subinterfaces can be
defined under an IRB interface. An ip-vrf network instance can have multiple IRB subinterfaces, while a
mac-vrf network instance can refer to only one IRB subinterface.

IRB subinterfaces are type routed and cannot be configured as any other type.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

76

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

IRB subinterfaces operate in the same way as other routed subinterfaces, including support for the
following:

•

IPv4 and IPv6 ACLs

• DSCP based QoS (input and output classifiers and rewrite rules)

• Static routes and BGP (IPv4 and IPv6 families)

•

IP MTU (with the same range of valid values as Ethernet subinterfaces)

• All settings in the subinterface/ipv4 and subinterface/ipv6 containers. For IPv6, the IRB subinterface

also gets an IPv6 link local address

• BFD

• Subinterface statistics

IRB interfaces do not support sFlow or VLAN tagging.

8.4.1 IRB interface configuration

The following example configures an IRB interface. The IRB interface is operationally up when its admin-
state is enabled, and its IRB subinterfaces are operationally up when associated with mac-vrf and ip-vrf
network instances. At least one IPv4 or IPv6 address must be configured for the IRB subinterface to be
operationally up.

--{ candidate shared default }--[  ]--
# info interface irb1
 interface irb1 {
        description IRB_Interface
        admin-state enable
        subinterface 1 {
            admin-state enable
            ipv4 {
                address 172.16.1.1/24 {
                }
            }
        }
    }

8.5 Displaying interface statistics

To display statistics for a specific interface, use the info from state command in candidate or running
mode, or the info command in state mode.

Example:

--{ candidate shared default }--[  ]--
# info from state interface ethernet-1/1
    interface ethernet-1/1 {
        admin-state enable
        mtu 9232
        loopback-mode false
        ifindex 54
        oper-state down
        oper-down-reason lower-layer-down
        last-change 2020-06-04T15:06:35.920Z

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

77

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

        vlan-tagging false
        statistics {
            in-octets 0
            in-unicast-packets 0
            in-broadcast-packets 0
            in-multicast-packets 0
            in-error-packets 0
            in-fcs-error-packets 0
            out-octets 0
            out-unicast-packets 0
            out-broadcast-packets 0
            out-multicast-packets 0
            out-error-packets 0
            carrier-transitions 0
        }
        traffic-rate {
            in-bps 0
            out-bps 0
        }
        transceiver {
            admin-state enable
            tx-laser true
            oper-state up
            ddm-events false
            forward-error-correction disabled
            form-factor QSFP28
            ethernet-pmd 100GBASE-SR4
            connector-type MPO-1x12
            vendor "AVAGO           "
           vendor-part-number "AFBR-89CDDZ-AL1 "
            vendor-revision 01
            serial-number "AF1937GN050     "
            date-code "190910  "
            fault-condition false
            temperature {
                latest-value 32
            }
            voltage {
                latest-value 3.2809
            }
            channel 1 {
                wavelength 850.00
                input-power {
                    latest-value -33.98
                }
                output-power {
                    latest-value 0.26
                }
                laser-bias-current {
                    latest-value 7.494
                }
            }
            channel 2 {
                wavelength 850.00
                input-power {
                    latest-value -40.00
                }
                output-power {
                    latest-value 0.05
                }
                laser-bias-current {
                    latest-value 7.494
                }
            }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

78

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

            channel 3 {
                wavelength 850.00
                input-power {
                    latest-value -23.28
                }
                output-power {
                    latest-value 0.02
                }
                laser-bias-current {
                    latest-value 7.494
                }
            }
            channel 4 {
                wavelength 850.00
                input-power {
                    latest-value -40.00
                }
                output-power {
                    latest-value 0.24
                }
                laser-bias-current {
                    latest-value 7.494
                }
            }
        }
        ethernet {
            port-speed 100G
            hw-mac-address 68:AB:09:A2:71:B0
            flow-control {
                receive false
            }
            statistics {
                in-mac-pause-frames 0
                in-oversize-frames 0
                in-jabber-frames 0
                in-fragment-frames 0
                in-crc-error-frames 0
                out-mac-pause-frames 0
                in-64b-frames 0
                in-65b-to-127b-frames 0
                in-128b-to-255b-frames 0
                in-256b-to-511b-frames 0
                in-512b-to-1023b-frames 0
                in-1024b-to-1518b-frames 0
                in-1519b-or-longer-frames 0
                out-64b-frames 0
                out-65b-to-127b-frames 0
                out-128b-to-255b-frames 0
                out-256b-to-511b-frames 0
                out-512b-to-1023b-frames 0
                out-1024b-to-1518b-frames 0
                out-1519b-or-longer-frames 0
            }
        }
        sflow {
            admin-state enable
        }
        qos {
            output {
                unicast-queue 0 {
                    queue-parameters {
                        peak-rate-bps 101370000000
                        strict-priority true
                    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

79

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

                }
                unicast-queue 1 {
                    queue-parameters {
                        peak-rate-bps 101370000000
                        strict-priority true
                    }
                }
                unicast-queue 2 {
                    queue-parameters {
                        peak-rate-bps 101370000000
                        strict-priority true
                    }
                }
                unicast-queue 3 {
                    queue-parameters {
                        peak-rate-bps 101370000000
                        strict-priority true
                    }
                }
                unicast-queue 4 {
                    queue-parameters {
                        peak-rate-bps 101370000000
                        strict-priority true
                    }
                }
                unicast-queue 5 {
                    queue-parameters {
                        peak-rate-bps 101370000000
                        strict-priority true
                    }
                }
                unicast-queue 6 {
                    queue-parameters {
                        peak-rate-bps 101370000000
                        strict-priority true
                    }
                }
                unicast-queue 7 {
                    queue-parameters {
                        peak-rate-bps 101370000000
                        strict-priority true
                    }
                }
            }
        }
        queue-statistics {
            unicast-queue 0 {
                virtual-output-queue 1 {
                }
                virtual-output-queue 2 {
                }
                virtual-output-queue 3 {
                }
                virtual-output-queue 4 {
                }
            }
            unicast-queue 1 {
                virtual-output-queue 1 {
                }
                virtual-output-queue 2 {
                }
                virtual-output-queue 3 {
                }
                virtual-output-queue 4 {

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

80

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

                }
            }
            unicast-queue 2 {
                virtual-output-queue 1 {
                }
                virtual-output-queue 2 {
                }
                virtual-output-queue 3 {
                }
                virtual-output-queue 4 {
                }
            }
            unicast-queue 3 {
                virtual-output-queue 1 {
                }
                virtual-output-queue 2 {
                }
                virtual-output-queue 3 {
                }
                virtual-output-queue 4 {
                }
            }
            unicast-queue 4 {
                virtual-output-queue 1 {
                }
                virtual-output-queue 2 {
                }
                virtual-output-queue 3 {
                }
                virtual-output-queue 4 {
                }
            }
            unicast-queue 5 {
                virtual-output-queue 1 {
                }
                virtual-output-queue 2 {
                }
                virtual-output-queue 3 {
                }
                virtual-output-queue 4 {
                }
            }
            unicast-queue 6 {
                virtual-output-queue 1 {
                }
                virtual-output-queue 2 {
                }
                virtual-output-queue 3 {
                }
                virtual-output-queue 4 {
                }
            }
            unicast-queue 7 {
                virtual-output-queue 1 {
                }
                virtual-output-queue 2 {
                }
                virtual-output-queue 3 {
                }
                virtual-output-queue 4 {
                }
            }
            multicast-queue 0 {
            }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

81

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

            multicast-queue 1 {
            }
            multicast-queue 2 {
            }
            multicast-queue 3 {
            }
            multicast-queue 4 {
            }
            multicast-queue 5 {
            }
            multicast-queue 6 {
            }
            multicast-queue 7 {
            }
        }
    }

8.5.1 Clearing interface statistics

You can clear the statistics counters for a specified interface.

Example:

# tools interface ethernet-1/1 statistics clear
/interface[name=ethernet-1/1]:
    interface ethernet-1/1 statistics cleared

Example

To clear queue statistics for an interface:

# tools interface ethernet-1/1 statistics queue-statistics clear

Example

To clear statistics for a specified queue on an interface:

# tools interface ethernet-1/1 statistics queue-statistics multicast-queue 0 clear

8.6 Displaying subinterface statistics

To display statistics for a specific subinterface, enter the context for the subinterface and use the info from
state command.

Example:

--{ candidate shared default }--[  ]--
# interface ethernet-1/2
--{ candidate shared default }--[ interface ethernet-1/2 ]--
# subinterface 1
--{ candidate shared default }--[ interface ethernet-1/2 subinterface 1 ]--
# info from state
    admin-state enable
    ip-mtu 1500
    ifindex 32769

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

82

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

    oper-state up
    last-change 2019-09-30T16:39:29.725Z
    ipv4 {
        allow-directed-broadcast false
        address 192.168.12.2/30 {
            origin static
        }
        arp {
            timeout 14400
            neighbor 192.168.12.1 {
                link-layer-address 00:01:01:FF:00:01
                origin dynamic
                expiration-time 2019-09-30T20:39:30.591Z
            }
        }
    }
    ipv6 {
        address 2001:1::192:168:12:2/126 {
            origin static
            status preferred
        }
        address fe80::201:3ff:feff:1/64 {
            origin link-layer
            status preferred
        }
        neighbor-discovery {
            dup-addr-detect true
            reachable-time 30
            stale-time 14400
            neighbor 2001:1::192:168:12:1 {
                link-layer-address 00:01:01:FF:00:01
                origin dynamic
                is-router true
                current-state reachable
                next-state-time 2019-09-30T17:26:30.018Z
            }
            neighbor fe80::201:1ff:feff:1 {
                link-layer-address 00:01:01:FF:00:01
                origin dynamic
                is-router true
                current-state stale
                next-state-time 2019-09-30T20:40:16.078Z
            }
        }
    }
    statistics {
        in-pkts 564
        in-octets 49394
        in-error-pkts 0
        in-discarded-pkts 0
        in-terminated-pkts 560
        in-terminated-octets 49054
        in-forwarded-pkts 4
        in-forwarded-octets 340
        out-forwarded-pkts 0
        out-forwarded-octets 0
        out-error-pkts 0
        out-discarded-pkts 0
        out-pkts 0
        out-octets 0
    }
    acl {
    }
    qos {

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

83

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

        input {
            classifiers {
                ipv4-dscp default
                ipv6-dscp default
                mpls-tc default
            }
        }
    }

8.6.1 Clearing subinterface statistics

You can clear the statistics counters for a specified subinterface.

Example:

# tools interface ethernet-1/1 subinterface 1 statistics clear
/interface[name=ethernet-1/1]/subinterface[index=1]:
    subinterface ethernet-1/1.1 statistics cleared

8.7 Displaying interface status

Use the show interface command to display the operational state of configured interfaces.

Example:

To display the status of all configured interfaces that have operational state up and their subinterfaces that
also have operational state up:

--{ running }--[  ]--
# show interface
===================================================================================
ethernet-1/10 is up, speed 100G, type 100GBASE-CR4 CA-L
  ethernet-1/10.1 is up
    Encapsulation: null
    IPv4 addr    : 192.35.1.0/31 (static)
    IPv6 addr    : 2001:192:35:1::/127 (static, preferred)
    IPv6 addr    : fe80::22e0:9cff:fe78:e2ea/64 (link-layer, preferred)
-----------------------------------------------------------------------------------
ethernet-1/21 is up, speed 100G, type 100GBASE-CR4 CA-L
  ethernet-1/21.1 is up
    Encapsulation: null
    IPv4 addr    : 192.45.1.254/31 (static)
    IPv6 addr    : 2001:192:45:1::fe/127 (static, preferred)
    IPv6 addr    : fe80::22e0:9cff:fe78:e2f5/64 (link-layer, preferred)
-----------------------------------------------------------------------------------
ethernet-1/22 is up, speed 100G, type 100GBASE-CR4 CA-L
  ethernet-1/22.1 is up
    Encapsulation: null
    IPv4 addr    : 192.45.3.254/31 (static)
    IPv6 addr    : 2001:192:45:3::fe/127 (static, preferred)
    IPv6 addr    : fe80::22e0:9cff:fe78:e2f6/64 (link-layer, preferred)
-----------------------------------------------------------------------------------
ethernet-1/3 is up, speed 100G, type 100GBASE-CR4 CA-L
  ethernet-1/3.1 is up
    Encapsulation: null
    IPv4 addr    : 192.57.1.1/31 (static)
    IPv6 addr    : 2001:192:57:1::1/127 (static, preferred)

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

84

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

    IPv6 addr    : fe80::22e0:9cff:fe78:e2e3/64 (link-layer, preferred)
-----------------------------------------------------------------------------------
...
===================================================================================
Summary
  3 loopback interfaces configured
  8 ethernet interfaces are up
  1 management interfaces are up
  12 subinterfaces are up
===================================================================================

Example

To display summary information about interfaces that have operational state up or down:

--{ running }--[  ]--
# show interface brief
+---------------+-------------+------------+-------+--------------+
|     Port      | Admin State | Oper State | Speed |     Type     |
+===============+=============+============+=======+==============+
| ethernet-1/1  | enable      | up         | 100G  | 100GBASE-SR4 |
| ethernet-1/2  | enable      | up         |       | 100GBASE-SR4 |
| ethernet-1/3  | disable     | down       |       |              |
| ethernet-1/4  | disable     | down       |       |              |
| ethernet-1/5  | disable     | down       |       |              |
| ethernet-1/6  | disable     | down       |       |              |
| ethernet-1/7  | disable     | down       |       |              |
+---------------+-------------+------------+-------+--------------+

Example

To display summary information about a specific interface:

--{ running }--[  ]--
# show interface ethernet-1/1 brief
+---------------+-------------+------------+-------+--------------+
|     Port      | Admin State | Oper State | Speed |     Type     |
+===============+=============+============+=======+==============+
| ethernet-1/1  | enable      | up         | 100G  | 100GBASE-SR4 |
+---------------+-------------+------------+-------+--------------+

Example

To display summary information about interfaces and subinterfaces that have operational state up or down:

--{ running }--[  ]--
# show interface all
===================================================================================
ethernet-1/1 is down, reason port-admin-disabled
-----------------------------------------------------------------------------------
ethernet-1/10 is up, speed 100G, type 100GBASE-CR4 CA-L
  ethernet-1/10.1 is up
    Encapsulation: null
    IPv4 addr    : 192.35.1.0/31 (static)
    IPv6 addr    : 2001:192:35:1::/127 (static, preferred)
    IPv6 addr    : fe80::22e0:9cff:fe78:e2ea/64 (link-layer, preferred)
-----------------------------------------------------------------------------------
ethernet-1/11 is down, reason port-admin-disabled
-----------------------------------------------------------------------------------
ethernet-1/12 is down, reason port-admin-disabled
-----------------------------------------------------------------------------------
...

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

85

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

===================================================================================
Summary
  3 loopback interfaces configured
  8 ethernet interfaces are up
  1 management interfaces are up
  12 subinterfaces are up
===================================================================================

Example

To display summary information about a specific interface and its subinterfaces:

--{ running }--[  ]--
# show interface ethernet-1/21
===================================================================================
ethernet-1/21 is up, speed 100G, type 100GBASE-CR4 CA-L
  ethernet-1/21.1 is up
    Encapsulation: null
    IPv4 addr    : 192.45.1.254/31 (static)
    IPv6 addr    : 2001:192:45:1::fe/127 (static, preferred)
    IPv6 addr    : fe80::22e0:9cff:fe78:e2f5/64 (link-layer, preferred)
===================================================================================

Example

To display details about a specific interface and its subinterfaces:

--{ running }--[  ]--
# show interface ethernet-1/3 detail
===================================================================================
Interface: ethernet-1/3
-----------------------------------------------------------------------------------
  Description     : rifa-difa-1
  Oper state      : up
  Down reason     : N/A
  Last change     : 23m14s ago, No flaps since last clear
  Speed           : 100G
  Flow control    : Rx is disabled, Tx is not supported
  MTU             : 9232
  VLAN tagging    : false
  Queues          : 8 output queues supported, 3 used since the last clear
  MAC address     : 20:E0:9C:78:E2:E3
  Last stats clear: never
-----------------------------------------------------------------------------------
Queue Parameter for ethernet-1/3
-----------------------------------------------------------------------------------
  Queue-id   Scheduling   Weight
-----------------------------------------------------------------------------------
Traffic statistics for ethernet-1/3
-----------------------------------------------------------------------------------
       counter         Rx      Tx  
  Octets              14241   11724
  Unicast packets     0       0    
  Broadcast packets   0       0    
  Multicast packets   52      56   
  Errored packets     0       0    
  FCS error packets   0       N/A  
  MAC pause frames    0       N/A  
  Oversize frames     0       N/A  
  Jabber frames       0       N/A  
  Fragment frames     0       N/A  
  CRC errors          0       N/A  
-----------------------------------------------------------------------------------

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

86

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

Traffic rate statistics for ethernet-1/3
-----------------------------------------------------------------------------------
    units     Rx   Tx
  kbps rate          
-----------------------------------------------------------------------------------
Frame length statistics for ethernet-1/3
-----------------------------------------------------------------------------------
  Frame length(Octets)   Rx   Tx
  64 bytes               0    0 
  65-127 bytes           5    8 
  128-255 bytes          0    48
  256-511 bytes          47   0 
  512-1023 bytes         0    0 
  1024-1518 bytes        0    0 
  1519+ bytes            0    0 
-----------------------------------------------------------------------------------
Transceiver detail for ethernet-1/3
-----------------------------------------------------------------------------------
  Status         : Transceiver is present and operational
  Form factor    : QSFP28
  Channels used  : 4
  Connector type : no-separable-connector
  Vendor         : Mellanox
  Vendor part    : MCP1600-C003
  PMD type       : 100GBASE-CR4 CA-L
  Fault condition: false
  Temperature    : 0
  Voltage        : 0.0000
-----------------------------------------------------------------------------------
Transceiver channel detail for ethernet-1/3
-----------------------------------------------------------------------------------
  Channel No   Rx Power (dBm)   Tx Power (dBm)   Laser Bias current (mA)
  1            -40.00           -40.00           0.000                  
  2            -40.00           -40.00           0.000                  
  3            -40.00           -40.00           0.000                  
  4            -40.00           -40.00           0.000                  
===================================================================================
  Subinterface: ethernet-1/3.1
-----------------------------------------------------------------------------------
  Oper state      : up
  Down reason     : N/A
  Last change     : 23m14s ago
  Encapsulation   : null
  IP MTU          : 9000
  Last stats clear: never
  IPv4 addr       : 192.57.1.1/31 (static)
  IPv6 addr       : 2001:192:57:1::1/127 (static, preferred)
  IPv6 addr       : fe80::22e0:9cff:fe78:e2e3/64 (link-layer, preferred)
-----------------------------------------------------------------------------------
ARP/ND summary for ethernet-1/3.1
-----------------------------------------------------------------------------------
  IPv4 ARP entries : 0 static, 0 dynamic
  IPv6 ND  entries : 0 static, 0 dynamic
-----------------------------------------------------------------------------------
QOS Policies applied to ethernet-1/3.1
-----------------------------------------------------------------------------------
        Summary            In      Out 
  IPv4 DSCP classifier   default       
  IPv6 DSCP classifier   default       
  IPv4 DSCP rewrite                none
  IPv6 DSCP rewrite                none
-----------------------------------------------------------------------------------
Traffic statistics for ethernet-1/3.1
-----------------------------------------------------------------------------------

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

87

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

     Statistics        Rx     Tx 
  Packets             52      8  
  Octets              14241   828
  Errored packets     0       0  
  Discarded packets   2       0  
  Forwarded packets   0       0  
  Forwarded octets    0       0  
  CPM packets         50      8  
  CPM octets          14033   828
===================================================================================

Example

To display information about egress queues and Virtual Output Queues (VOQs) for a specific interface and
its subinterfaces:

# show interface ethernet-1/1 queue-statistics
===================================================================================
Interface: ethernet-1/1
-----------------------------------------------------------------------------------
  Description     : <None>
  Oper state      : down
  Down reason     : lower-layer-down
  Last change     : 4d14h50m28s ago, No flaps since last clear
  Speed           : 100G
  Flow control    : Rx is disabled, Tx is not supported
  Loopback mode   : false
  MTU             : 9232
  VLAN tagging    : false
  Queues          : 8 output queues supported, 0 used since the last clear
  MAC address     : 68:AB:09:A2:71:B0
  Last stats clear: never
-----------------------------------------------------------------------------------
Queue Parameter for for ethernet-1/1
-----------------------------------------------------------------------------------
  Queue-id   Scheduling   Weight   PIR %    PIR (kbps) 
  0          SP           -        100     98994140.625
  1          SP           -        100     98994140.625
  2          SP           -        100     98994140.625
  3          SP           -        100     98994140.625
  4          SP           -        100     98994140.625
  5          SP           -        100     98994140.625
  6          SP           -        100     98994140.625
  7          SP           -        100     98994140.625
-----------------------------------------------------------------------------------
Queue statistics for interface ethernet-1/1, Queue 0 (fc0 traffic)
-----------------------------------------------------------------------------------
           Name            Fwd-Octets   Fwd-Pkts   Drop-Octets   Drop-Pkts
  Unicast Egress queue     0            0          0             0        
  VOQ 1                    0            0          0             0        
  VOQ 2                    0            0          0             0        
  VOQ 3                    0            0          0             0        
  VOQ 4                    0            0          0             0        
  Multicast Egress queue   0            0          0             0        
-----------------------------------------------------------------------------------
Queue statistics for interface ethernet-1/1, Queue 1 (fc1 traffic)
-----------------------------------------------------------------------------------
           Name            Fwd-Octets   Fwd-Pkts   Drop-Octets   Drop-Pkts
  Unicast Egress queue     0            0          0             0        
  VOQ 1                    0            0          0             0        
  VOQ 2                    0            0          0             0        
  VOQ 3                    0            0          0             0        
  VOQ 4                    0            0          0             0        

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

88

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

  Multicast Egress queue   0            0          0             0        
-----------------------------------------------------------------------------------
Queue statistics for interface ethernet-1/1, Queue 2 (fc2 traffic)
-----------------------------------------------------------------------------------
           Name            Fwd-Octets   Fwd-Pkts   Drop-Octets   Drop-Pkts
  Unicast Egress queue     0            0          0             0        
  VOQ 1                    0            0          0             0        
  VOQ 2                    0            0          0             0        
  VOQ 3                    0            0          0             0        
  VOQ 4                    0            0          0             0        
  Multicast Egress queue   0            0          0             0        
-----------------------------------------------------------------------------------
Queue statistics for interface ethernet-1/1, Queue 3 (fc3 traffic)
-----------------------------------------------------------------------------------
           Name            Fwd-Octets   Fwd-Pkts   Drop-Octets   Drop-Pkts
  Unicast Egress queue     0            0          0             0        
  VOQ 1                    0            0          0             0        
  VOQ 2                    0            0          0             0        
  VOQ 3                    0            0          0             0        
  VOQ 4                    0            0          0             0        
  Multicast Egress queue   0            0          0             0        
-----------------------------------------------------------------------------------
Queue statistics for interface ethernet-1/1, Queue 4 (fc4 traffic)
-----------------------------------------------------------------------------------
           Name            Fwd-Octets   Fwd-Pkts   Drop-Octets   Drop-Pkts
  Unicast Egress queue     0            0          0             0        
  VOQ 1                    0            0          0             0        
  VOQ 2                    0            0          0             0        
  VOQ 3                    0            0          0             0        
  VOQ 4                    0            0          0             0        
  Multicast Egress queue   0            0          0             0        
-----------------------------------------------------------------------------------
Queue statistics for interface ethernet-1/1, Queue 5 (fc5 traffic)
-----------------------------------------------------------------------------------
           Name            Fwd-Octets   Fwd-Pkts   Drop-Octets   Drop-Pkts
  Unicast Egress queue     0            0          0             0        
  VOQ 1                    0            0          0             0        
  VOQ 2                    0            0          0             0        
  VOQ 3                    0            0          0             0        
  VOQ 4                    0            0          0             0        
  Multicast Egress queue   0            0          0             0        
-----------------------------------------------------------------------------------
Queue statistics for interface ethernet-1/1, Queue 6 (fc6 traffic)
-----------------------------------------------------------------------------------
           Name            Fwd-Octets   Fwd-Pkts   Drop-Octets   Drop-Pkts
  Unicast Egress queue     0            0          0             0        
  VOQ 1                    0            0          0             0        
  VOQ 2                    0            0          0             0        
  VOQ 3                    0            0          0             0        
  VOQ 4                    0            0          0             0        
  Multicast Egress queue   0            0          0             0        
-----------------------------------------------------------------------------------
Queue statistics for interface ethernet-1/1, Queue 7 (fc7 traffic)
-----------------------------------------------------------------------------------
           Name            Fwd-Octets   Fwd-Pkts   Drop-Octets   Drop-Pkts
  Unicast Egress queue     0            0          0             0        
  VOQ 1                    0            0          0             0        
  VOQ 2                    0            0          0             0        
  VOQ 3                    0            0          0             0        
  VOQ 4                    0            0          0             0        
  Multicast Egress queue   0            0          0             0        
===================================================================================

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

89

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

8.8 LAG

A Link Aggregation Group (LAG), based on the IEEE 802.1ax standard (formerly 802.3ad), increases the
bandwidth available between two network devices, depending on the number of links installed. A LAG also
provides redundancy if one or more links participating in the LAG fail. All physical links in a LAG combine
to form one logical interface.

Packet sequencing is maintained for individual sessions. The hashing algorithm deployed by SR Linux
is based on the type of traffic transported to ensure that all traffic in a flow remains in sequence, while
providing effective load sharing across the links in the LAG.

LAGs can be either statically configured, or formed dynamically with Link Aggregation Control Protocol
(LACP). Load sharing is executed in hardware, which provides line rate forwarding for all port types. A LAG
can consist of ports of the same speed, as well as ports of mixed speed; however, the active links would be
only those whose port speed matches the configured member-speed parameter for the LAG instance.

8.8.1 Min-link threshold

SR Linux supports configuring a min-link threshold for a LAG, which sets the minimum number of member
links that must be active in order for the LAG to be operationally up. If the number of active links falls below
this threshold, the entire LAG is brought operationally down.

If the min-link threshold is crossed, the active member links are maintained, including continuing to run
LACP on links where it is configured, but the LAG is held out of forwarding state. When the number of
active links reaches or exceeds the min-link threshold, the LAG is brought back up operationally.

8.8.2 LACP

LACP, defined by the IEEE 802.3ad standard, specifies a method for two devices to establish and maintain
LAGs. When LACP is enabled, SR Linux can automatically associate LACP-compatible ports into a LAG.
All non-failing links in a LAG are active, and traffic is load-balanced across the active links.

When LACP is enabled, LACP changes are visible through traps and log messages logged against the
LAG.

8.8.2.1 LACP fallback

LACP fallback allows one or more designated links of an LACP controlled LAG to go into forwarding mode
if LACP is not yet operational after a configured timeout period.

SR Linux supports LACP fallback in static mode. In static mode, a single designated LAG member goes
into forwarding mode if LACP is not operational after the timeout period.

LACP fallback is configured by selecting the mode and fallback timeout (seconds). If the LAG receives no
PDUs and the timeout period expires, the configured fallback mode is enabled. If any member link in the
LAG receives a PDU, the fallback mode is immediately disabled.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

90

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

8.8.3 LAG configuration

To configure a LAG, you specify LAG parameters within the context of a LAG interface, then associate
Ethernet interfaces with the LAG interface.

The MAC address of the LAG should be a unique value taken from the chassis MAC address pool.

Member links in the LAG can be associated statically or dynamically.

• Static links are explicitly associated with the LAG within the configuration of the LAG instance.

• Dynamic links are associated with the LAG using LACP.

A LAG instance can consist of static links only or dynamic links only.

If an Ethernet interface is associated with a LAG interface, the following parameters must be the same for
all associated Ethernet ports:

•

flow-control

• port-speed

• aggregate-id

The following example shows the configuration for a LAG consisting of three member links.

--{ * candidate shared default }--[  ]--
# info interface *
    interface ethernet-1/1 {
        admin-state enable
        ethernet {
            aggregate-id lag1
        }
    }
    interface ethernet-1/2 {
        admin-state enable
        ethernet {
            aggregate-id lag1
        }
    }
    interface ethernet-1/3 {
        admin-state enable
        ethernet {
            aggregate-id lag1
        }
    }
    interface lag1 {
        subinterface 1 {
            admin-state enable
        }
        lag {
            lag-type static
            min-links 2
        }
    }

8.8.3.1 Configuring the min-link threshold

The min-link threshold specifies the minimum number of member links that must be active in order for
the LAG to be operationally up. If the number of active links falls below this threshold, the entire LAG is
brought operationally down.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

91

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

Example:

The following example configures the min-link threshold for a LAG to be 4. If the number of active links in
the LAG drops below 4, the LAG is taken operationally down.

--{ * candidate shared default }--[  ]--
# info interface lag1
    interface lag1 {
        lag {
            min-links 4
        }
    }

After the LAG has been taken operationally down because of crossing the min-link threshold, if the number
active links in the LAG subsequently reaches 4 or higher, the LAG is brought operationally up. The default
for the min-link threshold is 0 (disabled).

8.8.3.2 Configuring LACP and LACP fallback

When LACP is enabled, SR Linux can automatically associate LACP-compatible ports into a LAG. LACP
should be configured in ACTIVE mode only if LACP Fallback is also configured.

Example:

The following example configures LACP to run on an interface, which can dynamically become a member
of a LAG:

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/1 lag
    interface ethernet-1/1 {
        lag {
            lag-type lacp
            min-links 1
            member-speed 100G
            lacp-fallback-mode static
            lacp-fallback-timeout 4
            lacp {
                interval FAST
                lacp-mode ACTIVE
            }
        }
    }

In this example, the LACP interval is set to FAST, which causes LACP messages to be sent every second.
The SLOW option for LACP interval causes LACP messages to be sent every 30 seconds.

Example

The following example enables LACP fallback mode for a LAG, which allows a single designated LAG
member to go into forwarding mode if LACP is not operational after the timeout period.

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/1 lag
    interface ethernet-1/1 {
        lag {
            lacp-fallback-mode static
            lacp-fallback-timeout 60
        }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

92

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

    }

The LACP fallback timeout range is 4 to 3600 seconds when the LACP interval is FAST, and 90 to 3600
seconds when LACP interval is SLOW.

Example

The following example enables LACP port priority. When LACP fallback is triggered in static mode, one of
the member-links goes into a forwarding state that can be influenced using LACP port priority.

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/1 ethernet
    interface ethernet-1/1 {
        ethernet {
            aggregate-id lag1
            lacp-port-priority 1
            port-speed 25G
            hw-mac-address 00:01:02:FF:00:01
        }
    }

8.8.3.3 Configuring forwarding viability for LAG member links

By default, all interfaces configured in a LAG are capable of forwarding traffic to the other end of the LAG,
assuming all other LAG and port attributes allow it (port and LACP state). You can optionally configure
individual LAG members to be non-viable for forwarding traffic to the other end of the LAG link.

When a LAG member is configured as non-viable for forwarding traffic, the interface is not used for the
transmission of traffic over the LAG, but is still able to process traffic it receives on the associated member
link. In addition, Layer 2 protocols such as LLDP, LACP, and micro-BFD continue to be sent and processed
over the non-forwarding-viable LAG member.

Example:

The following example configures a LAG member to be non-viable for forwarding traffic across a LAG
link. The interface can still receive traffic on the LAG link and participate in Layer 2 functions, but does not
transmit packets to the other end of the LAG.

--{ candidate shared default }--[  ]--
# info interface ethernet-1/1 ethernet
    interface ethernet-1/1 {
        ethernet {
            aggregate-id lag1
            forwarding-viable false
        }
    }

Note:  If the forwarding-viable command is explicitly configured for a LAG member, you must
delete the forwarding-viable command to remove the LAG member from the LAG instance.

8.8.4 Displaying LAG interface statistics

To display statistics for a LAG interface, use the info from state command in candidate or running mode,
or the info command in state mode.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

93

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

Example:

# info from state interface lag1 statistics
    interface lag1 {
        statistics {
            in-octets 0
            in-unicast-packets 0
            in-broadcast-packets 0
            in-multicast-packets 0
            in-error-packets 0
            in-fcs-error-packets 0
            out-octets 7168
            out-unicast-packets 0
            out-broadcast-packets 0
            out-multicast-packets 56
            out-error-packets 0
            last-clear 2020-06-09T21:58:40.919Z
        }
    }

8.8.4.1 Clearing LAG interface statistics

You can clear the statistics counters for a specified LAG interface.

Example:

# tools interface lag1 statistics clear
/interface[name=lag1]:
    interface lag1 statistics cleared

Example

To clear statistics for a LAG interface and all member links:

# tools interface lag1 statistics clear include-members
/interface[name=lag1]:
    interface lag1 and all member interfaces statistics cleared

8.9 Breakout ports (7220 IXR-D3 only)

On 7220 IXR-D3 systems, the QSFP28 connector ports (ports 1/3-1/33) can operate in breakout mode.
Each QSFP28 connector port operating in breakout mode can have four breakout ports configured, each
operating at 25G.

To enable breakout ports, you enable breakout mode for an interface and configure breakout ports for the
interface. Breakout ports are named using the following format:

ethernet-slot/port/breakout-port

For example, if interface ethernet 1/3 is enabled for breakout mode, its breakout ports are named as
follows:

• ethernet 1/3/1

• ethernet 1/3/2

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

94

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

• ethernet 1/3/3

• ethernet 1/3/4

When an interface is operating in breakout mode, it is considered a breakout connector, and not an
Ethernet port. Some features that are configurable on an Ethernet port do not apply to a breakout
connector. The following parameters cannot be configured on an interface operating as a breakout
connector:

• mtu

• loopback-mode

• aggregate-id

• auto-negotiate

• duplex-mode

• flow-control receive

• flow-control transmit

• lacp-port-priority

• port-speed

• standby-signaling

• reload-delay

• hold-time

• storm-control

• vlan-tagging

• subinterface

• lag

• qos

• sflow

• transceiver

When the admin-state parameter for a breakout connector is set to disable, it causes its breakout ports
to be shut down. In this case, the output from the info from state command lists the oper-down-reason for
the breakout ports as connector-down.

The port-speed setting is not configurable for a breakout port. The speed of the breakout port is
determined by the channel-speed setting for the breakout connector.

Note the following when configuring the transceiver parameter for a breakout port:

• The tx-laser setting affects only the individual breakout port. If the installed transceiver supports

per-channel disabling of the TX laser then configuring tx-laser = false causes the state of the
breakout port to be oper-down.

If the installed transceiver does not support per-channel disabling of the TX laser, then the state of the
breakout port remains oper-up and info from state displays tx-laser=true.

•

If ddm-events = true is configured for any breakout port, then the system generates warning logs
for temperature and voltage of the overall transceiver/connector.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

95

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

If ddm-events = false for any breakout port, the system suppresses warning logs for input-power,
output-power, and laser-bias-current for that specific port/laser.

• The configured forward-error-correction algorithm applies only to the individual breakout port.

8.9.1 Configuring breakout mode for an interface

The following is an example of configuring an interface for breakout-mode and enabling breakout ports on
the interface.

Example:

--{ candidate shared default }--[  ]--
# info interface ethernet-1/3*
    interface ethernet-1/3 {
        admin-state enable
        description "Breakout connector"
        breakout-mode {
            num-channels 4
            channel-speed 25G
            }
        }
    }
    interface ethernet-1/3/1 {
        admin-state enable
        description "Breakout port 1"
        subinterface 1 {
            admin-state enable
            ipv4 {
                address 192.168.12.1/30 {
                }
            }
        }
    }
    interface ethernet-1/3/2 {
        admin-state enable
        description "Breakout port 2"
        subinterface 1 {
            admin-state enable
            ipv4 {
                address 192.168.12.2/30 {
                }
            }
        }
    }
    interface ethernet-1/3/3 {
        admin-state enable
        description "Breakout port 3"
        subinterface 1 {
            admin-state enable
            ipv4 {
                address 192.168.12.3/30 {
                }
            }
        }
    }
    interface ethernet-1/3/4 {
        admin-state enable
        description "Breakout port 4"
        subinterface 1 {

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

96

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

            admin-state enable
            ipv4 {
                address 192.168.12.4/30 {
                }
            }
        }
    }

8.10 DHCP relay

DHCP relay refers to the router's ability to act as an intermediary between DHCP clients requesting
configuration parameters, such as a network address, and DHCP servers when the DHCP clients and
DHCP servers are not attached to the same broadcast domain, or do not share the same IPv6 link (in the
case of DHCPv6).

SR Linux supports DHCP relay for IRB subinterfaces and Layer 3 subinterfaces. Up to 8 DHCP or DHCPv6
servers are supported. The DHCP relay maximum packet size (including option 82 and vendor-specific
options) is capped at 1500 bytes to avoid fragmentation on the Ethernet segment end attached to the
DHCP server.

When DHCP relay is enabled for a subinterface, and a DHCP client initiates a request for configuration
parameters, the router accepts the DHCP client's request and relays it to the remote DHCP server, which
sends back the configuration parameters. The router relays the configuration parameters to the client.

The DHCP server network can be in the same IP-VRF network-instance of the Layer 3 subinterfaces
that require DHCP relay (see Figure 1: DHCP relay for IRB and Layer 3 subinterfaces), or it can be in
a different IP-VRF network-instance or the default network instance (see Figure 2: DHCP relay using
different IP-VRF or default network-instance).

SR Linux supports DHCP relay for IPv4 and IPv6. This guide refers to DHCP for IPv4 as DHCP, and DHCP
for IPv6 as DHCPv6.

Figure 1: DHCP relay for IRB and Layer 3 subinterfaces

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

97

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

Figure 2: DHCP relay using different IP-VRF or default network-instance

8.10.1 DHCP relay for IPv4

When DHCP relay is enabled, the router intercepts DHCP broadcast packets and unicasts them to a
specified DHCP server for handling. By default, the source address for DHCP packets relayed to the server
(GIADDR) is the IP address of the ingress subinterface where the DHCP relay agent is enabled, although a
different GIADDR can be specified if necessary.

SR Linux supports DHCP option 82, the Relay Information Option, specified in RFC 3046, which allows the
router to append information to DHCP requests relayed to the DHCP server, identifying where the original
DHCP request came from. DHCP option 82 includes two sub-options: circuit-id and remote-id.

When configured to do so, SR Linux includes the following information in the circuit-id and remote-id sub-
options of DHCP option 82:

• For circuit-id, the system_name/VRF_instance/sub-interface_id:vlan_id of the ingress subinterface
where the relay agent is enabled that receives the DHCP Discover message from the DHCP client.

• For remote-id, the MAC address of the DHCP client.

Figure 3: DHCP message flow for IPv4 address allocation shows an example of the discovery, offer,
request, and acknowledgment (DORA) message flow that occurs when DHCP relay assigns an address to
a DHCP client.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

98

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

Figure 3: DHCP message flow for IPv4 address allocation

The DORA message flow shown in Figure 3: DHCP message flow for IPv4 address allocation works as
follows:

1. The DHCP client sends a DHCP Discover (broadcast) message with the following values:

• DA = FF:FF:FF:FF:FF:FF (broadcast)

• SA= client MAC

• SIP = 0.0.0.0

• DIP = 255.255.255.255

• Source UDP port = 68

• Destination UDP port = 67

The DHCP payload has the following values:

• Broadcast flag = 1 (broadcast) or 0 (unicast)

• Relay agent IP = 0.0.0.0

• Client MAC = mac1

• Parameter request list (option 55) which lists the required items from the DHCP server to be sent

along with the IP address like subnet mask, router (gateway), and others

2. The DHCP relay agent relays the DHCP Discover message toward the DHCP server (unicast). If

configured to do so, information is added for the circuit ID and remote ID sub-options in DHCP option
82. The relayed packet is unicast toward the DHCP servers with the following values:

• SIP = outgoing interface IP address by default. If the source-address is configured, the relayed

packet instead has SIP = configured source-address

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

99

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

• UDP source port = 67

• UDP destination port = 67

The DHCP payload has the following values:

• Broadcast = 1 (broadcast) or 0 (unicast)

• Relay agent IP (giaddr) = IP address of the ingress sub-interface where the relay agent is enabled

• Client MAC = mac1

• Relay agent information (option 82)

3. The DHCP server assigns an IP address to the DCHP client, based on information in the GIADDR or

in option 82, if configured to do so. The DHCP server sends a DHCP Offer message to the DHCP relay
agent (unicast). The DHCP Offer message includes the IP address assigned to the DHCP client based
on information in the GIADDR or in option 82.

The DHCP Offer packet is unicast with the following values:

• SIP = DHCP IP address

• DIP = giaddr

• UDP source port = 67

• UDP destination port = 67

The DHCP payload has the following values:

• Broadcast flag = 1 (broadcast) or 0 (unicast).

• Your (client) IP = IP address assigned by DHCP server

• Agent IP = giaddr

• Client MAC = mac1

• DHCP identifier = DHCP server IP address

• Option 82 (echoed back, and based on DHCP server configuration)

•

IP address Lease time (option 51)

• Subnet mask (option 1)

• Router (gateway) (option 3)

• Others (DNS, Renewal Time value, Rebinding Time value, and so on)

4. The DHCP relay agent relays the DHCP Offer message to the DHCP client (either broadcast or unicast,

based on the broadcast flag sent by the client).

The DHCP Offer message is relayed from the DHCP server toward the client with the following values:

• DA = FF:FF:FF:FF:FF:FF (broadcast) OR Client MAC(unicast)

• SIP = sub-interface IP address toward the client where DHCP relay agent is enabled

• DIP = 255.255.255.255 (broadcast) OR Your (client) IP address (unicast)

• Source UDP port = 67

• Destination UDP port = 68

The relay agent relays the DHCP Offer toward the client without option 82. It strips off option 82 if
echoed back from DHCP server.

The DHCP payload has the following values:

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

100

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

• Broadcast flag = 1 (broadcast) or 0 (unicast).

• Your (client) IP = IP address assigned by DHCP server

• Agent IP = giaddr

• Client MAC = mac1

• DHCP identifier = DHCP server IP address

• Option 82 (echoed back, and based on DHCP server configuration)

•

IP address Lease time (option 51)

• Subnet mask (option 1)

• Router (gateway) (option 3)

• Others (DNS, Renewal Time value, Rebinding Time value, and so on.)

5. The DHCP client sends a DHCP request message (broadcast) with the following values:

• DA = FF:FF:FF:FF:FF:FF (broadcast)

• SA = client MAC

• SIP = 0.0.0.0

• DIP = 255.255.255.255

• Source UDP port = 68

• Destination UDP port = 67

The DHCP payload has the following values:

• Broadcast flag = 1 (broadcast) or 0 (unicast).

• Relay agent IP = 0.0.0.0

• Client MAC = mac1

• DHCP server identifier = DHCP server IP address

• Requested IP (option 50)

• Parameter request list (option 55) that lists the required items from the DHCP server to be sent along

with the IP address like subnet mask, router (gateway), and others

6. The DHCP relay agent relays the DHCP Request message toward the DHCP server (unicast). The

relayed packet is unicast toward the DHCP servers, with the following values:

• SIP = outgoing interface IP address by default. If source-address is configured, then the relayed

packet has SIP = configured source-address.

• UDP source port = 67

• UDP destination port = 67

The DHCP payload has the following values:

• Broadcast flag = 1 (broadcast) or 0 (unicast).

• Relay agent IP = giaddr

• Client MAC = mac1

• DHCP identifier = DHCP server IP address

• Requested IP (option 50)

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

101

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

• Relay agent Information (option 82) if configured under dhcp-relay

• Parameter request list (option 55) that lists the required items from the DHCP server to be sent along

with the IP address like subnet mask, router (gateway), and others

• Vendor specific option (if configured)

7. The DHCP server sends a DHCP Ack message to the DHCP relay agent (unicast). The DHCP Ack

packet is unicasted with the following values:

• SIP = DHCP IP address

• DIP = giaddr

• UDP source port = 67

• UDP destination port = 67

The DHCP payload has the following values:

• Broadcast flag, either 1 (broadcast), or 0 (unicast)

• Your (client) IP = IP address assigned by DHCP server

• Agent IP = giaddr

• Client MAC = mac1

• DHCP identifier = DHCP server IP address

• Option 82 (echoed back and based on DHCP server configuration)

•

IP address Lease time (option 51)

• Subnet mask (option 1)

• Router (gateway) (option 3)

• Others (DNS, Renewal Time value, Rebinding Time value, and so on.)

8. Based on the broadcast flag sent by client, the DHCP Offer is relayed from the DHCP servers toward

the client with the following values:

• DA = FF:FF:FF:FF:FF:FF (broadcast) OR Client MAC(unicast)

• SIP = sub-interface IP address toward the client where the DHCP relay agent is enabled

• DIP = 255.255.255.255 (broadcast) OR Your (client) IP address (unicast)

• Source UDP port = 67

• Destination UDP port = 68

The relay agent relays the DHCP Offer toward client without option 82. It strips off option 82 if echoed
back from DHCP server.

The DHCP payload has the following values:

• Broadcast flag can be either 1 (broadcast), or 0 (unicast)

• Your (client) IP = IP address assigned by DHCP server

• Agent IP = giaddr

• Client MAC = mac1

• DHCP Server identifier (option 54) = DHCP server IP address

•

IP address lease time (option 51)

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

102

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

• Subnet mask (option 1)

• Router (gateway) (option 3)

• Others (DNS, Renewal Time value, Rebinding Time value, and so on.)

When renewing or releasing an address, the DHCP client unicasts the DHCP Request or Release
message to the DHCP server without involvement by the DHCP relay agent.

8.10.1.1 Configuring DHCP relay for IPv4

To configure DHCP relay for a subinterface:

• Configure the addresses of the DHCP servers.

• Optionally configure the source address for DHCP messages sent to the servers.

• Configure whether information is added to the sub-options for DHCP option 82.

Example:

The following example configures the DHCP relay agent on a subinterface. The example configures the IP
addresses of the remote DHCP servers and specifies the address to be used as the GIADDR in packets
sent to the servers

The circuit-id and remote-id options are configured, which causes the DHCP relay agent to include the
system_name/VRF_instance/sub-interface_id:vlan_id in the circuit-id sub-option and the DHCP client MAC
address in the remote-id sub-option of DHCP option 82.

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/2
 interface ethernet-1/2 {
        subinterface 1 {
            ipv4 {
                address 1.1.4.4/24 {
                }
                dhcp-relay {
                    option [
                           circuit-id
                           remote-id
                    ]
                    source-address 1.1.4.4
                    server [
                        172.16.32.1 
                        172.16.64.1 
                        192.168.1.1
                    ]
                }
            }

Example:

If the DHCP server network is in a different IP-VRF network-instance from the Layer 3 subinterfaces that
require DHCP relay (see Figure 2: DHCP relay using different IP-VRF or default network-instance), specify
the network-instance in the configuration. For example:

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/2
 interface ethernet-1/2 {
        subinterface 1 {

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

103

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

            ipv4 {
                address 1.1.4.4/24 {
                }
                dhcp-relay {
                    network-instance ipvrf2
                    option [
                           circuit-id
                           remote-id
                    ]
                    source-address 1.1.4.4
                    server [
                        172.16.32.1 
                        172.16.64.1 
                        192.168.1.1
                    ]
                }
            }

8.10.1.2 Using the GIADDR as the source address for DHCP Discover/Request packets

By default, the SR Linux uses the IP address of the outgoing interface as the source address for Discover/
Request packets sent to the DHCP server. This is not the needed behavior for some configurations, such
as a firewall protecting the DHCP server that allows connections from a limited set of IP addresses. You
can use the use-gi-addr-as-src-ip-addr parameter to cause the SR Linux to instead use the GIADDR as
the source address for Discover/Request packets sent to the DHCP server.

You can optionally configure the GIADDR address using the gi-address parameter. The configured
GIADDR address can be a local IP address under the interface where DHCP relay is enabled, any
loopback address within the same IP-VRF (if the DHCP server network is in this IP-VRF network-instance),
or a loopback address defined in a different IP-VRF/default network-instance (if the DHCP server network
is in different IP-VRF/default network-instance).

The following table shows the GIADDR and source address combinations.

Table 5: GIADDR and source address combinations

gi-address parameter

use-gi-addr-as-src-ipaddr
parameter

GIADDR in relayed
packet

Source IP address in
relayed packet

Not configured (default)

False (default)

Primary IP address
of interface

IP address of outgoing
interface

Configured

False (default)

Configured GIADDR IP address of outgoing

interface

Configured

True

Configured GIADDR Configured GIADDR

Not configured (default)

True

Primary IP address
of interface

Primary IP address
of interface (because
it is picked as the
GIADDR)

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

104

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

Example:

In the following example, the address specified with the gi-address parameter is used as the source
address for Discover/Request packets sent to the DHCP server. If the gi-address parameter is not
configured, then the default GIADDR (the primary IP address of the interface) is used.

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/2
 interface ethernet-1/2 {
        subinterface 1 {
        ipv4 {
            address 172.16.1.1/24 {
                primary
            }
            address 172.16.2.1/24 {
            }
            dhcp-relay {
                admin-state enable
                gi-address 172.16.2.1
                use-gi-addr-as-src-ip-addr true
                option [
                    circuit-id
                    remote-id
                ]
                server [
                    1.1.1.1
                    2.2.2.2
                ]
            }
        }

8.10.1.3 Trusted and untrusted DHCP requests

If the DHCP relay agent receives a DHCP request and the downstream node added option 82 information
or set the GIADDR to any value other than 0, the DHCP request is considered to be untrusted. By default,
the router drops any untrusted DHCP request and discards the DHCP packets, as described in RFC 3046.
SR Linux supports untrusted mode only. The DHCP relay agent discards DHCP packets traveling from the
client to server side under the following conditions:

• The DHCP packet includes option 82.

• The DHCP packet has a GIADDR value that is not 0.

The DHCP relay agent discards DHCP packets traveling from the server to client side under the following
conditions:

• The circuit-id or remote-id are not enabled on the relay interface, but are present in the packet.

•

the GIADDR value in the DHCP packet does not match the GIADDR value on the relay interface.

• There is no matching entry in the cache.

8.10.2 DHCP relay for IPv6

DHCP relay for IPv6 works similarly to IPv4. However, in DHCPv6, the DHCP Discover, Offer, and Ack
messages are replaced by Solicit messages sent by clients, and Advertise and Reply messages sent by
servers.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

105

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

The DHCPv6 relay agent relays messages between clients and remote servers using Relay-Forward
(client-to-server) and Relay-Reply (server-to-client) message types. DHCP option 82 is replaced in
DHCPv6 by Interface-Id (option 18) and Remote Identifier (option 37), appended by relay agents.

You can optionally configure the DHCPv6 relay agent to include the client's MAC address in Client Link-
Layer Address (option 79). This can be useful for dual-stack clients, where a client is using both DHCPv4
and DHCPv6, and the client's MAC address is being used as an identifier for DHCPv4.

Figure 4: DHCPv6 message flow for IPv6 address allocation shows the DHCPv6 message flow. Figure 5:
DHCPv6 renew message flow and Figure 6: DHCPv6 release message flow show the renew and release
flows.

Figure 4: DHCPv6 message flow for IPv6 address allocation

When assigning an address to a DHCP client, DHCP relay for IPv6 works as follows:

1. The DHCPv6 client uses its link-local address as the source IPv6 address and IPv6 multicast address
FF02::1:2 and MAC address 33:33:00:01:00:02 as destination IPv6 address/MAC address respectively
for solicit/request messages and with the following UDP values:

•

source UDP port = 546

• destination UDP port = 547

2. The DHCPv6 relay agent uses a Relay-Forw message to relay the Solicit message toward the DHCPv6
server, using the outbound IPv6 address of the DHCPv6 relay agent as the source IPv6 address and
with the following UDP values:

• Source UDP port = 547

• Destination UDP port = 547

3. The DHCPv6 server replies to the relay agent an IP address to the DCHP client, based on information

in the GIADDR or in option 82, if configured to do so, and with the following UDP values:

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

106

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

• Source UDP port = 547

• Destination UDP port = 547

4. The DHCPv6 server replies to the relay agent with destination IPv6 address equal to DHCPv6 (RELAY-

FW) source IPv6 address, and the following UDP values:

• Source UDP port = 547

• Destination UDP port = 547

5. The DHCP relay agent relays the DHCP Offer message to the DHCP client (either broadcast or unicast,

based on the broadcast flag sent by the client).

Figure 5: DHCPv6 renew message flow

Figure 6: DHCPv6 release message flow

8.10.2.1 Configuring DHCP relay for IPv6

To configure DHCP relay for a subinterface for IPv6:

• Configure the addresses of the DHCPv6 servers.

• Optionally configure the source IPv6 address for relay-forward messages sent to the servers.

• Optionally configure whether information is included in the Interface-Id (option 18) and Remote Identifier

(option 37) in relay-forward messages.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

107

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

• Optionally configure whether the MAC address of the DHCP client is included in the Client Link-Layer

Address (option 79) in the relay-forward messages.

Example:

The following example configures the DHCPv6 relay agent on a subinterface. The example configures
the IP addresses of the remote DHCPv6 servers and specifies the address to be used as the source IPv6
address in packets sent to the servers.

The interface-id and remote-id options are configured, which causes the DHCP relay agent to include
the system_name/VRF_instance/subinterface_id:vlan_id in Interface-Id (option 18) and the DHCPv6 client
MAC address in the Remote Identifier (option 37).

The client-link-layer-address option is configured, which causes the DHCP relay agent to include the
DHCPv6 client MAC address in the Client Link-Layer Address (option 79).

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/2
 interface ethernet-1/2 {
        description dut1-dut4-1
        subinterface 1 {
            ipv6 {
                address 2001:db8:101::1/64 {
                    primary
                }
                address 2001:db8:202::1/64 {
                }
                dhcp-relay {
                    admin-state enable
                    source-address 2001:db8:101::1
                    option [
                       interface-id
                       remote-id
                       client-link-layer-address
                    ]
                    server [
                       1::1
                       2::2
                    ]
                }
           }
       }

Example

If the DHCP server network is in a different IP-VRF network-instance from the Layer 3 subinterfaces that
require DHCP relay (see Figure 2: DHCP relay using different IP-VRF or default network-instance), specify
the network-instance in the configuration. For example:

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/2
 interface ethernet-1/2 {
        description dut1-dut4-1
        subinterface 1 {
            ipv6 {
                address 2001:db8:101::1/64 {
                    primary
                }
                address 2001:db8:202::1/64 {
                }
                dhcp-relay {

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

108

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

                    network-instance ipvrf2
                    admin-state enable
                    source-address 2001:db8:101::1
                    option [
                       interface-id
                       remote-id
                       client-link-layer-address
                    ]
                    server [
                       1::1
                       2::2
                    ]
                }
           }
       }

8.10.3 QoS for DHCP relay

Self-generated DHCP/DHCPv6 packets are mapped into forwarding class 4 (fc4), low drop probability
level, and DSCP marking 34 (AF41).

8.10.4 DHCP relay operational down reasons

The DHCP relay agent can enter an operationally down state in the following scenarios:

• The DHCP relay admin state is down.

• The subinterface under which DHCP relay is configured is operationally down.

• All DHCP servers configured within the network instance are unreachable.

• The configured GIADDR for DHCP, or source-address for DHCPv6, does not match any of the

configured IP addresses under the subinterface where DHCP relay is configured

• The IP address is deleted under the subinterface.

8.10.5 Displaying DHCP relay statistics

To display DHCP relay statistics, use the info from state command in candidate or running mode, or the
info command in state mode.

Example: IPv4

# info from state interface ethernet-1/16 subinterface 1 ipv4 dhcp-relay statistics
    interface ethernet-1/16 {
        subinterface 1 {
            ipv4 {
                dhcp-relay {
                    statistics {
                        client-packets-received 2
                        client-packets-relayed 2
                        client-packets-discarded 0
                        server-packets-received 2
                        server-packets-relayed 2
                        server-packets-discarded 0
                    }
                }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

109

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

            }
        }
    }

Example: IPv6

# info from state interface ethernet-1/16 subinterface 1 ipv6 dhcp-relay statistics
    interface ethernet-1/16 {
        subinterface 1 {
            ipv6 {
                dhcp-relay {
                    statistics {
                        client-packets-received 2
                        client-packets-relayed 2
                        client-packets-discarded 0
                        server-packets-received 2
                        server-packets-relayed 2
                        server-packets-discarded 0
                    }
                }
            }
        }
    }

8.10.5.1 Clearing DHCP relay statistics

You can clear the DHCP relay statistics counters for a specified subinterface.

Example:

# tools interface ethernet-1/2 subinterface 1 ipv4 dhcp-relay statistics clear
/interface[name=ethernet-1/2]/subinterface[index=1]:
subinterface ethernet-1/2.1 statistics cleared

8.11 DHCP server

For cases where a host requires IPAM (IP Address Management) without an external DHCP server, or
where DHCP relay to underlay is not possible, IPAM information can be stored locally on the SR Linux
device, which can assign an IP address and other DHCP options to the host using a local DHCP server.

SR Linux supports static IP allocations on both DHCPv4 and DHCPv6 servers. The SR Linux DHCP server
can be enabled under regular Layer 3 or IRB subinterfaces. On Layer 3 or IRB subinterfaces, the DHCP
server can only be enabled under subinterfaces where DHCP relay is disabled.

When an incoming DHCP Discover or Solicit message is received from a host (DHCP client), and its MAC
address matches an entry in the SR Linux DHCP server configuration, the SR Linux DHCP server starts
the process of IP address assignment and sends other DHCP options if configured to do so.

For DHCPv4, in addition to IP address allocation, the SR Linux can send the following DHCP options to a
host:

•

router (option 3) – IPv4 address of the gateway for the DHCP client

• ntp-server (option 4) – List of up to 4 NTP servers for the DHCP client to use

• dns-server (option 6) – List of up to 4 DNS servers for the DHCP client to use

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

110

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

• hostname (option 12) – The hostname for the DHCP client

• domain-name (option 15) – The domain name the client can use when resolving hostnames via DNS

• bootfile-name (option 66) – URL to a provisioning script for the DHCP client to use when booting

•

server-id – IP address the DHCP server must match within the network-instance, such as the
subinterface primary address or loopback address

For DHCPv6, in addition to IP address allocation, the SR Linux can send a list of up to 4 DNS servers for
the DHCP client to use (option 23).

Notes:

• The SR Linux DHCP server supports static IP address allocation only. Dynamic allocation is not

supported.

•

It is assumed there is no DHCP relay agent between the DHCP client and the SR Linux DHCP server.
Relayed frames are not supported.

• For IPv6, DHCP configuration uses MAC-to-IPv6 address binding. The IPv6 address is assigned to the
client based on the client's MAC address, not IAID. The client's MAC address is derived from the client
identifier. The recommended client identifier type is DUID type DUID-LLT or DUID-LL.

8.11.1 Configuring the DHCP server

To configure the SR Linux DHCP server, you enable it on a subinterface and at the system dhcp-
server level configure DHCPv4 and DHCPv6 options and static IP allocations for the network-instance
where DHCP is required.

Example:

The following example enables DHCPv4 and DHCPv6 servers for a subinterface:

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/1 subinterface 1
    interface ethernet-1/1 {
        subinterface 1 {
            admin-state enable
            ipv4 {
                address 192.14.1.4/27 {
                }
                dhcp-server {
                    admin-state enable
                }
            }
            ipv6 {
                address 2001:192:14:1::4/120 {
                }
                dhcpv6-server {
                    admin-state enable
                }
            }
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

111

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

Example

The following example configures DHCPv4 and DHCPv6 options, which are supplied to DHCP clients on
the default network-instance:

--{ * candidate shared default }--[  ]--
# info system dhcp-server
    system {
        dhcp-server {
            admin-state enable
            network-instance default {
                dhcpv4 {
                    options {
                        domain-name lan
                        router 192.168.1.1
                        dns-server [
                            192.168.1.53
                            192.168.1.54
                        ]
                        ntp-server [
                            192.168.1.50
                        ]
                    }
                }
                dhcpv6 {
                    options {
                        dns-server [
                            2001:192:14:1::4
                            2001:192:14:1::5
                        ]
                    }
                }
            }
        }
    }

Example

The following example configures static IP allocation settings for an IPv4 host:

--{ * candidate shared default }--[  ]--
# info detail system dhcp-server network-instance default dhcpv4
    system {
        dhcp-server {
            admin-state enable
            network-instance default {
                dhcpv4 {
                    admin-state enable
                    static-allocation {
                        host 00:1D:FE:E0:E9:7C {
                            ip-address 192.168.1.1/24
                            options {
                                router 192.168.1.1
                                dns-server [
                                    192.168.1.53
                                ]
                            }
                        }
                    }
                }
            }
        }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

112

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

    }

Example

The following example configures static IP allocation settings for an IPv6 host:

--{ * candidate shared default }--[  ]--
# info detail system dhcp-server network-instance default dhcpv6
    system {
        dhcp-server {
            admin-state enable
            network-instance default {
                dhcpv6 {
                    admin-state enable
                    static-allocation {
                        host 92:93:47:30:32:CA {
                            ip-address 2001:1::192:168:12:1/126
                            options {
                                dns-server [
                                    2001:192:14:1::4
                                ]
                            }
                        }
                    }
                }
            }
        }
    }

8.12 IPv6 router advertisements

You can configure an IPv6 subinterface to originate Router Advertisement (RA) messages. The following
settings can be configured for the RA messages:

• Current hop limit to advertise in the RA messages.

•

IP MTU. Hosts can associate the IP MTU with the link on which the RA messages are received.

• Managed configuration flag. When enabled, this setting indicates that hosts should use DHCPv6 to

obtain IPv6 addresses.

• Other configuration flag. When enabled, this setting indicates that hosts should use DHCPv6 to obtain

other configuration information (besides addresses).

• The maximum and minimum time between sending router advertisement messages to the all-nodes

multicast address.

•

IPv6 prefix list. Hosts that support Stateless Address Auto-Configuration (SLAAC) can use the IPv6
prefixes in the RA messages to generate IPv6 addresses.

• Number of milliseconds advertised for the reachable time and the retransmit time in RA messages,

which hosts use for address resolution and the ICMPv6 Neighbor Unreachability Detection algorithm.

• Number of seconds advertised as the router lifetime in RA messages. This setting indicates amount of

time the advertising router can be used as a default router/gateway.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

113

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

8.12.1 Configuring IPv6 router advertisements

The following example configures the SR Linux to originate RA messages from an IPv6 subinterface. The
RA messages include an IPv6 prefix that SLAAC-enabled clients can use to generate IPv6 addresses.

Example:

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/1 subinterface 1 ipv6 router-advertisement
    interface ethernet-1/1 {
        subinterface 1 {
            ipv6 {
                router-advertisement {
                    router-role {
                        admin-state enable
                        prefix 2001:db8:0:b::/64 {
                        }
                    }
                }
            }
        }
    }

8.13 IPv6 Router Advertisement guard (RA guard)

IPv6 Router Advertisement guard (IPv6 RA guard) allows you to configure policies that filter out IPv6 RA
messages that may be incorrectly or maliciously configured. IPv6 RA messages entering a subinterface
where an IPv6 RA guard policy is applied can be accepted or discarded based on match criteria specified
in the policy.

IPv6 RA guard is supported on Layer 2 and Layer 3 subinterfaces, which allows unwanted RA messages
to be discarded as close to the network edge or server connection as possible. The IPv6 RA guard feature
can be configured on 7220 IXR-D1, D2, and D3 systems only.

On IRB interfaces, an IPv6 RA guard policy can be applied to the Layer 2 subinterface, but not on the IRB
subinterface.

Ingress ACLs are applied before IPv6 RA guard policies, which may cause RA messages to be discarded
before they can be evaluated by an IPv6 RA guard policy

Note:
Ingress ACLs are applied before IPv6 RA guard policies, which may cause RA messages to be
discarded before they can be evaluated by an IPv6 RA guard policy

The following can be used as match criteria in an IPv6 RA guard policy:

• Advertised IPv6 prefix set

• Source IPv6 address list or prefix set

• RA hop-count limit

• Router preference value

• Managed configuration flag (M-flag) setting

• Other configuration flag (O-flag) setting

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

114

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

An IPv6 RA guard policy can have an action of accept or discard. When an IPv6 RA guard policy is applied
to a subinterface, the default action for the subinterface is the opposite of the action specified in the policy.
If the policy action is accept, then IPv6 RA packets that do not match the policy are discarded; if the policy
action is discard, IPv6 RA packets that do not match the policy are accepted.

To configure IPv6 RA guard, you specify match criteria and an action in an IPv6 RA guard policy, then
apply the policy to a subinterface. If an IPv6 RA guard policy is not applied to a subinterface, then IPv6 RA
guard is disabled on that subinterface.

Note:
Depending on your configuration, it may be more efficient to block IPv6 RA messages on a
subinterface using an ACL entry and action, instead of configuring an IPv6 RA guard policy.

8.13.1 Configuring IPv6 RA guard policies

To configure an IPv6 RA guard policy, you specify one or more match criteria and an action of either accept
or discard.

Example:

The following example configures and IPv6 RA guard policy with an advertised IPv6 prefix set and source
IPv6 prefix set as match criteria, and accept as the action.

To be considered a match, all advertised prefixes in the RA message must match the IPv6 prefix set, and
the source address of the RA message must match the source IPv6 address prefix set.

--{ * candidate shared default }--[  ]--
# info system ra-guard-policy
    system {
        ra-guard-policy rag1 {
            action accept
            advertise-prefix-set 2001:db8:0:b::/64
            source-prefix-set 2001:1::192:168:11:1/126
        }
    }

Example

The following example configures an IPv6 RA guard policy with no match criteria and action of discard.
This policy blocks all RA messages on subinterfaces where it is applied.

--{ * candidate shared default }--[  ]--
# info system ra-guard-policy
    system {
        ra-guard-policy "Discard all" {
            action discard
        }
    }

8.13.2 Applying IPv6 RA guard policies to subinterfaces

To activate IPv6 RA guard, you apply an IPv6 RA guard policy to a subinterface.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

115

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

Example:

The following example applies an IPv6 RA guard policy to a subinterface. This policy (configured in the
previous example) causes all IPv6 RA messages received on the subinterface to be discarded.

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/4 subinterface 2 ra-guard
    interface ethernet-1/4 {
        subinterface 2 {
            ra-guard {
                policy "Discard all"
            }
        }
    }

If the subinterface has VLANs configured, you can specify a list of VLANs to which the IPv6 RA guard
policy applies. If a VLAN list is specified, the IPv6 RA guard policy applies only to those VLANs, not to any
others configured on the subinterface. If VLAN list is not specified, the policy applies to all VLANs on the
subinterface.

Example

On a default bridged subinterface, where the vlan encap single-tagged vlan-id any setting is
configured, a VLAN list must be specified with the IPv6 RA guard policy. For example:

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/4 subinterface 2
    interface ethernet-1/4 {
        subinterface 2 {
            admin-state enable
            type bridged
            vlan {
                encap {
                    single-tagged {
                        vlan-id any
                        }
                    }
                }
            }
            ra-guard {
                policy rag1
                vlan-list 10 {
                }
            }
        }
    }

8.14 Interface port speed configuration

By default, ports on SR Linux devices operate at the speeds listed in Table 6: Default and supported port
speeds for SR Linux devices. You can optionally configure ports to operate a different speed as long as
that speed is supported for the port. On all devices, the Mgmt ports operate at 1G.

On 7220 IXR-D1 systems, it is possible to configure auto-negotiation for the port. See Configuring link
auto-negotiation (7220 IXR-D1 only).

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

116

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

Table 6: Default and supported port speeds for SR Linux devices

SR Linux Device

Port range

Default port speed

Supported port speeds

7250 IXR

IMM ports 1-32

100G

40G, 100G

Note: Ports 9-12 cannot operate at different
port speeds (some at 40G and others at
100G). The required speed of ports 9-12
is based on the port-speed of the lowest-
numbered configured port in this block; if
any higher-numbered port in the block is
configured with a different port speed that
port does not come up.

IMM ports 33-36

100G

40G, 100G, 400G

7220 IXR-D1

Ports 1-48

Ports 49-52

7220 IXR-D2

Ports 1-48

Ports 49-56

7220 IXR-D3

Ports 1-2

1G

10G

25G

100G

10G

ethernet-1/[3-34]

100G

ethernet-1/[3-33]/n

none

7220 IXR-H2

Ports 1-128

7220 IXR-H3

Ports 1-2

Ports 3-34

100G

10G

400G

10M, 100M, 1G

10G

1G, 10G, 25G

Note: If one port in each consecutive group
of 4 ports (1-4, 5-8, and so on) is 25G, the
other 3 ports must also be 25G. If one port
in each consecutive group of 4 ports is 1G
or 10G, the other 3 ports must also be 1G or
10G.

40G, 100G

10G

40G, 100G

10G, 25G

100G

10G

40G, 100G, 400G

8.14.1 Configuring interface port speed

The following example configures the port speed for an interface.

Example:

--{ * candidate shared default }--[  ]--
# info from state interface ethernet-1/1
    interface ethernet-1/1 {
        ethernet {

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

117

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

            port-speed 100G
            }
        }
    }

8.14.2 Configuring link auto-negotiation (7220 IXR-D1 only)

For ports 1-48 on 7220 IXR-D1 systems, you can configure the interface to use auto-negotiation for the
speed, duplex, and flow-control settings. Table 7: Port speed negotiation for RJ-45 ports (7220 IXR-
D1 systems) lists how the auto-negotiation setting inter-operates with the port-speed configured for the
interface.

Table 7: Port speed negotiation for RJ-45 ports (7220 IXR-D1 systems)

auto-
negotiate
parameter
setting

false

false

Port speed
parameter
configured?

No

Yes

true (default)

No

true (default)

Yes

Example:

Port speed behavior

Bring up the port at the default speed of 1G.

Bring up the port at the configured speed of 10M,
100M or 1G if the other side is configured for the
same speed; otherwise, the port state is oper-down.

All speeds are advertised as supported, and the
actual speed is the highest common value between
the two sides.

The configured port speed is the only speed
advertised. If the port at the other side of the link
advertises this speed as well, the link comes up;
otherwise it stays down.

The following example configures auto-negotiation and port speed for a port on a 7220 IXR-D1 system.
In this example, a port speed is configured, and the auto-negotiation setting is enabled. The SR Linux
advertises the configured port speed to the other end of the link. If the other port also advertises this
speed, then the link is established; otherwise, the port state is oper-down.

--{ * candidate shared default }--[  ]--
# info from state interface ethernet-1/1
    interface ethernet-1/1 {
        ethernet {
            auto-negotiate true
            port-speed 100M
            }
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

118

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

8.15 Interface hold-timers

You can configure hold-timers that keep an interface operationally enabled or disabled for a specified
amount of time following an event that brings the interface up or shuts the interface down.

For example, you can configure a hold-timer that keeps an interface operationally disabled for a period of
time following a system reboot, and you can configure a hold-timer that keeps an interface operationally
enabled for a period of time after the interface goes down.

The main use for hold-timers is to reduce the number of link transitions and advertise/withdraw messages
in networks where there are flapping optics.

You can configure a hold-time up timer and a hold-time down timer for an interface:

• hold-time up timer

This timer specifies the amount of time an interface is kept operationally disabled following an event that
would normally enable it, such as entering the interface admin-state enable command or a system
reboot.

The interface remains disabled from the time the event occurs until the hold-time up timer expires.
While the hold-time up timer is running, the transceiver is enabled but the system does not consider the
interface operationally up until the timer expires.

• hold-time down timer

This timer specifies the amount of time an interface remains operationally enabled following an
event that brings the interface down. When triggered, the hold-time down timer keeps the interface
operationally enabled until the timer expires. Entering the interface admin-state disable command
does not trigger the hold-time down timer, nor does internal events such as fabric unavailability.

If you manually disable the interface while the hold-time down timer is running, the interface is disabled
immediately, and the timer is aborted.

The hold-timers can be set to a value from 1-86,400 seconds. There is no default value; if not configured,
no hold-time is considered when an interface changes state.

The hold-timers are available for Ethernet interfaces only, including those that are part of a LAG. You
cannot configure a hold-timer for an interface in breakout mode.

The hold-timer does not affect the port LED color, which reflects the physical status of the port; that is, the
port LED is green when the hold-time up timer is running, and solid amber when the hold-time down timer
is running.

8.15.1 Configuring interface hold timers

To configure hold-timers for an interface, you specify a time value from 1-86,400 seconds for the hold-time
up and/or hold-time down timers.

Example:

The following example configures a hold-time up and a hold-time down timer for an interface.

In this example, when the interface is enabled, it remains operationally disabled for 200 seconds, until the
hold-time up timer expires. When the interface becomes disabled, it remains operationally enabled for 100
seconds, until the hold-time down timer expires.

--{ candidate shared default }--[  ]--
# info interface ethernet-1/1 ethernet

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

119

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

    interface ethernet-1/1 {
        ethernet {
            hold-time {
                up 200
                down 100
            }
        }
    }

Example

When a hold-timer is in effect, you can use the info from state command to display the amount of time
remaining. For example:

--{ running }--[  ]--
# info from state interface ethernet-1/1 ethernet hold-time
    interface ethernet-1/1 {
        ethernet {
            hold-time {
                up 200
                down 100
                up-expires 85 seconds from now
            }
        }
    }

In addition, when the hold-time up timer is in effect, the port-oper-down-reason for the interface is
shown as interface-hold-time-up-active.

8.16 Reload-delay timer

After the system boots, the reload-delay timer keeps an interface shut down with the laser off for a
configured amount of time until connectivity with the rest of network is established. When applied to an
access multi-homed interface (typically an Ethernet Segment interface), this delay can prevent black-holing
traffic coming from the multi-homed server or CE.

When a reload-delay timer is configured, the interface port is shut down and the laser is turned off from the
time that the system determines the interface state following a reboot or reload of the XDP process, until
the number of seconds specified in the reload-delay timer elapse.

The reload-delay timer is only supported on Ethernet interfaces that are not enabled with breakout
mode. For a multi-homed LAG interface, the reload-delay timer should be configured on all the interface
members. The reload-delay timer can be from 1-86,400 seconds. There is no default value; if not
configured for an interface, there is no reload-delay timer.

Only ES interfaces should be configured with a non-zero reload-delay timer. Single-homed interfaces and
network interfaces (used to forward VXLAN traffic) should not have a reload-delay timer configured.

The following example sets the reload-delay timer for an interface to 20 seconds. The timer starts following
a system reboot or when the IMM is reconnected, and the system determines the interface state. During
the timer period, the interface is deactivated and the port laser is inactive.

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/1
    interface ethernet-1/1 {
        admin-state enable
        ethernet {

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

120

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

            reload-delay 20
        }
    }

When the reload-delay timer is running, the port-oper-down-reason for the port is shown as
interface-reload-timer-active. The reload-delay-expires state indicates the amount of time
remaining until the port becomes active. For example:

--{ running }--[  ]--
# info from state interface ethernet-1/1
    interface ethernet-1/1 {
        description eth_seg_1
        admin-state enable
        mtu 9232
        loopback-mode false
        ifindex 671742
        oper-state down
        oper-down-reason interface-reload-time-active
        last-change "51 seconds ago"
        vlan-tagging true
        ...
        ethernet {
            auto-negotiate false
            lacp-port-priority 32768
            port-speed 100G
            hw-mac-address 00:01:01:FF:00:15
            reload-delay 20
            reload-delay-expires "18 seconds from now"
            flow-control {
                receive false
                transmit false
            }
        }
    }

8.16.1 Configuring the reload-delay timer for an interface

To configure the reload-delay timer for an interface, you specify a timer value from 1-86,400 seconds. The
timer starts following a system reboot or when the IMM is reconnected, and the system determines the
interface state. During the timer period, the interface is deactivated and the port laser is inactive. You can
display information about an active reload-delay timer by entering the info from state command for the
interface.

Example:

The following example sets the reload-delay timer for an interface to 20 seconds.

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/1
    interface ethernet-1/1 {
        ethernet {
            reload-delay 20
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

121

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Interfaces

Example

When the reload-delay timer is running, the port-oper-down-reason for the port is shown as
interface-reload-timer-active. The reload-delay-expires state indicates the amount of time
remaining until the port becomes active. For example:

--{ running }--[  ]--
# info from state interface ethernet-1/1
    interface ethernet-1/1 {
        description eth_seg_1
        admin-state enable
        mtu 9232
        loopback-mode false
        ifindex 671742
        oper-state down
        oper-down-reason interface-reload-time-active
        last-change "51 seconds ago"
        vlan-tagging true
        ...
        ethernet {
            auto-negotiate false
            lacp-port-priority 32768
            port-speed 100G
            hw-mac-address 00:01:01:FF:00:15
            reload-delay 20
            reload-delay-expires "18 seconds from now"
            flow-control {
                receive false
                transmit false
            }
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

122

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Network-instances

9 Network-instances

On the SR Linux device, you can configure one or more virtual routing instances, known as ‟network-
instances”. Each network-instance has its own interfaces, its own protocol instances, its own route table,
and its own FIB.

When a packet arrives on a subinterface associated with a network-instance, it is forwarded according to
the FIB of that network-instance. Transit packets are normally forwarded out another subinterface of the
network-instance.

The SR Linux supports three types of network-instances: default, ip-vrf, and mac-vrf. Type default is the
default network-instance and only one of this type is supported. Type ip-vrf is the regular network-instance;
you can create multiple network-instances of this type.

Type mac-vrf functions as a broadcast domain and is associated with an ip-vrf network-instance via an
Integrated Routing and Bridging (IRB) to support tunneling of Layer 2 traffic across an IP network. See
mac-vrf network-instance.

Initially, the SR Linux has a default network-instance and no ip-vrf or mac-vrf network-instances.

A management network-instance, which isolates management network traffic from other network-instances
configured on the device, is created by default, with the mgmt0 port automatically added to it. See
Configuring the management network-instance and Interfaces.

9.1 Basic network-instance configuration

The following example creates network-instance ‟black” and associates two network subinterfaces and one
loopback subinterface with it.

The configuration administratively enables the network-instance, specifies a description, and assigns it a
router ID. The router ID is optional and is used as a default router identifier for protocols running within the
network-instance.

The network-instance is configured to export routes and neighbors to the Linux routing table.

--{ candidate shared default }--[  ]--
# info network-instance black
 network-instance black {
        description "Sample network instance" 
        type ip-vrf
        admin-state enable
        router-id 1.1.1.1
        interface ethernet-1/1.1 {
        }
        interface ethernet-1/2.1 {
        }
        interface lo0.1 {
        }
        protocols {
            linux {
                export-routes true
                export-neighbors true
            }
        ip-forwarding {

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

123

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Network-instances

                receive-ipv4-check true
        }
 }

In the preceding example, the receive-ipv4-check parameter is set to true; if an IPv4 packet is received
on a subinterface of this network-instance, and the IPv4 operational status of the subinterface is down,
then the packet is discarded. When the receive-ipv4-check parameter is set to false, IPv4 packets are
received on all subinterfaces of this network-instance that are up, even if they do not have IPv4 addresses.

9.2 Path MTU discovery

Path MTU discovery is the technique for determining the MTU size on the network path between hosts. On
the SR Linux, path MTU discovery is enabled by default for all network-instances, and can be manually
enabled or disabled per network-instance.

If path MTU discovery is disabled, the system drops the MTU for the session to the number of bytes
specified by the min-path-mtu parameter when an ICMP fragmentation-needed message is received; by
default the min-path-mtu setting is 552 bytes.

--{ * candidate shared default }--[  ]--
# info network-instance black
   network-instance black  {
     mtu {
       path-mtu-discovery true
       min-path-mtu 552
      }
   }

9.3 Static routes

Within a network-instance, you can configure static routes. Each static route is associated with an IPv4
prefix or an IPv6 prefix, which represents the packet destinations matched by the static route. Each static
route belongs to a specific network-instance. Different network-instances can have overlapping routes
(static or otherwise) because each network-instance installs its own routes into its own set of route tables
and FIBs.

Each static route must be associated with a statically configured next-hop group, which determines how
matching packets are handled: either perform a blackhole discard action or a forwarding action. The next-
hop group can specify a list of one or more next-hops (up to 128), each identified by an IPv4 or IPv6
address and a resolve flag. If the resolve flag is set to false, only a direct route can be used to resolve the
IPv4 or IPv6 next-hop address; if the resolve flag is set to true, any route in the FIB can be used to resolve
the IPv4 or IPv6 next-hop address.

Each static route has a specified metric and preference. The metric is the IGP cost to reach the
destination. The preference specifies the relative degree this static route is preferred compared to other
static and non-static routes available for the same IP prefix in the same network-instance.

A static route is installed in the FIB for the network-instance if the following conditions are met:

• The route has the lowest preference value among all routes (static and non-static) for the IP prefix.

• The route has the lowest metric value among all static routes for the IP prefix.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

124

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Network-instances

If BGP is running in a network-instance, all static routes of that same network-instance are automatically
imported into the BGP local RIB, so that they can be redistributed as BGP routes, subject to BGP export
policies.

You can use BFD to monitor reachability between the router and the configured next hops for a static route,
making BFD sessions between the local router and the defined next hops a condition for an associated
static route and next hops to be operationally active. See Configuring failure detection for static routes.

9.3.1 Configuring static routes

To configure static routes, you specify route prefixes to point to next-hop groups, along with the metric and
preference.

Example:

The following example configures IPv4 and IPv6 static route prefixes to point to next-hop groups and
specifies a preference and metric for each one:

--{ * candidate shared default }--[ network-instance black ]--
# info static-routes
        static-routes {
            route 192.168.18.0/24 {
                admin-state enable
                metric 1
                preference 5
                next-hop-group static-ipv4-grp
            }
            route 2001:1::192:168:18:0/64 {
                admin-state enable
                metric 1
                preference 6
                next-hop-group static-ipv6-grp
            }
        }

Example

The following example configures the next-hop groups for the static routes:

--{ * candidate shared default }--[ network-instance black ]--
# info next-hop-groups
        next-hop-groups {
            group static-ipv4-grp {
                admin-state enable
                nexthop 1 {
                    ip-address 172.16.0.22
                }
                nexthop 2 {
                    ip-address 172.16.0.45
                    resolve true
                }
            }
            group static-ipv6-grp {
                admin-state enable
                blackhole {
                }
            }
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

125

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Network-instances

In the preceding example, an IPv4 next-hop group is configured with two next-hops. The resolve true
setting allows any route in the FIB to be used to resolve the IPv4 next-hop address, provided the resolution
depth is not more than 2.

The IPv6 next-hop group is configured to perform a blackhole discard action for matching packets.

9.3.2 Configuring failure detection for static routes

BFD can be used as a failure detection mechanism for monitoring the reachability of next hops for static
routes. When BFD is enabled for a static route, it makes an active BFD session between the local router
and the defined next hops required as a condition for a static route to be operationally active.

BFD is enabled for specific next-hop groups; as a result, BFD is enabled for any static route that refers
to the next-hop group. If multiple next hops are defined within the next-hop group, a BFD session is
established between the local address and each next hop in the next-hop group.

A static route is considered operationally up if at least one of the configured next-hop addresses can
establish a BFD session. If the BFD session fails, the associated next hop is removed from the FIB as an
active next hop.

Example:

The following example enables BFD for a static route next-hop:

--{ * candidate shared default }--[ network-instance black ]--
# info next-hop-groups
    next-hop-groups {
        group static-ipv4-grp {
            admin-state enable
            nexthop 1 {
                failure-detection {
                    enable-bfd {
                        local-address 1.2.34.5
                    }
                }
            }
        }
    }

A BFD session is established between the address configured with the local-address parameter and each
next-hop address before that next-hop address is installed in the forwarding table.

All next-hop BFD sessions share the same timer settings, which are taken from the BFD configuration for
the subinterface where the address in local-address parameter is configured. See BFD.

9.4 Aggregate routes

You can specify aggregate routes for a network-instance. Each aggregate route is associated with an IPv4
prefix or an IPv6 prefix, which represents the packet destinations matched by the aggregate route. As
with static routes, each aggregate route belongs to a specific network-instance, though different network-
instances can have overlapping routes because each network-instance installs its own routes into its own
set of route tables and FIBs.

An aggregate route can become active when it has one or more contributing routes. A route contributes to
an aggregate route if all of the following conditions are met:

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

126

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Network-instances

• The prefix length of the contributing route is greater than the prefix length of the aggregate route.

• The prefix bits of the contributing route match the prefix bits of the aggregate route up to the prefix

length of the aggregate route.

• There is no other aggregate route that has a longer prefix length that meets the previous two conditions.

• The contributing route is actively used for forwarding and is not an aggregate route itself.

That is, a route can only contribute to a single aggregate route, and that aggregate route cannot recursively
contribute to a less-specific aggregate route.

Aggregate routes have a fixed preference value of 130. If there is no route to the aggregate route prefix
with a numerically lower preference value, then the aggregate route, when activated by a contributing
route, is installed into the FIB with a blackhole next-hop. It is not possible to install an aggregate route into
the route-table or as a BGP route without also installing it in the FIB.

The aggregate routes are commonly advertised by BGP or another routing protocol so that the individual
contributing routes no longer need to be advertised.

This can speed up routing convergence and reduce RIB and FIB sizes throughout the network. If BGP
is running in a network-instance, all active aggregate routes of that network-instance are automatically
imported into the BGP local RIB so they can be redistributed as BGP routes, subject to BGP export
policies.

9.4.1 Configuring aggregate routes

The following example specifies an aggregate route. The aggregator address setting identifies the
aggregating router. By default, this is the configured router ID of the BGP instance, or 0 if BGP is not
enabled.

Example:

--{ * candidate shared default }--[ network-instance black ]--
# info aggregate-routes
        aggregate-routes {
            route 172.16.0.0/24 {
                aggregator {
                    address 1.1.1.1
                }
                summary-only true
                generate-icmp true
            }
        }

When the summary-only parameter is set to true, activation of an aggregate route automatically blocks
the advertisement of all of its contributing routes by BGP.

The generate-icmp true setting causes the router to generate ICMP unreachable messages for the
dropped packets.

9.5 Route preferences

A route can be learned by the router from different protocols, in which case, the costs are not comparable.
When a route is learned from different protocols, the preference value is used to decide which route is

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

127

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Network-instances

installed in the forwarding table if several protocols calculate routes to the same destination. The route with
the lowest preference value is selected.

Different protocols should not be configured with the same preference. If protocols are configured with the
same preference, the tiebreaker is per the default preference table as defined in Table 8: Route preference
defaults by route type. If multiple routes are learned with an identical preference using the same protocol,
the lowest cost route is used.

Table 8: Route preference defaults by route type

Route Type

Preference

Configurable

Direct attached

Static routes

OSPF internal

IS-IS level 1 internal

IS-IS level 2 internal

OSPF external

IS-IS level 1 external

IS-IS level 2 external

BGP

Note:

0

5

10

15

18

150

160

165

170

No

Yes

Yes1

Yes

Yes

Yes

Yes

Yes

Yes

1. Preference for OSPF internal routes is configured with the preference command.

9.6 Displaying network-instance status

Use the show network-instance command to display status information about network-instances
configured on the device.

Example:

To display information about all configured network-instances, including the router ID, description,
administrative and operational state:

--{ show }--
# show network-instance summary
+---------+---------+--------+-------+------------+--------------------------------+
|  Name   |  Type   | Admin  | Oper  | Router id  |   Description                  |
|         |         | state  | state |            |                                |
+=========+=========+========+=======+============+================================+
| default | default | enable | up    | 5.5.5.5    | Sample network instance        |
| mgmt    | ip-vrf  | enable | up    |            | Management network instance    |
| red     | ip-vrf  | enable | up    |55.55.55.55 | Network instance for bgp tests |
+---------+---------+--------+-------+------------+--------------------------------+

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

128

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Network-instances

Example

To limit the display to a single network-instance:

--{ show }--
# show network-instance default summary
+---------+---------+--------+-------+---------+----------------------------+
|  Name   |  Type   | Admin  | Oper  | Router  |         Description        |
|         |         | state  | state |   id    |                            |
+=========+=========+========+=======+=========+============================+
| default | default | enable | up    | 5.5.5.5 | "Sample network instance"  |
+---------+---------+--------+-------+---------+----------------------------+

Example

To display information about the interfaces attached to a network-instance:

--{ show }--
# show network-instance default interfaces
===================================================================
Net instance    : default
Interface       : ethernet-1/1.1
Oper state      : up
Ip mtu          : 1500
                  Prefix                      Origin        Status
  =================================================================
  192.35.1.0/31                             static
  2001:192:35:1::/127                       static       preferred
  fe80::201:5ff:feff:0/64                   link-layer   preferred
===================================================================
Net instance    : default
Interface       : lo0.1
Oper state      : up
                  Prefix                      Origin        Status
  =================================================================
  5.5.5.5/32                                static
  2001:5:5:5::5/128                         static       preferred
===================================================================

The command displays the operational state, IP MTU, and assigned IPv4/IPv6 prefix for each interface. If
the operational state for an interface is down, the reason for the interface being down is shown.

9.7 mac-vrf network-instance

The network instance type mac-vrf is associated with a network-instance of type default or ip-vrf via an
Integrated Routing and Bridging (IRB) interface.

The mac-vrf network-instance type functions as a broadcast domain. Each mac-vrf network-instance
builds a bridge table composed of MAC addresses that can be learned via the data path on network-
instance interfaces or via static configuration. You can configure the size of the bridge table for each mac-
vrf network instance, as well as the aging for dynamically learned MAC addresses and other parameters
related to the bridge table.

The mac-vrf network-instance type features a mac duplication mechanism that monitors MAC address
moves across network-instance interfaces and across interfaces.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

129

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Network-instances

9.7.1 MAC selection

Each mac-vrf network-instance builds a bridge table to forward Layer 2 frames based on a MAC address
lookup. The SR Linux selects the MAC addresses to be sent for installation to the line card (XDP), based
on the following priority:

1. Local application MACs

2. Local static MACs

3. EVPN static (MACs coming from a MAC/IP route with the static bit set)

4. Local duplicate MACs

5. Learned or EVPN-learned MACs

9.7.2 MAC duplication detection and actions

MAC duplication is the mechanism used by SR Linux for loop prevention. MAC duplication monitors MAC
addresses that move between subinterfaces. It consists of detection, actions, and process restarts.

9.7.2.1 MAC duplication detection

Detection of duplicate MAC addresses is necessary when extending broadcast domains to multiple leaf
nodes. SR Linux supports a MAC duplication mechanism that monitors MAC address moves across
network-instance interfaces.

A MAC address is considered a duplicate when its number of detected moves is greater than a configured
threshold within a configured time frame where the moves are observed. Upon exceeding the threshold,
the system holds on to the prior local destination of the MAC and executes an action.

9.7.2.2 MAC duplication actions

The action taken upon detecting one or more MAC addresses as duplicate on a subinterface can be
configured for the mac-vrf network instance or for the subinterface. The following are the configurable
actions:

• oper-down – When one or more duplicate MAC addresses are detected on the subinterface, the

subinterface is brought operationally down.

• blackhole – upon detecting a duplicate mac on the subinterface, the mac will be blackholed.

• stop learning – Upon detecting a duplicate mac on the subinterface, the MAC address will not be

relearned anymore on this or any subinterface. This is the default action for a mac-vrf network instance.

• use-network-instance-action – (Available for subinterfaces only) Use the action specified for the mac-

vrf network instance. This is the default action for a subinterface.

9.7.2.3 MAC duplication process restarts

When at least one duplicate MAC address is detected, the duplicate MAC addresses are visible in the
state datastore and can be displayed with the info from state mac-duplication duplicate-entries CLI
command.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

130

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Network-instances

9.7.2.4 Configurable hold-down-time

The info from state mac-duplication duplicate-entries command also displays the hold-down-time for
each duplicate MAC address. When the hold-down-time expires for all of the duplicate MAC addresses
for the subinterface, the oper-down or stop-learning action is cleared, and the subinterface is brought
operationally up or starts learning again.

The hold-down-time is configurable from between 2 and 60 minutes. You can optionally specify indefinite
for the hold-down-time, which prevents the oper-down or stop-learning action from being cleared after a
duplicate MAC address is detected; in this case, you can manually clear the oper-down or stop-learning
action by changing the mac-duplication configuration or using the tools network-instance bridge-table
mac-duplication command.

9.7.3 Bridge table configuration

The bridge table, its MAC address limit, and maximum number of entries can be configured on a per mac-
vrf or per-subinterface basis.

When the size of the bridge table exceeds its maximum number of entries, the MAC addresses are
removed in reverse order of the priority listed in MAC selection.

You can also configure aging for dynamically learned MAC addresses and other parameters related to the
bridge table.

9.7.3.1 Deleting entries from the bridge table

The SR Linux features commands to delete duplicate or learned MAC entries from the bridge table. For
a mac-vrf or subinterface, you can delete all MAC entries, MAC entries with a blackhole destination, or a
specific MAC entry.

Example:

The following example clears MAC entries in the bridge table for a mac-vrf network instance that have a
blackhole destination:

--{ candidate shared default }--[  ]-- 
# tools network-instance mac-vrf-1 bridge-table mac-duplication delete-blackhole-macs

Example

The following example deletes a specified learned MAC address from the bridge table for a mac-vrf
network instance:

--{ candidate shared default }--[  ]-- 
# tools network-instance mac-vrf-1 bridge-table mac-learning delete-mac 00:00:00:00:00:04

Example

The following example clears all duplicate MAC entries in the bridge table for a subinterface:

--{ candidate shared default }--[  ]-- 
# tools interface ethernet-1/1.1 bridge-table mac-duplication delete-all-macs

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

131

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Network-instances

9.7.4 mac-vrf network instance configuration

The following example configures a mac-vrf network instance and settings for the bridge table. The bridge
table is set to a maximum of 500 entries. Learned MAC addresses are aged out of the bridge table after
600 seconds.

MAC duplication detection is configured so that a MAC address is considered a duplicate when its number
of detected moves across network instance interfaces is greater than 3 over a 5-minute interval. In this
example, the MAC address is blackholed. After the hold-down-time of 3 minutes, the MAC address is
flushed from the bridge table, and the monitoring process for the MAC address is restarted.

The example includes configuration for a static MAC address in the bridge table.

The mac-vrf network instance is associated with a bridged interface and an IRB interface.

--{ candidate shared default }--[  ]--
# info network-instance mac-vrf-1
 network-instance mac-vrf-1 {
        description "Sample mac-vrf network instance" 
        type mac-vrf
        admin-state enable
        interface ethernet-1/1.1 {
        }
        interface irb1.1 {
        }
        bridge-table {
            mac-limit {
                mac-limit 500
            }
            mac-learning {
                admin-state enable
                aging {
                    admin-state enable
                    age-time 600
                }
            }
            mac-duplication {
                admin-state enable
                monitoring-window 5
                num-moves 3
                hold-down-time 3
                action blackhole
            static-mac {
                address [mac1
                }
            }
            }
        }
 }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

132

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

OSPF

10 OSPF

Open Shortest Path First (OSPF) is a hierarchical link state protocol. OSPF is an interior gateway protocol
(IGP) used within large autonomous systems (ASs). OSPF routers exchange state, cost, and other
relevant interface information with neighbors. The information exchange enables all participating routers to
establish a network topology map. Each router applies the Dijkstra algorithm to calculate the shortest path
to each destination in the network. The resulting OSPF forwarding table is submitted to the routing table
manager to calculate the routing table.

When a router is started with OSPF configured, OSPF, along with the routing-protocol data structures, is
initialized and waits for indications from lower-layer protocols that its interfaces are functional.

The hierarchical design of OSPF allows a collection of networks to be grouped into a logical area. An
area’s topology is concealed from the rest of the AS which significantly reduces OSPF protocol traffic. With
the correct network design and area route aggregation, the size of the route table can be greatly reduced,
resulting in decreased OSPF route calculation time and topological database size.

Routers that belong to more than one area are called area border routers (ABRs). An ABR maintains a
separate topological database for each area it is connected to. Every router that belongs to the same area
has an identical topological database for that area.

Key OSPF areas are:

• Backbone Areas – The backbone distributes routing information between areas.

• Stub areas – A designated area that does not allow external route advertisements. Routers in a stub
area do not maintain external routes. A single default route to an ABR replaces all external routes.

• Not-So-Stubby Areas (NSSAs) – NSSAs are similar to stub areas in that no external routes are

imported into the area from other OSPF areas. External routes learned by OSPF routers in the NSSA
area are advertised as type-7 LSAs within the NSSA area and are translated by ABRs into type-5
external route advertisements for distribution into other areas of the OSPF domain.

10.1 OSPF global configuration

The minimal OSPF parameters that should be configured to deploy OSPF are:

• OSPF version

SR Linux supports OSPF version 2 and version 3. The OSPF version number must be specified in the
configuration. If configuring OSPFv3, you must also specify the address family to be used, either IPv4
or IPv6.

• OSPF instance ID (when configuring multiple instances)

An OSPF instance ID must be defined when configuring multiple instances or the instance being
configured is not the base instance. If an instance ID is not configured, the default instance IDs are as
follows:

– 0 for OSPFv2

– 0 for OSPF v3 with address family IPv6 unicast

– 64 for OSPF v3 with address family IPv4 unicast

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

133

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

OSPF

• Router ID

Each router running OSPF must be configured with a unique router ID. The router ID is used by both
OSPF and BGP routing protocols in the routing table manager.

When you configure a new router ID, OSPF is automatically disabled and re-enabled to initialize the
new router ID.

• An area

At least one OSPF area must be created. An interface must be assigned to each OSPF area.

•

Interfaces

An interface is the connection between a router and one of its attached networks. An interface has
state information associated with it, which is obtained from the underlying lower level protocols and the
routing protocol itself. An interface to a network has associated with it a single IP address and mask
(unless the network is an unnumbered point-to-point network). An interface is sometimes also referred
to as a link.

10.1.1 Configuring basic OSPF parameters

To create a basic OSPF configuration, the minimal OSPF parameters required are the following:

• OSPF version number, either v2 or v3. If configuring OSPFv3, you must specify the address family,

either IPv4 or IPv6.

• A router ID

• One or more areas

•

Interfaces

Example:

The following is an example of a basic OSPFv2 configuration:

--{ * candidate shared default }--[ network-instance default protocols ]--
# info ospf
    ospf {
        instance default {
            admin-state enable
            version ospf-v2
            router-id 1.1.1.1
            area 0.0.0.1 {
                interface ethernet-1/1.1 {
                    interface-type broadcast
                }
                interface ethernet-1/2.1 {
                    interface-type broadcast
                }
                interface ethernet-1/16.1 {
                    interface-type broadcast
                }
                interface lo0.1 {
                    interface-type broadcast
                }
            }
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

134

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

OSPF

Example

The following is an example of a basic OSPFv3 configuration.

--{ * candidate shared default }--[ network-instance default protocols ]--
# info ospf
    ospf {
        instance default {
            admin-state enable
            version ospf-v3
            address-family ipv6-unicast
            router-id 1.1.1.1
            area 0.0.0.1 {
                interface ethernet-1/1.1 {
                    interface-type broadcast
                }
                interface ethernet-1/2.1 {
                    interface-type broadcast
                }
                interface ethernet-1/16.1 {
                    interface-type broadcast
                }
                interface lo0.1 {
                    interface-type broadcast
                }
            }
        }
    }

10.1.2 Configuring the router ID

The router ID, expressed like an IP address, uniquely identifies the router within an AS. In OSPF, routing
information is exchanged between ASs, groups of networks that share routing information. It can be set
to be the same as the loopback (system interface) address. Subscriber services also use this address as
far-end router identifiers when service distribution paths (SDPs) are created. The router ID is used by both
OSPF and BGP routing protocols.

When you configure a new router ID, OSPF is automatically disabled and re-enabled to initialize the new
router ID.

The router ID can be configured either at the network-instance level or at the OSPF protocol level. If a
router ID is configured at the OSPF protocol level, OSPF uses it instead of the router ID configured at the
network-instance level.

Example:

The following example configures a router ID at the network-instance level. OSPF uses this router ID
unless a different router ID is configured at the OSPF protocol level.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        router-id 10.10.10.104{
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

135

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

OSPF

Example

The following example configures a router ID for the OSPF instance at the OSPF protocol level:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            ospf {
                instance default {
                    version ospf-v2
                    router-id 2.2.2.2
                }
            }
        }
    }

10.1.3 Configuring an area

An OSPF area consists of routers configured with the same area ID. To include a router in a specific area,
the common area ID must be assigned and an interface identified.

If your network consists of multiple areas, you must also configure a backbone area (0.0.0.0) on at least
one router. The backbone comprises the area border routers and other routers not included in other
areas. The backbone distributes routing information between areas. The backbone is considered to be a
participating area within the autonomous system. To maintain backbone connectivity, there must be at least
one interface in the backbone area.

The minimal configuration must include an area ID and an interface. Modifying other command parameters
are optional.

Example:

The following example configures an area at the OSPF level:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
    protocols {
        ospf {
            instance default {
                version ospf-v2
                area 1.1.1.1 {
                }
            }
        }
    }

10.1.4 Configuring a stub area

You can configure stub areas to control external advertisement flooding and to minimize the size of the
topological databases on an area's routers. A stub area cannot also be configured as an NSSA. By default,
summary route advertisements are sent into stub areas.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

136

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

OSPF

Example:

The following example configures an OSPF stub area:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
    protocols {
        ospf {
            instance default {
                version ospf-v2
                area 1.1.1.1 {
                    stub {
                    }
                }
            }
        }
    }

10.1.5 Configuring a Not-So-Stubby area

You can explicitly configure an area to be a Not-So-Stubby Area (NSSA). NSSAs are similar to stub areas
in that no external routes are imported into the area from other OSPF areas. An NSSA has the capability to
flood external routes it learns throughout its area and by an area border router to the entire OSPF domain.
An area cannot be both a stub area and an NSSA.

Example:

The following is an OSPF NSSA configuration example:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
    protocols {
        ospf {
            instance default {
                version ospf-v2
                area 1.1.1.1 {
                    nssa {
                    }
                }
            }
        }
    }

10.1.6 Configuring an interface

You can configure an interface to act as a connection between a router and one of its attached networks.
An interface includes state information that was obtained from underlying lower level protocols and from
the routing protocol itself. An interface to a network is associated with a single IP address and mask
(unless the network is an unnumbered point-to-point network). If the address is merely changed, then the
OSPF configuration is preserved.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

137

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

OSPF

Example:

The following is an OSPF interface configuration example:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
    protocols {
        ospf {
            instance default {
                version ospf-v2
                area 1.1.1.1 {
                    interface ethernet-1/2 {
                    }
                }
            }
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

138

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

11 BGP

Border Gateway Protocol (BGP) is an inter-AS routing protocol. An AS (autonomous system) is a network
or a group of routers logically organized and controlled by common network administration. BGP enables
routers to exchange network reachability information, including information about other ASs that traffic
must traverse to reach other routers in other ASs.

ASs share routing information, such as routes to each destination and information about the route or AS
path, with other ASs using BGP. Routing tables contain lists of known routers, reachable addresses, and
associated path cost metrics for each router. BGP uses the information and path attributes to compile a
network topology.

To set up BGP routing, participating routers must have BGP enabled, and be assigned to an AS, and the
neighbor (peer) relationships must be specified. A router typically belongs to only one AS.

This section describes the minimal configuration necessary to set up BGP on SR Linux. This includes the
following:

• Global BGP configuration, including specifying the autonomous system number (ASN) of the router, as

well as the router ID.

• BGP peer group configuration, which specifies settings that are applied to BGP neighbor routers in the

peer group.

• BGP neighbor configuration, which specifies the peer group to which each BGP neighbor belongs, as

well as settings specific to the neighbor, including the AS to which the router is peered.

For information about all other BGP settings, see the SR Linux online help, as well as the SR Linux
Advanced Solutions Guide and the SR Linux Data Model Reference.

11.1 BGP global configuration

Global BGP configuration includes specifying the autonomous system number (ASN) of the router and the
router ID.

11.1.1 Configuring an ASN

An autonomous system number (ASN) is a globally unique value that associates a router to a specific AS.
Each router participating in BGP must have an ASN specified.

Example:

The following example configures an ASN for a router:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                autonomous-system 65002
            }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

139

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

        }
    }

11.1.2 Configuring the router ID

The router ID, expressed like an IP address, uniquely identifies the router and indicates the origin of a
packet for routing information exchanged between autonomous systems. The router ID is configured at the
BGP level.

Example:

The following example configures a router ID:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                router-id 2.2.2.2
        }
    }

11.2 Configuring a BGP peer group

A BGP peer group is a collection of related BGP neighbors. The group name should be a descriptive name
for the group.

All parameters configured for a peer group are inherited by each peer (neighbor) in the peer group, but a
group parameter can be overridden for specific neighbors in the configuration of that neighbor.

Example:

The following example configures the administrative state and trace options for a BGP peer group. These
settings apply to all of the BGP neighbors that are members of this group, unless specifically overridden in
the neighbor configuration.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                group headquarters1 {
                    admin-state enable
                    traceoptions {
                        flag events {
                        }
                        flag graceful-restart {
                        }
                    }
                }
            }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

140

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

11.3 Configuring BGP neighbors

After you configure a BGP group name and assign options, you can add neighbors within the same
autonomous system to create internal BGP (iBGP) connections and/or neighbors in different autonomous
systems to create external BGP (eBGP) peers. All parameters configured for the peer group to which the
neighbor is assigned are applied to the neighbor, but a group parameter can be overridden on a specific
neighbor basis.

Example:

The following example configures parameters for two BGP neighbors. The peer-group parameter
configures both nodes to use the settings specified for the headquarters1 group. The group settings
apply unless they are specifically overridden in the neighbor configuration.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                neighbor 192.168.11.1 {
                    peer-group headquarters1
                    description "default network-instance bgp neighbor to Node A"
                    peer-as 65001
                    local-as 65002 {
                    }
                    multihop {
                        admin-state enable
                        maximum-hops 3
                    }
                    failure-detection {
                        enable-bfd true
                        fast-failover true
                    }
                }
                neighbor 192.168.13.2 {
                    peer-group headquarters1
                    description "default network-instance bgp neighbor to Node C"
                    peer-as 65003
                    local-as 65002 {
                    }
                    failure-detection {
                        enable-bfd true
                        fast-failover true
                    }
                }
            }
        }
    }

11.4 eBGP multihop

External BGP (eBGP) multihop can be used to form adjacencies when eBGP neighbors are not directly
connected to each other; for example, when a non-BGP router is between the eBGP neighbors.

BGP TCP/IP packets sent toward an eBGP neighbor by default have a TTL value of 1. If the BGP TCP/IP
packets need to pass through more than one router to reach their destination, the TTL decrements to 0,
and the packets are dropped.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

141

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

To prevent this, you can enable multihop for the eBGP neighbor and specify the maximum number of hops
for BGP TCP/IP packets sent to the neighbor. This allows the eBGP neighbor to be indirectly connected by
up to the specified number of hops.

When multihop is not enabled, the IP TTL for eBGP sessions is set to 1, and the IP TTL for iBGP sessions
is set to 64. By enabling multihop and configuring the maximum number of hops to a neighbor, it allows an
eBGP session to have multiple hops, and an iBGP session to have a single hop, if required.

If multihop is enabled and the maximum-hops parameter is configured for a BGP peer group, the settings
are applied to the members of the group. If the multihop configuration for a neighbor is changed, the
session with the neighbor must be disconnected and re-established for the change to take effect.

11.4.1 Configuring eBGP multihop

To configure eBGP multihop, you enable it for the eBGP neighbor, and specify a value for the maximum-
hops parameter. Additionally, the next-hop to the neighbor must be configured so that the two systems can
establish a BGP session.

Example:

The following example enables multihop for an eBGP neighbor. The maximum-hops parameter is set to 2,
which increases the TTL for BGP TCP/IP packets sent toward the eBGP neighbor, allowing the neighbor to
be indirectly connected by up to 2 hops.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                neighbor 192.168.11.1 {
                    multihop {
                        admin-state enable
                        maximum-hops 2
                    }
                }
        }
    }

Example

The following example configures a route to the next-hop toward the eBGP neighbor:

--{ * candidate shared default }--[  ]--
# info network-instance default static-routes
    network-instance default {
        static-routes {
            route 192.168.11.0/24 {
                next-hop-group static-ipv4-grp
            }
        }
    }
--{ * candidate shared default }--[  ]--
# info network-instance default next-hop-groups group static-ipv4-grp
    network-instance default {
        next-hop-groups {
            group static-ipv4-grp {
                nexthop 1 {
                    ip-address 192.168.22.22
                }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

142

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

            }
        }
    }

11.5 AS path options

You can set the following options for handling the AS_PATH in received BGP routes:

• Allow own AS – configures the router to process received routes when its own ASN appears in the

AS_PATH.

• Replace peer AS – configures the router to replace the ASN of the peer router in the AS_PATH with its

own ASN.

• Remove private AS path numbers – configures the router to either delete private AS numbers,

shortening the AS path length, or replace private AS numbers with the local AS number used toward the
peer, maintaining the AS path length.

11.5.1 Configuring allow-own-as

Normally, when the ASN of a router appears in the AS_PATH of received routes, it is considered a loop,
and the routes are discarded. The allow-own-as option configures the router to process the received
routes when its own ASN appears in the AS_PATH. Specifically, it configures the maximum number of
times the global ASN of the router can appear in any received AS_PATH before it is considered a loop and
considered invalid. Default is 0.

Example:

The following example configures the router to process received routes where its own ASN appears in the
AS_PATH a maximum of 1 time:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                autonomous-system 65001
                as-path-options {
                    allow-own-as 1
                    }
                }
        }
    }

11.5.2 Configuring replace-peer-as

Normally, two sites having the same ASN would not be able to reach each other directly because the
receiving router would see its own ASN in the AS_PATH and consider it a loop. To overcome this, you can
configure the router to replace the peer ASN in the AS_PATH with its own ASN. When the replace-peer-
as option is set to true, the router replaces every occurrence of the peer AS number that is present in the
advertised AS_PATH with the local ASN used toward the peer.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

143

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

Example:

The following example configures the router to replace the ASN of the peer with its own ASN:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                as-path-options {
                    replace-peer-as true
                    }
                }
            }
        }
    }

11.5.3 Configuring remove-private-as

You can configure how the router handles private AS numbers: either delete them, shortening the AS path
length, or replace private AS numbers with the local AS number used toward the peer, which maintains the
AS path length.

You can configure the router to delete or replace private AS numbers that appear before the first
occurrence of a non-private ASN in the sequence of most recent ASNs in the AS path. You can also
configure the router to ignore private AS numbers when they are the same as the peer ASN.

Example:

The following example configures the router to delete private AS numbers (2-byte and 4-byte) from the
advertised AS path toward all peers. This shortens the AS path.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                as-path-options {
                    remove-private-as {
                        mode delete
                        }
                    }
                }
           }
        }
    }

Example

The following example configures the router to replace private AS numbers with the local AS number used
toward the peer. This keeps the AS path the same length.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                as-path-options {
                    remove-private-as {

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

144

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

                        mode replace
                        }
                    }
                }
        }
    }

Example

The following example configures the router to replace only private AS numbers that appear before the first
occurrence of a non-private ASN in the sequence of most recent ASNs in the AS path.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                as-path-options {
                    remove-private-as {
                        mode replace
                        leading-only true
                        }
                    }
                }
        }
    }

Example

The following example configures the router to ignore private AS numbers (neither delete nor replace
them) when they are the same as the peer AS number.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                as-path-options {
                    remove-private-as {
                        mode replace
                        ignore-peer-as true
                        }
                    }
                }
        }
    }

11.6 Route reflection

In a standard iBGP configuration, all BGP speakers within an AS must have full BGP mesh to ensure that
all externally learned routes are redistributed through the entire AS.

Configuring route reflection provides an alternative to the full BGP mesh requirement: instead of peering
with all other iBGP routers in the network, each iBGP router only peers with a router configured as a route
reflector.

An AS can be divided into multiple clusters, with each cluster containing at least one route reflector, which
redistributes routes to the clients in the cluster. The clients within the cluster do not need to maintain a full

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

145

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

peering mesh between each other. They only require a peering to the route reflectors in their cluster. The
route reflectors must maintain a full peering mesh between all non-clients within the AS.

11.6.1 Configuring route reflection

To configure a route reflector, you assign it a cluster ID and specify which neighbors are clients and which
are non-clients. Clients receive reflected routes, and non-clients are treated as a standard iBGP peer.

Example:

The following example configures the router to be a route reflector for two clients SRL-1 and SRL-2. The
router is assigned cluster ID 0.0.0.1.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                route-reflector {
                    cluster-id 0.0.0.1
                    }
                }
                neighbor SRL-1 {
                    route-reflector {
                        cluster-id 0.0.0.1
                        client true
                    }
                neighbor SRL-2 {
                    route-reflector {
                        cluster-id 0.0.0.1
                        client true
                    }
                }
            }
        }
    }

11.7 Graceful restart

Graceful restart allows a router whose control plane has temporarily stopped functioning because of a
system failure or a software upgrade to return to service with minimal disruption to the network.

To do this, the router relies on neighbor routers, which have also been configured for graceful restart, to
maintain forwarding state while the router restarts. These neighbor routers are known as helper routers.
The helper routers and the restarting router continue forwarding traffic using the previously learned routing
information from the restarting router. Other routers in the network are not notified about the restarting
router, so network traffic is not disrupted.

When graceful restart is enabled on the SR Linux and its neighbor, the two routers exchange information
about graceful restart capability, including the Address Family Identifier (AFI) and Subsequent Address
Family Identifier (SAFI) of the routes supported for graceful restart.

While the router restarts, the helper router marks the routes from the restarting router as stale, but
continues to use them for traffic forwarding. When the BGP session is reestablished, the restarting router
indicates to the helper router that it has restarted. The helper router then sends the restarting router any

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

146

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

BGP RIB updates, followed by an End-of-RIB (EOR) marker indicating that the updates are complete. The
restarting router then makes its own updates and sends them to the helper router, followed by an EOR
marker.

Graceful restart is used in conjunction with the In-Service Software Upgrade (ISSU) feature, which can be
used to upgrade 7220 IXR-D2 and D3 systems while maintaining non-stop forwarding. During the ISSU, a
warm reboot brings down the control and management planes while the NOS reboots, and graceful restart
maintains the forwarding state in peers. You can use a tools command to validate that the SR Linux and its
peers support warm reboot, including graceful restart configuration. See the SR Linux Software Installation
Guide for more information.

11.7.1 Configuring graceful restart

The following example enables graceful restart for the BGP instance. The SR Linux operates as a helper
router for neighbor routers when they are restarting, assuming graceful restart is also enabled on the
neighbors. Enabling graceful restart also indicates to the neighbors that they can serve as helper routers
when the SR Linux itself is restarting.

Example:

When operating as a helper router, the SR Linux marks the routes from the restarting router as stale, but
continues to use them for forwarding for a period of time while the neighbor router restarts. After this period
expires, the SR Linux deletes the routes. The stale-routes-time parameter configures the amount of time
in seconds the routes remain stale before they are deleted.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                graceful-restart {
                    admin-state enable
                    stale-routes-time 300
                }
            }
        }
    }

Following a restart, by default the system waits 600 seconds (10 minutes) to receive EOR markers from all
helper routers for all address families that were up before the restart. After this time elapses, the system
assumes convergence has occurred and sends its own EOR markers to its peers. You can configure the
amount of time the system waits to receive EOR markers to be from 0 to 3,600 seconds.

For example, the following configures the amount of time the system waits to receive EOR markers to 270
seconds.

--{ * candidate shared default }--[  ]--
# info system warm-reboot
    system {
        warm-reboot {
            bgp-max-wait 270
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

147

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

11.8 BGP unnumbered peering

In a typical large-scale data center using BGP, leaf and spine switches are interconnected in a Clos
topology, and each device establishes a single-hop eBGP session with each of its physically connected
peers. The sessions come up as eBGP because of the ASN allocation scheme; it is common practice to
assign a unique ASN to every leaf switch (TOR) in a cluster and a different unique ASN to the set of spine
switches to which those TORs are connected. The allocated ASNs are typically private ASNs in the range
4200000000 to 4294967294, although this is not always the case.

For this type of configuration, BGP unnumbered peering can be a useful solution. BGP unnumbered
peering is the dynamic setup of one or more single-hop BGP sessions over a network segment that has
no globally-unique IPv4 or IPv6 addresses. Each router connected to the network segment is assumed to
have an IPv6-enabled interface to the network, and these interfaces have IPv6 link-local addresses that
are typically auto-generated by each router from the interface MAC addresses.

How sessions are established using BGP unnumbered peering

The set of BGP speakers configured for BGP unnumbered peering on a network segment discover each
other by sending and receiving ICMPv6 router advertisement (RA) messages.

Consider an example of Router A and Router B, which are both connected to an unnumbered interface
and configured for BGP unnumbered dynamic session setup. The BGP session between the two routers is
established in the following sequence:

1. Router B sends an ICMPv6 RA message on its interface b1.

Assuming the RA message is unsolicited, the source IP address of this message is the link-local
address of interface b1 (fe80::7efe:90ff:fefc:7ad8), and the destination IP address is the all-nodes
multicast address.

2. Asynchronously, Router A sends an ICMPv6 RA message on its interface a1.

The source IP address is the link-local address of interface a1 (fe80::7efe:90ff:fefc:7bd8), and the
destination IP address is the all-nodes multicast address.

3. Router A receives the RA message on interface a1, and the software process responsible for ICMPv6

relays the information to BGP, because in the BGP configuration, a1 is a subinterface that is configured
as a dynamic neighbor interface; that is, added to the BGP dynamic-neighbors interface list.

4. BGP checks if it already has a BGP session with fe80::7efe:90ff:fefc:7ad8.

•

•

If BGP already has this session and it is up, or BGP is in the process of establishing this session,
then the new information is a no-op. Possibly Router B started the same process moments before
Router A.

If BGP does not have a session with this link-local address, then a new TCP connection is initiated
toward fe80::7efe:90ff:fefc:7ad8.

5. When the TCP connection is established, the BGP OPEN message sent by Router A encodes a local-
AS and other capabilities that come from the configuration of the peer-group associated with interface
a1.

6. Router A receives a BGP OPEN message from Router B and accepts that OPEN message, proceeding
to move toward the BGP established state, if the OPEN message encodes an acceptable peer AS
number (in one of the allowed-peer-as ranges configured for interface a1). The address families
supported by the session are based on the usual MP-BGP negotiation.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

148

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

BGP dynamic-neighbors interface list

To enable dynamic peering, you add subinterfaces to the BGP dynamic-neighbors interface list in the SR
Linux configuration.

When a subinterface is added to the dynamic-neighbors interface list:

• BGP automatically accepts incoming BGP connections to the IPv6 link-local address of that

subinterface, subject to the configured max-sessions limit for the subinterface.
For the connection to be accepted, the source address must be an IPv6 link-local address (that may or
may not also be a defined neighbor address), and the reported ASN of the peer must match relevant
configuration. If the source address does not match a configured neighbor address, the session is set
up according to the peer-group associated with the subinterface, not the peer-group associated with
the dynamic-neighbors accept match-prefix entry matching the source IPv6 link-local address if a
matching entry exists.

• BGP registers for IPv6 RA messages on the subinterface. Whenever the source of one of these RA

messages matches an IPv6 link-local address for which there is currently no established BGP session,
the system attempts to create a BGP session to that address, as long as this does not exceed the
configured max-sessions limit for the subinterface. The session is set up according to the configured
peer-group associated with the subinterface.

When a BGP session is established over a subinterface in the in the dynamic-neighbors interface list:

• Changes to the allowed-peer-as ranges associated with the subinterface are a no-op until the next

time BGP attempts to establish the sessions.

• Non-arrival of expected ICMPv6 RA messages on the subinterface are a no-op, and do not trigger

teardown of associated sessions.

• Existing triggers for tearing down a session apply as normal (for example, hold-timer expiration, BFD

timeout, clear bgp neighbor commands, and so on).

•

If the link-local address of a dynamic peer is configured as a static neighbor address, the dynamic
session is immediately torn down and replaced by the static session.

When a subinterface is deleted from the dynamic-neighbors interface list, all dynamic sessions associated
with that subinterface (excluding sessions set up by static configuration of the neighbor) are torn down
immediately.

A BGP session that was previously established on an unnumbered interface and subsequently torn down
can only be re-established if the subinterface is configured in the dynamic-neighbors interface list and a
recent ICMPv6 RA message is received.

Configuration overrides for dynamic peers on unnumbered interfaces

When a dynamic BGP session is initiated or accepted on an interface that is tied to a peer-group, most of
the parameters relevant to that session come from the configuration of that peer-group, with the following
exceptions:

• multihop maximum-hops is always 1 (for both eBGP and iBGP peers).

• transport local-address is always the link-local address of the specified interface.

• next-hop-self is always true. The neighbor is not presumed to have reachability to off-link

destinations.

• transport passive-mode is always false. BGP always initiates a connection when informed by

ICMPv6, unless it already has a connection.

• ipv4-unicast receive-ipv6-next-hops is always enabled.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

149

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

• ipv4-unicast advertise-ipv6-next-hops and evpn advertise-ipv6-next-hops are

always enabled.

• graceful-restart admin-state is always disabled, meaning dynamic-peers do not help during

a warm reboot, and there is no helper support for dynamic peers that restart.

Peer AS Validation for dynamic peers on unnumbered interfaces

When a BGP OPEN message is received from an unnumbered dynamic neighbor, the reported AS number
of the peer is checked to determine if it is acceptable to allow the peering to proceed.

For a dynamic session associated with a subinterface, the peer AS is acceptable only if it matches one of
the allowed-peer-as elements of the dynamic-neighbors interface list entry for the subinterface, and
if the peer AS is not equal to the local AS (implying an iBGP session; in the current release, iBGP is not
supported for BGP unnumbered peering).

11.8.1 Configuring BGP unnumbered peering

To configure BGP unnumbered peering, you add subinterfaces to the BGP dynamic-neighbors interface
list, and specify the peer autonomous system numbers from which incoming TCP connections to the BGP
well-known port are accepted.

Example

The following example adds a subinterface to the BGP dynamic-neighbors interface list.

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp dynamic-neighbors interface ethernet-1/1.1
    network-instance default {
        protocols {
            bgp {
                dynamic-neighbors {
                    interface ethernet-1/1.1 {
                        peer-group bgp_peer_group_0
                        allowed-peer-as [
                            4294967200
                        ]
                    }
                }
            }
        }
    }

In this example, subinterface ethernet-1/1.1 is added to the BGP dynamic-neighbors interface list.
This subinterface must be enabled for IPv6 and configured to accept and send IPv6 RA messages. It does
not require any IPv4 addresses or global-unicast IPv6 addresses.

Incoming TCP connections to port 179 received on this subinterface that are sourced from an IPv6 link-
local address and destined for the IPv6 link local address of this subinterface are automatically accepted.
IPv6 RA messages received on this subinterface automatically trigger BGP session setup toward the
sender of these messages, if there is not already an established BGP session.

Peer group bgp_peer_group_0 is associated with dynamic BGP neighbors on this subinterface.
Parameters configured for this peer-group are used for establishing the dynamic BGP session, with the
exceptions described in Configuration overrides for dynamic peers on unnumbered interfaces.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

150

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

ASN 4294967200 is configured as an allowed peer AS for dynamic BGP neighbors on this subinterface. If
the BGP OPEN message from a peer on this subinterface contains a MyAS number that is not an allowed
peer AS, then a NOTIFICATION is sent to the peer with the indication Bad Peer AS.

11.9 BGP configuration management

Managing the BGP configuration on SR Linux can include the following tasks:

• Modifying an AS number

• Deleting a BGP neighbor from the configuration

• Deleting a BGP group

• Resetting BGP peer connections

11.9.1 Modifying an ASN

You can modify the ASN on the router, but the new ASN does not take effect until the BGP instance is
restarted, either by administratively disabling/enabling the BGP instance, or by rebooting the system with
the new configuration.

Example:

--{ * candidate shared default }--[ network-instance default ]--
# protocols bgp autonomous-system 95002
# protocols bgp admin-state disable
# protocols bgp admin-state enable

All established BGP sessions are taken down when the BGP instance is disabled.

11.9.2 Deleting a neighbor

Use the delete command to delete a BGP neighbor from the configuration.

Example:

--{ * candidate shared default }--[ network-instance default ]--
# delete protocols bgp neighbor 192.168.11.1

11.9.3 Deleting a group

Use the delete command to delete the settings for a BGP peer group from the configuration.

Example:

--{ * candidate shared default }--[ network-instance default ]--
# delete protocols bgp group headquarters1

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

151

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

11.9.4 Resetting BGP peer connections

To refresh the connections between BGP neighbors, you can issue a hard or soft reset. A hard-reset tears
down the TCP connections and returns to IDLE state. A soft-reset sends route-refresh messages to each
peer. The hard or soft reset can be issued to a specific peer, to peers in a specific peer-group, or to peers
with a specific ASN.

Example:

The following command hard-resets the connections to the BGP neighbors in a peer group that have a
specified ASN. The hard-reset applies both to configured peers and dynamic peers.

# tools network-instance default protocols bgp group headquarters1 reset-peer peer-as 95002
/network-instance[name=default]/protocols/bgp/group[group-name=headquarters1]:
    Successfully executed the tools clear command.

Example

The following command soft-resets the connection to BGP neighbors that have a specified ASN. The soft-
reset applies both to configured peers and dynamic peers.

# tools network-instance default protocols bgp soft-clear peer-as 95002
/network-instance[name=default]/protocols/bgp:
    Successfully executed the tools clear command.

11.10 Protocol authentication

On the SR Linux, authentication of routing control messages for BGP, as well as other protocols such as
LDP and IS-IS, is done using shared keys.

Message authentication between two routers involves sharing knowledge of a secret key and a
cryptographic algorithm, such as MD5. This secret key, together with the message data, are used to
generate a message digest. The message digest is added to each message transmitted by the sender
and validated by the receiver, with the expectation that only a sender in possession of the secret key and
algorithm details could generate the same message digest computed by the receiver of the message.

To limit exposure in the event a key is compromised, the secret key is changed at regular intervals using
keys configured in a keychain. A keychain defines a list of one or more keys; each key is associated with a
secret string, an algorithm identifier, and a start time.

When a protocol references a keychain for securing its messages with a set of peers, it uses the active key
in the keychain with the most recent start time to generate the message digest in its sent messages, and it
drops every received message that does not have an acceptable message digest.

11.10.1 Configuring protocol authentication

To configure protocol authentication, you configure an authentication keychain at the system level and
configure a protocol to use the keychain. All protocol authentication is done using keychains. If a protocol
requires authentication with a single neighbor using a single key, the key is configured within a keychain,
and the protocol references the keychain.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

152

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

Example:

The following example configures a keychain consisting of two keys.

--{ candidate shared default }--[  ]--
# info system authentication
    system {
        authentication {
            keychain k1 {
                tolerance 10 {
                key 1 {
                    admin-state enable
                    algorithm md5
                    authentication-key ZcvSElJzJx/wBZ9biCt
                    start-time 2020-05-26T10:21:01Z
                }
                key 2 {
                    admin-state enable
                    algorithm md5
                    authentication-key e7xdKlYO2DOm7v3IJv
                    start-time 2020-05-10T10:21:01Z
                }
            }
        }

Example

The following example configures BGP to use the keys in the keychain above for protocol authentication:

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp authentication
    network-instance default {
        protocols {
            bgp {
                authentication {
                    keychain k1
                    }
                }
            }
        }
    }

11.11 BGP shortcuts

With BGP shortcuts, SR Linux can include LDP LSPs or segment routing (SR-ISIS) tunnels in the BGP
algorithm calculations. In this case, tunnels operate as logical interfaces directly connected to remote
nodes in the network. Because the BGP algorithm treats the tunnels in the same way as a physical
interface (being a potential output interface), the algorithm can select a destination node together with an
output tunnel to resolve the next-hop, using the tunnel as a shortcut through the network to the destination.

Note: BGP shortcuts can only be used for next-hop resolution of IPv4-unicast RIB-Ins with an
IPv4 next-hop address.

BGP next-hop resolution describes the procedures that BGP uses to resolve the next-hop address of each
BGP RIB-In that forms part of a BGP route. The following table defines BGP RIB-In and BGP route in the
context of BGP next-hop resolution.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

153

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

Table 9: BGP RIB-IN and BGP route

BGP Term

Definition

BGP RIB-In

One of the following:

• a received IPv4-unicast BGP route with an IPv4 next-hop address

• a received IPv4-unicast BGP route with an IPv6 next-hop address (allowed as a

result of sending an extended-nh-encoding capability to the peer)

• a received IPv6-unicast BGP route with an IPv6 next-hop address

BGP route

A route submitted by BGP to the fib_mgr that resulted from the grouping of one or
more BGP RIB-Ins. (Multiple BGP RIB-Ins per route describes a multipath scenario.)

With BGP shortcuts enabled, next-hop resolution determines whether to use a local interface or a tunnel to
resolve the BGP next-hop.

Tunnel resolution mode

As part of the configuration for BGP shortcuts, you must define the tunnel-resolution mode (prefer/required/
disabled). This mode determines the order of preference and fallback of using tunnels in the tunnel table to
resolve the next-hop instead of using routes in the FIB, as described in the following sections.

Next-Hop Resolution of IPv4-Unicast RIB-Ins with IPv4 next-hop

The following table describes the next-hop resolution steps for IPv4-Unicast RIB-Ins with IPv4 next-hops,
depending on the specified tunnel resolution mode.

Table 10: Next-hop resolution for IPv4 Unicast RIB-Ins with IPv4 next-hop address

Tunnel
Resolution Mode

Next-hop resolution steps in BGP

prefer

1. Start with TTM lookup:

a. Find all the tunnels in TTM with an endpoint that matches the BGP next-hop

address and that have one of the types listed in the allow list.

b. If there is a single tunnel, select that tunnel. The RIB-IN is resolved; exit.

c.

If there are multiple tunnels, select the tunnel with the numerically lowest TTM
preference, and if a further tie-break is needed, select the tunnel with the
lowest TTM metric. The RIB-IN is resolved; exit.

2.

If there are no tunnels, fallback to FIB lookup:

a. Find the longest match active route in the FIB that matches the BGP next-hop
address. There are presently no restrictions on this route; it can be an IGP
route, a static blackhole route, a default route, or another BGP route.

b. If there is a longest match route and it eventually resolves to a blackhole next-

hop, interface or tunnel then the RIB-IN is resolved; exit.

c.

If there is no matching route the RIB-IN is unresolved.

require

Perform TTM lookup only, as described in 1 above.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

154

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

Tunnel
Resolution Mode

Next-hop resolution steps in BGP

If there is no matching tunnel, the RIB-IN is unresolved.

disabled

Perform FIB lookup only, as described in 2 above.

Next-Hop Resolution of IPv4-Unicast and IPv6-Unicast RIB-Ins with IPv6 next-hop

If the next-hop address for the IPv4-Unicast RIB-In is an IPv6 address, the next-hop is resolved by the
longest prefix match IPv6 route in the FIB. This is the only option because there are no IPv6 tunnels in the
TTM. The same logic applies to BGP RIB-Ins with IPv6-unicast NLRI address family as they can only have
an IPv6 next-hop address. The next-hop resolution logic is the same as the FIB lookup described in the
preceding table.

11.11.1 Configuring BGP shortcuts over segment routing

About this task

To configure BGP shortcuts:

Procedure

Step 1.

In the default network-instance, define the tunnel-resolution mode for the BGP protocol.

This setting determines the order of preference and the fallback when using tunnels in the tunnel
table instead of routes in the FIB. Available options are as follows:

•

require
requires tunnel table lookup instead of FIB lookup

• prefer

prefers tunnel table lookup over FIB lookup

• disabled (default)

performs FIB lookup only

Step 2. Set the allowed tunnel types for next-hop resolution.

Example: Configure IPv4 BGP shortcuts

The following example shows the BGP next-hop resolution configuration to allow IPv4 SR-ISIS tunnels,
with the tunnel mode set to prefer.

--{ * candidate shared default }--[ ]--
# info network-instance default protocols bgp ipv4-unicast next-hop-resolution ipv4-next-hops
 tunnel-resolution
    network-instance default {
        protocols {
            bgp {
                ipv4-unicast {
                    next-hop-resolution {
                        ipv4-next-hops {
                            tunnel-resolution {
                                mode prefer
                                allowed-tunnel-types [
                                    sr-isis
                                ]
                            }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

155

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BGP

                        }
                    }
                }
            }
        }
    }

Example: Configure IPv6 BGP shortcuts

The following example shows the BGP next-hop resolution configuration to allow IPv6 SR-ISIS tunnels,
with the tunnel mode set to prefer.

--{ * candidate shared default }--[ ]--
# info network-instance default protocols bgp ipv4-unicast next-hop-resolution ipv4-next-hops
 tunnel-resolution
    network-instance default {
        protocols {
            bgp {
                ipv6-unicast {
                    next-hop-resolution {
                        ipv6-next-hops {
                            tunnel-resolution {
                                mode prefer
                                allowed-tunnel-types [
                                    sr-isis
                                ]
                            }
                        }
                    }
                }
            }
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

156

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

IS-IS

12 IS-IS

Intermediate System to Intermediate System (IS-IS) is a link-state IGP that uses the Shortest Path First
(SPF) algorithm to determine routes. Routing decisions are made using the link-state information. IS-IS
evaluates topology changes and, if necessary, performs SPF recalculations.

Entities within IS-IS include networks, intermediate systems, and end systems. In IS-IS, a network is an
Autonomous System (AS), or routing domain, with end systems and intermediate systems. A router is an
intermediate system that sends, receives, and forwards Protocol Data Units (PDUs). End systems are
network devices that send and receive PDUs.

End system and intermediate system protocols allow routers and nodes to identify each other. IS-IS sends
out link-state updates periodically throughout the network, so each router can maintain current network
topology information.

IS-IS supports large ASs by using a two-level hierarchy. A large AS can be administratively divided into
smaller, more manageable areas. A system logically belongs to one area. Level 1 routing is performed
within an area. Level 2 routing is performed between areas. You can configure routers as Level 1, Level 2,
or both Level 1 and 2.

On SR Linux, you can configure a single named IS-IS instance per network instance. The following
summarizes SR Linux support for IS-IS:

• Level 1, Level 2, and Level 1/2 IS types

• Configurable Network Entity Title (NET) per IS-IS instance

•

support for IPv4/v6 routing

• ECMP with up to 64 next hops per destination

•

IS-IS export policies (redistribution of other types of routes into IS-IS)

• authentication of LSP, CSNP, PSNP, and hello PDUs, using an authentication key or keychain specified

as follows:

– per instance or per level for all PDU types

– per interface or per interface and level for Hello PDUs

• authentication keychains with a single key per named keychain

• Purge Originator ID TLV (RFC 6232)

• options to ignore and suppress the attached bit

• ability to set the overload bit immediately or after each subsequent restart of the IS-IS manager

application and leave it on for a configurable duration each time

•

•

control over the link-state PDU (LSP) MTU size, with range from 490 bytes to 9490 bytes

configuration control over timers for LSP lifetime, LSP refresh interval, SPF calculation triggers, and
LSP generation

• hello padding (strict, loose, and adaptive modes)

• graceful restart, only acting as a helper of the restarting router

• Level 1 to Level 2 route summary

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

157

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

IS-IS

• BFD for fast failure detection

•

configurable hello timer with multiple per interface and level

• wide metrics (configurable per level)

•

configurable route preference for each route type, Level 1-internal, Level 1-external, Level 2-internal
and Level 2-external

• detailed statistics for interfaces, adjacencies, and levels

The info detail command displays default values for an IS-IS instance on SR Linux as shown in the
following example:

--{ * candidate shared default }--[ network-instance default protocols isis ]--
# info detail
    instance i1 {
        admin-state disable
        level-capability L2
        max-ecmp-paths 1
        poi-tlv false
        attached-bit {
            ignore false
            suppress false
        }
        overload {
            advertise-interlevel false
            advertise-external false
            immediate {
                set-bit false
                max-metric false
            }
            on-boot {
                set-bit false
                max-metric false
            }
        }
        timers {
            lsp-lifetime 1200
            lsp-refresh {
                interval 600
                half-lifetime true
            }
            spf {
                initial-wait 1000
                second-wait 1000
                max-wait 10000
            }
            lsp-generation {
                initial-wait 1000
                second-wait 1000
                max-wait 5000
            }
        }
        transport {
            lsp-mtu-size 1492
        }
        ipv4-unicast {
            admin-state enable
        }
        ipv6-unicast {
            admin-state enable
            multi-topology false
        }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

158

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

IS-IS

        graceful-restart {
            helper-mode false
        }
        auto-cost {
        }
        authentication {
            csnp-authentication false
            psnp-authentication false
            hello-authentication false
        }
        inter-level-propagation-policies {
            level1-to-level2 {
            }
        }
    }

12.1 Basic IS-IS configuration

To configure IS-IS, perform the following tasks:

• Enable an IS-IS instance

•

If necessary, modify the level capability on the global IS-IS instance level

• Define area addresses

• Configure IS-IS interfaces

12.1.1 Enabling an IS-IS instance

SR Linux supports a single IS-IS instance within a network instance. The following example enables an IS-
IS instance within the default network instance.

Example:

--{ * candidate shared default }--[ network-instance default protocols ]--
# info isis
 isis {
        instance i1 {
        }
    }

12.1.2 Configuring the router level

When IS-IS is enabled, the default level-capability value is Level 1/2. This means that the router operates
with both Level 1 and Level 2 routing capabilities. To change the default value in order for the router to
operate as a Level 1 router or a Level 2 router, you must explicitly modify the level value.

The level-capability value can be configured on the global IS-IS instance level and also on the interface
level. The level-capability value determines which level values can be assigned on the router level or on an
interface-basis.

In order for the router to operate as a Level 1 only router or as a Level 2 only router, you must explicitly
specify the level-number value.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

159

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

IS-IS

• Specify Level 1 to route only within an area

• Specify Level 2 to route to destinations outside an area, toward other eligible Level 2 routers

Example:

The following example configures the level capability for an IS-IS instance to Level 2.

--{ * candidate shared default }--[ network-instance default protocols ]--
# info isis
 isis {
        instance i1 {
            level-capability L2
        }
    }

12.1.3 Configuring the Network Entity Title

SR Linux supports a configurable network entity title (NET) per IS-IS instance. The NET is 8-20 octets
long and consists of 3 parts: the area address (1-13 octets), the system ID (6 octets), and the n-selector (1
octet, must be 00)

The area address portion of the NET defines the IS-IS area to which the router belongs. At least one area
address should be configured on each router participating in IS-IS.

The area address portion of the NET identifies a point of connection to the network, such as a router
interface. The routers in an area manage routing tables about destinations within the area. The NET value
is used to identify the IS-IS area to which the router belongs.

The NET value is divided into three parts. Only the Area ID portion is configurable.

1. Area ID — A variable length field between 1 and 13 bytes. This includes the Authority and Format
Identifier (AFI) as the most significant byte and the area ID.

2. System ID — A 6-byte system identifier. This value is not configurable. The system ID is derived from
the system or router ID.

3. Selector ID — A 1-byte selector identifier that must contain zeros when configuring a NET. This value is
not configurable. The selector ID is always 00.

Example:

The following example configures a NET for an IS-IS instance:

--{ * candidate shared default }--[ network-instance default protocols ]--
# info isis
 isis {
        instance i1 {
            net 49.0001.1921.6800.1002.00
            }
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

160

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

IS-IS

12.1.4 Configuring global parameters

Commands and parameters configured on the global IS-IS instance level are inherited by the interface
levels. Parameters specified in the interface and interface-level configurations take precedence over global
configurations.

Example:

The following example shows the command usage to configure global-level IS-IS. The LSP PDU
authentication setting references a keychain defined at the system level (see Protocol authentication).

--{ * candidate shared default }--[ network-instance default protocols ]--
# info isis
    isis {
        instance i1 {
            level-capability L2
            overload {
                on-boot {
                    timeout 90
                }
            }
            authentication {
                lsp-authentication {
                    generate true
                    check-received strict
                    keychain isisglobal
                }
            }
        }
    }

12.1.5 Configuring interface parameters

There are no interfaces associated with IS-IS by default. An interface belongs to all areas configured on a
router. Interfaces cannot belong to separate areas. There are no default interfaces applied to the router IS-
IS instance. You must configure at least one IS-IS interface in order for IS-IS to work.

You can configure both the Level 1 parameters and the Level 2 parameters on an interface. The level-
capability value determines which level values are used.

Example:

The following example configures interface parameters for an IS-IS instance:

--{ * candidate shared default }--[ network-instance default protocols isis ]--
# info instance i1
    instance i1 {
        interface ethernet-1/2.1 {
            circuit-type point-to-point
            ipv4-unicast {
                admin-state enable
            }
            level 1 {
                authentication {
                    hello-authentication {
                        generate true
                        check-received strict
                        keychain Hello
                    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

161

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

IS-IS

                }
            }
        }
        level 1 {
        }
    }

12.2 Displaying IS-IS information

Use the commands shown in this section to display the following information for an IS-IS instance running
in a specified network instance:

•

interface information

• adjacency information

•

IS-IS link state database information

Example:  IS-IS summary information

To display summary information for an IS-IS instance:

# show network-instance green_default protocols isis summary
-----------------------------------------------------------------------------------------------
Network instance "green_default", isis instance "default" is enable and up
Level Capability : L1L2
Export policy    : None
-----------------------------------------------------------------------------------------------
System-id : 0050.0500.5005
NET       : [ 49.0001.0050.0500.5005.00 ]
Area-id   : [ 49.0001 ]
-----------------------------------------------------------------------------------------------
IPv4 routing is enable
IPv6 routing is enable using None
Max ECMP path : 1
----------------------------------------------------------------------------------------------
Ldp Synchronization is Disabled
----------------------------------------------------------------------------------------------
Overload
Current Status : not in overload
----------------------------------------------------------------------------------------------
Metric
Reference bandwidth: NA
L1 metric style: wide
L2 metric style: wide
----------------------------------------------------------------------------------------------
Graceful Restart
Helper Mode    : disabled
Current Status : not helping any neighbors
-----------------------------------------------------------------------------------------------
Timers
LSP Lifetime                : 1200
LSP Refresh                 : 600
SPF initial wait            : 1000
SPF second wait             : 1000
SPF max wait                : 10000
LSP generation initial wait : 10
LSP generation second wait  : 1000
LSP generation max wait     : 5000
-----------------------------------------------------------------------------------------------
Route Preference

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

162

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

IS-IS

L1 internal : 15
L1 external : 160
L2 internal : 18
L2 external : 165
-----------------------------------------------------------------------------------------------
L1->L2 Summary Addresses Not configured
-----------------------------------------------------------------------------------------------
Instance Statistics
SPF run            : 29
Last SPF           : 2022-03-23T16:16:16.200Z
Partial SPF run    : 16
Last Partial SPF   : 2022-03-23T16:16:17.200Z
-----------------------------------------------------------------------------------------------
PDU Statistics
----------------------------------------------------------------------------------------------
| pdu-name |     received     |    processed     |     dropped      |       sent       |
+==========+==================+==================+==================+==================+
| LSP      | 460              | 457              | 3                | 528              |
| IIH      | 308              | 281              | 27               | 497              |
| CSNP     | 52               | 51               | 1                | 116              |
| PSNP     | 30               | 30               | 0                | 3                |
-----------------------------------------------------------------------------------------------

Example:  IS-IS interface information

To display interface information for an IS-IS instance:

# show network-instance green_default protocols isis interface
-----------------------------------------------------------------------------------------------
Network Instance : green_default
Instance         : default
-----------------------------------------------------------------------------------------------
| Interface Name | Oper State | Level | Circuit id | Circuit type   | Ipv4 Metric L1/L2 | Ipv6
 Metric L1/L2
===============================================================================================
| ethernet-1/1.1 | up         | L1L2  | 2          | point-to-point | 10/10             | 10/10
| ethernet-1/2.1 | up         | L1L2  | 2          | broadcast      | 10/10             | 10/10
| ethernet-1/3.1 | up         | L1L2  | 3          | broadcast      | 10/10             | 10/10
| ethernet-1/16. | up         | L1L2  | 4          | broadcast      | 10/10             | 10/10
| 1              |            |       |            |                |                   |      
| lo0.1          | up         | L1L2  | 5          | broadcast      | 0/0               | 0/0
-----------------------------------------------------------------------------------------------

Example:  IS-IS interface detail information

To display detail information for a specific IS-IS interface:

# show network-instance green_default protocols isis interface ethernet-1/1.1 detail
----------------------------------------------------------------------------------------
Network Instance   : green_default
Instance           : default
----------------------------------------------------------------------------------------
Interface-Name                      : ethernet-1/1.1
Status                              : IS-IS is admin enabled, oper up
Circuit                             : id 1 is broadcast and not passive
Hello Authentication Generate       : True
Hello Authentication Check Received : Strict
Hello Padding                       : disable
Csnp Interval                       : 10
Lsp Pacing                          : 100
Ldp Sync State                      : disabled
Ldp Sync Duration                   : 3274
---------------------------------------------------------------------------------------

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

163

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

IS-IS

Level                               : 1
Status                              : enabled
Adjacencies                         : 1
Hello Authentication Generate       : True
Hello Authentication Check Received : Strict
Priority                            : 64
Hello Interval                      : 9
Hello Multiplier                    : 3
Ipv4 Metric                         : 10
Ipv6 Metric                         : 10
----------------------------------------------------------------------------------------
Level                               : 2
Status                              : enabled
Adjacencies                         : 1
Hello Authentication Generate       : True
Hello Authentication Check Received : Strict
Priority                            : 64
Hello Interval                      : 9
Hello Multiplier                    : 3
Ipv4 Metric                         : 10
Ipv6 Metric                         : 10
----------------------------------------------------------------------------------------

Example: IS-IS adjacency information

To display IS-IS adjacency information:

# show network-instance default protocols isis adjacency
--------------------------------------------------------------------------------------
Network-instance    : default
IS-IS instance      : global
--------------------------------------------------------------------------------------
System-Id      Adj-Level  Interface        IPv4-Address  State  Uptime       Rem-Hold  
<hostname1>    L1         ethernet-1/1.0   10.0.0.1      Up     0d 00:46:43  19s
<hostname1>    L2         ethernet-1/1.0   10.0.0.1      Up     0d 00:46:43  19s
--------------------------------------------------------------------------------------
Adjacencies: 2
--------------------------------------------------------------------------------------

Example:  IS-IS link state database information

To display information for the IS-IS link state database:

# show network-instance green_default protocols isis database
--------------------------------------------------------------------------------------
Network-instance    : green_default 
IS-IS instance      : default
--------------------------------------------------------------------------------------
| Level Number | Lsp Id               | Sequence | Checksum | Lifetime | Attributes |
+==============+======================+==========+==========+==========+============+
| 1            | 0010.0100.1001.00-00 | 0x33     | 0x1672   | 1167     | L1 L2      |
| 1            | 0020.0200.2002.00-00 | 0x35     | 0xd562   | 1014     | L1 L2      |
| 1            | 0030.0300.3003.00-00 | 0x38     | 0xf447   | 640      | L1 L2      |
| 1            | 0030.0300.3003.01-00 | 0x2f     | 0x4db6   | 1005     | L1 L2      |
| 1            | 0030.0300.3003.02-00 | 0x2e     | 0xd355   | 709      | L1 L2      |
| 1            | 0040.0400.4004.00-00 | 0x39     | 0x6f2a   | 638      | L1 L2      |
| 1            | 0040.0400.4004.01-00 | 0x2f     | 0xf0ef   | 822      | L1 L2      |
| 1            | 0040.0400.4004.02-00 | 0x2f     | 0xa5f8   | 999      | L1 L2      |
| 1            | 0050.0500.5005.00-00 | 0x38     | 0xfbbb   | 905      | L1 L2      |
| 1            | 0050.0500.5005.01-00 | 0x31     | 0x3937   | 745      | L1 L2      |
| 1            | 0050.0500.5005.02-00 | 0x2f     | 0xd19    | 657      | L1 L2      |
| 1            | 0060.0600.6006.00-00 | 0x37     | 0xf287   | 967      | L1 L2      |
| 1            | 0060.0600.6006.01-00 | 0x2f     | 0xadfb   | 753      | L1 L2      |

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

164

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

IS-IS

| 1            | 0060.0600.6006.02-00 | 0x2f     | 0x5f95   | 819      | L1 L2      |
| 1            | 0070.0700.7007.00-00 | 0x33     | 0x48dd   | 1058     | L1 L2      |
| 1            | 0070.0700.7007.01-00 | 0x2f     | 0xadb2   | 1164     | L1 L2      |
| 1            | 0070.0700.7007.02-00 | 0x2e     | 0xdf8e   | 852      | L1 L2      |
| 2            | 0010.0100.1001.00-00 | 0x3e     | 0xb92f   | 1150     | L1 L2      |
| 2            | 0010.0100.1001.00-01 | 0x3c     | 0x1875   | 818      | L1 L2      |
| 2            | 0020.0200.2002.00-00 | 0x41     | 0x540f   | 1177     | L1 L2      |
| 2            | 0020.0200.2002.00-01 | 0x3f     | 0x2db9   | 699      | L1 L2      |
| 2            | 0030.0300.3003.00-00 | 0x3c     | 0x302f   | 1058     | L1 L2      |
| 2            | 0030.0300.3003.00-01 | 0x3f     | 0x5150   | 668      | L1 L2      |
| 2            | 0030.0300.3003.01-00 | 0x30     | 0xb518   | 915      | L1 L2      |
| 2            | 0030.0300.3003.02-00 | 0x2f     | 0xe113   | 1035     | L1 L2      |
| 2            | 0040.0400.4004.00-00 | 0x3e     | 0xa17b   | 657      | L1 L2      |
| 2            | 0040.0400.4004.00-01 | 0x3e     | 0x260b   | 1018     | L1 L2      |
| 2            | 0040.0400.4004.01-00 | 0x30     | 0x1511   | 1066     | L1 L2      |
| 2            | 0040.0400.4004.02-00 | 0x2f     | 0x27a7   | 1035     | L1 L2      |
| 2            | 0050.0500.5005.00-00 | 0x41     | 0x59d6   | 608      | L1 L2      |
| 2            | 0050.0500.5005.00-01 | 0x44     | 0xf165   | 1110     | L1 L2      |
| 2            | 0050.0500.5005.01-00 | 0x33     | 0x7709   | 584      | L1 L2      |
| 2            | 0050.0500.5005.02-00 | 0x31     | 0xa74    | 657      | L1 L2      |
| 2            | 0060.0600.6006.00-00 | 0x3d     | 0xd5ed   | 903      | L1 L2      |
| 2            | 0060.0600.6006.00-01 | 0x44     | 0xdc97   | 666      | L1 L2      |
| 2            | 0060.0600.6006.01-00 | 0x30     | 0x9024   | 1145     | L1 L2      |
| 2            | 0060.0600.6006.02-00 | 0x30     | 0xbc66   | 1020     | L1 L2      |
| 2            | 0070.0700.7007.00-00 | 0x3a     | 0x81fd   | 862      | L1 L2      |
| 2            | 0070.0700.7007.00-01 | 0x3e     | 0xf82a   | 765      | L1 L2      |
| 2            | 0070.0700.7007.01-00 | 0x30     | 0xbad5   | 658      | L1 L2      |
| 2            | 0070.0700.7007.02-00 | 0x2f     | 0x1ecb   | 675      | L1 L2      |
+--------------+----------------------+----------+----------+----------+------------+
LSP Count: 41
-------------------------------------------------------------------------------------

To display information for a specific IS-IS link state database:

# show network-instance green_default protocols isis database 1
--------------------------------------------------------------------------------------
Network-instance    : green_default 
IS-IS instance      : default
--------------------------------------------------------------------------------------
| Level Number | Lsp Id               | Sequence | Checksum | Lifetime | Attributes |
+==============+======================+==========+==========+==========+============+
| 1            | 0010.0100.1001.00-00 | 0x33     | 0x1672   | 1048     | L1 L2      |
| 1            | 0020.0200.2002.00-00 | 0x35     | 0xd562   | 894      | L1 L2      |
| 1            | 0030.0300.3003.00-00 | 0x39     | 0x7762   | 1179     | L1 L2      |
| 1            | 0030.0300.3003.01-00 | 0x2f     | 0x4db6   | 886      | L1 L2      |
| 1            | 0030.0300.3003.02-00 | 0x2f     | 0x4ace   | 1188     | L1 L2      |
| 1            | 0040.0400.4004.00-00 | 0x3a     | 0xcd9f   | 1135     | L1 L2      |
| 1            | 0040.0400.4004.01-00 | 0x2f     | 0xf0ef   | 703      | L1 L2      |
| 1            | 0040.0400.4004.02-00 | 0x2f     | 0xa5f8   | 879      | L1 L2      |
| 1            | 0050.0500.5005.00-00 | 0x38     | 0xfbbb   | 785      | L1 L2      |
| 1            | 0050.0500.5005.01-00 | 0x31     | 0x3937   | 625      | L1 L2      |
| 1            | 0050.0500.5005.02-00 | 0x30     | 0xb86e   | 1148     | L1 L2      |
| 1            | 0060.0600.6006.00-00 | 0x37     | 0xf287   | 847      | L1 L2      |
| 1            | 0060.0600.6006.01-00 | 0x2f     | 0xadfb   | 633      | L1 L2      |
| 1            | 0060.0600.6006.02-00 | 0x2f     | 0x5f95   | 700      | L1 L2      |
| 1            | 0070.0700.7007.00-00 | 0x33     | 0x48dd   | 938      | L1 L2      |
| 1            | 0070.0700.7007.01-00 | 0x2f     | 0xadb2   | 1044     | L1 L2      |
| 1            | 0070.0700.7007.02-00 | 0x2e     | 0xdf8e   | 733      | L1 L2      |
+--------------+----------------------+----------+----------+----------+------------+
LSP Count: 17
--------------------------------------------------------------------------------------

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

165

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

IS-IS

12.3 Clearing IS-IS information

To clear information for an IS-IS instance, use the tools commands below:

Example:

To clear statistics for an IS-IS instance running in a specified network instance:

# tools network-instance default protocols isis instance i1 statistics clear

Example

To clear link state database information for a level:

# tools network-instance default protocols isis instance i1 link-state-database clear

Example

To clear IS-IS adjacency information for an interface:

# tools network-instance default protocols isis instance i1 interface ethernet-1/1.1
 adjacencies clear

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

166

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BFD

13 BFD

Bidirectional Forwarding Detection (BFD) is a lightweight mechanism used to monitor the liveliness
of a remote neighbor. It is meant to be lightweight enough so that the ongoing sending and receiving
mechanism can be implemented in the forwarding hardware. Because of this lightweight nature, BFD
can send and receive messages at a much higher rate than other control plane hello mechanisms. This
attribute allows connection failures to be detected faster than other hello mechanisms.

SR Linux supports BFD asynchronous mode, where BFD control packets are sent between two systems to
activate and maintain BFD neighbor sessions between them.

BFD can be configured to monitor connectivity for the following:

• BGP peers. See Configuring BFD under the BGP protocol.

• Next-hops for static routes. See Configuring failure detection for static routes.

• OSPF adjacencies. See Configuring BFD under OSPF.

•

IS-IS adjacencies. See Configuring BFD under IS-IS.

SR Linux supports one BFD session per port/connector, or up to 1152 sessions for an 8-slot chassis,
depending on the hardware configuration.

On SR Linux systems that support link aggregation groups (LAGs), SR Linux supports micro-BFD, where
BFD sessions are established for individual members of a LAG. If the BFD session for one of the links
indicates a connection failure, the link is taken out of service from the perspective of the LAG. See Micro-
BFD.

This section describes the minimal configuration necessary to set up BFD on SR Linux. To create a
BFD session, you configure BFD on both systems (or BFD peers). When BFD has been enabled on
the interfaces and at the global level for the appropriate routing protocols, a BFD session is created,
BFD timers are negotiated, and the BFD peers begin to send BFD control packets to each other at the
negotiated interval.

13.1 Configuring BFD for a subinterface

You can enable BFD with an associated subinterface, and set values for intervals and criteria for declaring
a session down.

Timer values are in microseconds. The detection interval for the BFD session is calculated by multiplying
the value of the negotiated transmission interval by the value specified in this field.

Example:

The following example configures BFD for a subinterface.

--{ candidate shared default }--[  ]--
# info bfd
    bfd {
        subinterface ethernet-1/2.1 {
            admin-state enable
            desired-minimum-transmit-interval 250000
            required-minimum-receive 250000

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

167

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BFD

            detection-multiplier 3
        }
    }

13.2 Configuring BFD under the BGP protocol

BFD can be configured under the BGP protocol at the global, group, or neighbor level.

Before it is enabled, BFD must first be configured for a subinterface and timer values must be set. See
Configuring BFD for a subinterface.

Example:

The following example configures BFD under the BGP protocol at the global level.

--{ candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                failure-detection {
                    enable-bfd true 
                    }
                }
            }
        }
    }

Example

The following example configures BFD for the links between peers within an associated BGP peer group.

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp
    network-instance default {
        protocols {
            bgp {
                group test {
                    failure-detection {
                        enable-bfd true 
                        }
                    }
                }
            }
    }

Example

The following example configures BFD for the link between BGP neighbors.

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp
    network-instance default {
        protocols {
            bgp {
                neighbor 192.35.1.3 {
                    failure-detection {
                        enable-bfd true
                        fast-failover true

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

168

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BFD

                    }
                }
            }
        }
    }

13.3 Configuring BFD under OSPF

For OSPF and OSPFv2, BFD can be enabled at the interface level to monitor the connectivity between the
router and its attached network.

Example:

--{ candidate shared default }--[  ]--
# info network-instance default protocols ospf
    network-instance default {
        protocols {
            ospf {
                instance o1 {
                    area 1.1.1.1 {
                        interface ethernet-1/1.1 {
                            failure-detection {
                                enable-bfd true
                            }
                        }
                    }
                }
            }
        }
    }

13.4 Configuring BFD under IS-IS

BFD can be configured at the interface level for IS-IS. You can optionally configure a BFD-enabled TLV to
be included for IPv4 or IPv6 on the IS-IS interface.

Example:

--{ candidate shared default }--[  ]--
# info network-instance default protocols isis
    network-instance default {
        protocols {
            isis {
                instance i1 {
                    ipv4-unicast {
                        admin-state enable
                    }
                    interface ethernet-1/1.1 {
                        ipv4-unicast {
                            enable-bfd true
                            include-bfd-tlv true
                        }
                    }
                }
            }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

169

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BFD

        }
    }

13.5 Viewing the BFD state

Use the info from state command to verify the BFD state for a network-instance.

Example:

# info from state bfd network-instance default peer 30 
    bfd {
        network-instance default {
            peer 30 {
                oper-state up
                local-address 192.35.1.5
                remote-address 192.35.1.3
                remote-discriminator 25
                subscribed-protocols bgp_mgr
                session-state UP
                remote-session-state UP
                last-state-transition 2020-01-24T16:22:55.224Z
                failure-transitions 0
                local-diagnostic-code NO_DIAGNOSTIC
                remote-diagnostic-code NO_DIAGNOSTIC
                remote-minimum-receive-interval 1000000
                remote-control-plane-independent false
                active-transmit-interval 250000
                active-receive-interval 250000
                remote-multiplier 3
                async {
                    last-packet-transmitted 2020-01-24T16:23:19.385Z
                    last-packet-received 2020-01-24T16:23:18.906Z
                    transmitted-packets 32
                    received-packets 32
                    up-transitions 1
                }
            }
        }
    }

13.6 Micro-BFD

Micro-BFD refers to running BFD over the individual links in a link aggregation group (LAG) to monitor the
bidirectional liveliness of the Ethernet links that make up the LAG.

A LAG member cannot be made operational within the LAG until the micro-BFD session is fully
established. If a micro-BFD session fails, the corresponding Ethernet link is taken out of service from the
perspective of the LAG.

Micro-BFD is supported on Ethernet LAG interfaces with an IP interface. Micro-BFD sessions are
associated with each individual link. When enabled, the state of the individual links depends on the micro-
BFD session state:

• Micro-BFD sessions must be established between both endpoints of a link before the link can be

operationally up.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

170

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BFD

•

•

•

If the micro-BFD session fails, the associated Ethernet link becomes operationally down from the
perspective of the LAG.

If LACP is not enabled for the LAG, if the Ethernet port is up, the system attempts to re-establish the
micro-BFD session with the far end of the link.

If LACP not enabled for the LAG, if the Ethernet port is up, the system attempts to re-establish the
micro-BFD session with the far end of the link when LACP reaches distributing state.

If a link is not active for forwarding from the perspective of a LAG, ARP can still be performed across the
link. For example, when a link is being brought up, and its micro-BFD session is not yet established, ARP
can still be performed for the MAC address at the far end of the link, even though the link is not yet part of
the LAG.

Micro-BFD packets bypass ingress and egress subinterface/interface ACLs, but received micro-BFD
packets can be matched by CPM filters for filtering and logging.

Micro-BFD is supported on all SR Linux systems that also support LAGs: 7250 IXR; 7220 IXR-D1, D2, and
D3; 7220 IXR-H2 and H3.

13.6.1 Configuring micro-BFD for a LAG interface

The following example configures micro-BFD for a LAG interface. The example configures IP addresses to
be used as the source address for IP packets and a remote address for the far end of the BFD session.

The example configures the minimum interval in microseconds between transmission of BFD control
packets, as well as the minimum acceptable interval between received BFD control packets. The detection-
multiplier setting specifies the number of packets that must be missed to declare the BFD session as down.

Example:

--{ * candidate shared default }--[  ]--
# info bfd micro-bfd-sessions
    micro-bfd-sessions {
        lag-interface lag1 {
            admin-state enable
            local-address 192.35.2.5
            remote-address 192.35.2.3
            desired-minimum-transmit-interval 250000
            required-minimum-receive 250000
            detection-multiplier 3
        }
    }

13.6.2 Viewing the micro-BFD state

Use the info from state command to verify the micro-BFD state for members of a LAG interface.

Example:

# info from state micro-bfd-sessions lag-interface lag1 member-interface ethernet 2/1
    micro-bfd-sessions
        lag-interface lag1 {
            admin-state UP
            local-address 192.35.1.5
            remote-address 192.35.1.3
            desired-minimum-transmit-interval 250000

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

171

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

BFD

            required-minimum-receive 250000
            detection-multiplier 3
            member-interface ethernet 2/1 {
                session-state UP
                remote-session-state UP
                last-state-transition 2020-01-24T16:22:55.224Z
                last-failure-time 2020-01-24T16:22:55.224Z
                failure-transitions 0
                local-discriminator 25
                remote-discriminator 25
                local-diagnostic-code NO_DIAGNOSTIC
                remote-diagnostic-code NO_DIAGNOSTIC
                remote-minimum-receive-interval 1000000
                remote-control-plane-independent false
                active-transmit-interval 250000
                active-receive-interval 250000
                remote-multiplier 3
                async {
                   last-clear 2020-01-23T16:21:19.385Z
                   last-packet-transmitted 2020-01-24T16:23:19.385Z
                   last-packet-received 2020-01-24T16:23:18.906Z
                   transmitted-packets 32
                   received-errored-packets 3
                   received-packets 32
                   up-transitions 1
                }
            }
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

172

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Routing policies

14 Routing policies

The SR Linux supports policy-based routing. Policy-based routing controls the size and content of the
routing tables, the routes that are advertised, and the best route to take to reach a destination.

Each routing policy has a sequence of rules (called entries or statements) and a default action. Each
statement has numerical sequence identifier that determines its order relative to other statements in that
policy. When a route is analyzed by a policy, it is evaluated by each statement in sequential order.

Each policy statement has zero or more match conditions and a base action (either accept or reject);
the statement may also have route-modifying actions. A route matches a statement if it meets all of the
specified match conditions.

The first statement that matches the route determines the actions that are applied to the route. If the route
is not matched by any statements, the default action of the policy is applied. If there is no default action,
then a protocol- and context-specific default action is applied.

All routes match a statement with no match conditions. When a route fulfills the match conditions of a
statement, the base action of the statement is applied, along with all of its route-modifying actions.

14.1 Creating a routing policy

A routing policy consists of one or more statements that contain the following:

• Match conditions, such as protocol type, AS path length, and address family, against which routes are

evaluated

• Actions, such as accept or reject, for routes that match the conditions in the statement

Each statement has a specified sequence number. If a policy has multiple statements, they are processed
in sequence-number order. In addition, you can specify a default action that applies to routes that do not
match any statement in the policy.

14.1.1 Specifying match conditions

You can specify the following match conditions in a policy statement:

• Match routes by their protocol type – BGP, static, direct, host, IS-IS, OSPF, and so on.

• Match routes of any protocol by their address family – IPv4-unicast, IPv6-unicast, EVPN.

• Match routes of any protocol by their IPv4/IPv6 prefix.

• Match aggregate and BGP routes by their standard and large communities.

• Match BGP routes by their AS path length.

• Match BGP routes by their AS path encoding.

• Match BGP routes by whether the EVPN route has an Ethernet Segment identifier (ESI) that matches a

member of a specified ESI set.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

173

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Routing policies

• Match BGP routes by whether the EVPN route has an Ethernet tag ID that matches a member of a

specified Ethernet tag set.

• Match BGP routes by whether the EVPN type-2 route has a MAC address that matches a member of a

specified MAC set.

• Match BGP routes by whether the originating router’s IP address in an EVPN type-3 or type-4 route

matches a specified IP address.

• Match BGP routes by whether the EVPN route is a specified route type (ethernet-ad, mac-ip, ethernet-

segment, imet, or ip-prefix).

• Match BGP routes by whether the BGP VPN route has a specified route distinguisher value.

• Match IS-IS routes by their association with either Level1 (L1) or Level2 (L2).

• Match IS-IS routes by their route type (internal or external). An IPv4 route is internal if the prefix was
signaled in TLV 128. An IPv4 route is external if the prefix was signaled in TLV 130. The encoding of
TLV 236 indicates whether an IPv6 route is internal or external.

• Match IS-IS routes by their tag value.

• Match OSPF routes by their area ID.

• Match OSPF routes by their route type (intra-area, inter-area, type-1-ext, type-2-ext, type-1-nssa,

type-2-nssa, summary-aggregate, or nssa-aggregate).

• Match OSPF routes by instance ID.

• Match routes based on EVPN route type.

• Match routes based on IP addresses and prefixes via prefix-sets for route types 2 and 5.

• Match routes based BGP encapsulation extended community.

If a statement has no match conditions defined, all routes evaluated by the policy are considered to be
matches.

Example:

The following example specifies BGP protocol as a match condition in a policy statement:

--{ candidate shared default }--[  ]--
# info routing-policy policy policy01
    routing-policy {
        policy policy01 {
            statement 100 {
                match {
                    protocol bgp
                }
            }
        }
    }

14.1.1.1 Specifying a list as a match condition

You can specify a list of items, such as address prefixes, autonomous systems, BGP communities, and
Ethernet tags as match criteria. To do this, you configure the list and include the list in a policy statement.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

174

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Routing policies

Example:

The following example specifies a list of prefixes that can be used as a match condition in a policy
statement:

--{ candidate shared default }--[  ]--
# info routing-policy
    routing-policy {
        prefix-set western {
            prefix 10.10.0.1/32 mask-length-range exact {
            }
            prefix 10.10.0.2/32 mask-length-range exact {
            }
            prefix 10.10.0.3/32 mask-length-range exact {
            }
            prefix 10.10.0.4/32 mask-length-range exact {
            }
        }
    }

14.1.2 Specifying actions

The following are valid actions for routes that meet the match conditions in a statement:

• Accept the route.

• Reject the route.

• Modify the AS path of a BGP route by prepending additional AS numbers.

• Modify the AS path of a BGP route by deleting the current AS path and replacing it with a new AS path

(a sequence of zero or more AS numbers).

• Add, delete, or replace standard and large communities attached to a BGP route.

• Modify the LOCAL_PREF attribute of a BGP route by specifying a new value.

• Modify the ORIGIN attribute of a BGP route by specifying a new value.

• Set the next-hop-self option for a BGP route.

• Set the next-hop-unchanged option for a BGP route.

• Add, delete, or replace the route tag associated with an IS-IS route.

• Proceed to the next statement in the policy

• Proceed to the next policy

Example:

The following example specifies a policy with two statements. If a route matches the first statement, the
action is to proceed to the next statement. If the route matches the second statement, the action is to
accept.

--{ candidate shared default }--[  ]--
# info routing-policy
    routing-policy {
        policy policy02 {
            statement 100 {
                match {
                    protocol bgp

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

175

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Routing policies

                }
                action {
                    next-entry
                }
            }
            statement 101 {
                match {
                    prefix-set western
                }
                action {
                    accept
                }
            }
        }
    }

14.1.3 Specifying a default action

You can optionally specify the policy action for routes that do not match the conditions defined in the policy.
The default action can be set to all available action states including accept, reject, next-entry, and next-
policy.

•

•

If a default action is defined, and no matches occur with the entries in the policy, the default action is
used.

If no default action is specified, the default behavior of the protocol controls whether the routes match.

For BGP, the default import action is to accept all routes from BGP. For internal routes, the default
export action is to advertise them to BGP peers. For external routes, the default export action is not to
advertise them to BGP peers.

Example:

The following example defines a policy where the default action for non-matching routes is to reject them:

--{ candidate shared default }--[  ]--
# info routing-policy
    routing-policy {
        policy policy01 {
            default-action {
                reject {
                }
            }
        }
    }

14.2 Applying a routing policy

Routing policies can be applied to routes received from other routers (imported routes), as well as routes
advertised to other routers (exported routes). Routing policies can be applied at the network-instance level,
peer-group level, and neighbor level.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

176

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Routing policies

Example:

The following example specifies that BGP in the default network-instance applies policy01 to imported
routes:

--{ candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                import-policy policy01
                }
            }

Example

The following example applies policy02 to BGP routes exported from the peers in peer-group
headquarters1:

--{ candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                group headquarters1 {
                    export-policy policy02
                    }
                }
            }
        }

Example

The following example applies policy02 to BGP routes exported from a specific BGP neighbor:

--{ candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                neighbor 192.168.11.1 {
                    export-policy policy02
                }
        }
    }

14.2.1 Applying a default policy to eBGP sessions

You can specify the action to take for routes exported to or imported from eBGP peers to which no
configured policy applies. This is set with the ebgp-default-policy command and the export-reject-all and
import-reject-all parameters.

• The export-reject-all parameter, when set to true, causes all outbound routes that do not match a

configured export policy to be rejected as if they had been rejected by a configured export policy. The
default is true.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

177

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Routing policies

• The import-reject-all parameter, when set to true, causes all inbound routes that do not match a

configured import policy to be rejected as if they had been rejected by a configured import policy. The
default is true.

Example:

The following example allows a BGP neighbor to export a default route even though the route is not subject
to any configured policy:

--{ candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                ebgp-default-policy {
                    export-reject-all false
                    }
                neighbor 2001:db8::c11 {
                    send-default-route {
                        ipv6-unicast true
                    }
                }
        }
    }

14.2.2 Replacing an AS path

You can configure a routing policy where the AS path in matching routes is replaced by a list of AS
numbers specified in the policy. For routes that match the policy, the current AS path is deleted and
replaced with an AS_SEQ element containing the AS numbers listed in the policy in their configured
sequence.

If you configure an empty AS list in the policy, then the current AS path in a matching route is deleted, and
it would then have a null AS_PATH attribute.

Example:

The following is an example of a routing policy whose action is to replace the AS path in matching routes.

--{ candidate shared default }--[  ]--
# info routing-policy
    routing-policy {
        policy policy02 {
            statement 100 {
                match {
                    protocol bgp
                }
                action {
                    bgp {
                        as-path {
                            replace {
                            }
                        }
                    }
                }
            }
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

178

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

15 Access control lists

An Access Control List, or ACL, is an ordered set of rules that are evaluated on a packet-by-packet
basis to determine whether access should be provided to a specific resource. ACLs can be used to drop
unauthorized or suspicious packets from entering or leaving a routing device via specified interfaces.

SR Linux supports the following types of ACLs:

•

Interface filters

An interface filter is an IPv4 or IPv6 ACL that is applied to a routed or bridged subinterface to restrict
traffic allowed to enter or exit the subinterface. An interface ACL can be applied to input or output traffic
for one or more subinterfaces.

See Interface filters for more information.

• Packet capture filters

A packet capture filter is an IPv4 or IPv6 ACL used to extract packets to the control plane for inspection
by packet capture tools. When an ingress IP packet on any line card transits through the router,
and it matches a rule in a packet capture filter policy, it is copied and extracted toward the CPM and
delivered to a Linux virtual Ethernet interface so that it can be displayed by a packet capture utility, or
encapsulated and forwarded to a remote monitoring system.

See Packet capture filters for more information.

• CPM filters

A CPM filter is an IPv4 or IPv6 ACL used for control plane protection. There is one CPM filter for IPv4
traffic and another CPM filter for IPv6 traffic. When an ingress IP packet is matched by a CPM filter rule,
and it is a terminating packet (that is, it must be extracted to the CPM), then it is processed according to
the matching CPM filter rule.

See Control plane module (CPM) filters for more information.

• System filters (7220 IXR-D1, D2, and D3 systems only)

A system filter ACL is an IPv4 or IPv6 ACL that is evaluated early in the ingress pipeline, at a stage
before tunnel termination occurs and before interface filters are run. For VXLAN traffic, system filters
can match and drop unauthorized VXLAN tunnel packets before they are decapsulated, based on
information in the outer header.

See System filters for more information.

An ACL is applied to a selected set of traffic contexts. A traffic context could be all the IPv4 or IPv6 packets
arriving or leaving on a specific subinterface, or the out-of-band IP traffic arriving on a management
interface, or all the in-band IPv4 or IPv6 packets that are locally terminating on the CPM of the router.

Each ACL rule, or entry, has a sequence ID. The ACL evaluates packets starting with the entry with the
lowest sequence ID, progressing to the entry with the highest sequence ID. Evaluation stops at the first
matching entry (that is, when the packet matches all of the conditions specified by the ACL entry).

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

179

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

15.1 ACL actions

When a packet matches an ACL entry, an action specified by the ACL entry is applied to the packet. An
ACL entry has a primary action and an optional secondary action. The secondary action extends the
primary action with additional packet handling operations.

For traffic transiting through the router, ACL entries support the following primary actions:

• accept – Allow the packet through to the next processing function.

• accept and log – Allow the packet through to the next processing function and send information about

the accepted packet to the log application.

• drop – Discard the packet without ICMP generation.

• drop and log – Discard the packet without ICMP generation and send information about the dropped

packet to the log application.

For traffic transiting through the router, the following secondary action is supported:

•

log – Send information about the packet to the log application.

For traffic terminating on the CPM of the router, the preceding primary and secondary actions are
supported, as well as the following secondary actions for ACL entries where accept is the primary action:

• distributed-policer – If the packet is extracted to the CPM, feed the packet to a hardware-based policer,
which determines if the packet should be queued by the line card toward the CPM or dropped because
a bit-per-second rate is exceeded.

•

system-cpu-policer – If the packet has been extracted to the CPM, feed the packet to a software-based
policer, which determines if the packet should be delivered to the CPM application or dropped because
a packet-per-second rate is exceeded.

If a packet matches an ACL entry, no further evaluation is done for the packet. If the packet does not match
any ACL entry, the default action is accept. To drop traffic that does not match any ACL entry, you can
optionally configure an entry with the highest sequence ID in the ACL to drop all traffic. This causes traffic
that does not match any of the lower-sequence ACL entries to be dropped.

The supported actions for each type of ACL differ based on the hardware platform where the ACL is
configured. The following tables indicate which actions are supported for each ACL filter type for each
hardware platform.

15.1.1 Supported ACL actions for 7250 IXR systems

The following table lists the supported actions for each ACL filter type on 7250 IXR systems.

Table 11: Supported actions for each ACL filter type (7250 IXR)

ACL filter type

Action

Interface filter (input)

accept

accept and log

drop

drop and log

Supported?

Yes

Yes

Yes

Yes

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

180

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

ACL filter type

Action

Interface filter (output)

accept

accept and log

drop

drop and log

CPM filter

accept

accept and log

drop

drop and log

accept and distributed-policer

Supported?

Yes

Yes

Yes

Yes

Yes

Yes

Yes

Yes

Yes

accept and distributed-policer and log

No log generated

accept and system-cpu-policer

Yes

accept and system-cpu-policer and log

No log generated

Packet capture filter

accept

System filter

copy

accept

drop

drop and log

Yes

Yes

No

No

No

15.1.2 Supported ACL actions for 7220 IXR-D systems

The following table lists the supported actions for each ACL filter type on 7220 IXR-D1, D2, D3, and D5
systems.

Table 12: Supported actions for each ACL filter type (7220 IXR-D1, D2, D3, and D5)

ACL filter type

Action

Interface filter (input)

accept

accept and log

drop

drop and log

Supported?

Yes

No log generated

Yes

Yes, using separate
CPU queue

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

181

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

ACL filter type

Action

Interface filter (output)

accept

accept and log

drop

drop and log

CPM filter

accept

accept and log

drop

drop and log

Supported?

Yes

No log generated

Yes

No log generated

Yes

No log generated

Yes

Yes, using shared
CPU queue

accept and distributed-policer

Yes1

accept and distributed-policer and log

No log generated1, 2

accept and system-cpu-policer

Yes

accept and system-cpu-policer and log

No log generated

Packet capture filter

accept

System filter3

copy

accept

drop

drop and log

Yes

Yes

Yes

Yes

Yes

Note:

•

•

•

1 Distributed-policer not supported on 7220 IXR-D5

2 Log not supported on 7220 IXR-D2, D3, and D5

3 System filter not supported on 7220 IXR-D5

15.1.3 Supported ACL actions for 7220 IXR-H systems

The following table lists the supported actions for each ACL filter type on 7220 IXR-H2 and H3 systems.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

182

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

Table 13: Supported actions for each ACL filter type (7220 IXR-H2 and H3)

ACL filter type

Action

Interface filter (input)

accept

accept and log

drop

drop and log

Interface filter (output)

accept

accept and log

drop

drop and log

CPM filter

accept

accept and log

drop

drop and log

Supported?

Yes

No log generated

Yes

Yes, but logged
packet is also
processed by CPM
filter

Yes

No log generated

Yes

No log generated

Yes

No log generated

Yes

Yes

accept and distributed-policer

No policing

accept and distributed-policer and log

No policing and no
log generated

accept and system-cpu-policer

Yes

accept and system-cpu-policer and log

No log generated

Packet capture filter

accept

System filter

copy

accept

drop

drop and log

Yes

Yes

No

No

No

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

183

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

15.2 ACL match conditions

IPv4 ACLs analyze IPv4 packets. The following match criteria are supported by IPv4 ACLs:

•

•

IPv4 destination prefix and prefix-length

IPv4 destination address and address-mask

• TCP/UDP destination port (range)

•

•

•

•

ICMP type/code

IP protocol number

IPv4 source prefix and prefix-length

IPv4 source address and address-mask

• TCP/UDP source port (range)

• TCP flags: RST, SYN, and ACK

• Packet fragmentation: whether the packet is a fragment

• Packet fragmentation: whether the packet is a first-fragment (fragment-offset=0 and more-

fragments=1)

•

IP DSCP

IPv6 ACLs analyze IPv6 packets. The following match criteria are supported by IPv6 ACLs:

•

•

IPv6 destination prefix and prefix-length

IPv6 destination address and address-mask

• TCP/UDP destination port (range)

•

•

•

•

ICMPv6 type/code

IPv6 next-header value. This is the value in the very first next-header field, in the fixed header.

IPv6 source prefix and prefix-length

IPv6 source address and address-mask

• TCP/UDP source port (range)

• TCP flags: RST, SYN, and ACK

•

IP DSCP

15.3 Interface filters

An interface filter is an IPv4 or IPv6 ACL that restricts traffic allowed to enter or exit a subinterface.

IPv4 and IPv6 ACLs can be applied to a subinterface to restrict traffic entering or exiting that subinterface,
as follows:

•

Input IPv4 ACLs – When an IPv4 filter is used as an input ACL on a subinterface that carries IPv4
traffic, the rules apply to native IPv4 packets (ethertype 0x0800) that enter the subinterface and would
normally terminate locally (control/management plane packets) or transit through the router.

The rules also apply to MPLS-encapsulated IPv4 packets (ethertype 0x8847) that are terminating or
transit.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

184

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

•

Input IPv6 ACLs – When an IPv6 filter is used as an input ACL on a subinterface that carries IPv6
traffic, the rules apply to native IPv6 packets (ethertype 0x86DD) that enter the subinterface and would
normally terminate locally (control/management plane packets) or transit through the router.

The rules also apply to MPLS-encapsulated IPv6 packets (ethertype 0x8847) that are terminating or
transit.

• Output IPv4 ACLs – When an IPv4 filter is used as an output ACL on a subinterface that carries IPv4
traffic, the rules apply to native IPv4 packets (ethertype 0x0800) that exit the subinterface, including
packets that originated locally (control/management plane packets) and packets that transited through
the router.

The rules do not apply to MPLS-encapsulated IPv4 packets (ethertype 0x8847) exiting the subinterface.

• Output IPv6 ACLs – When an IPv6 filter is used as an output ACL on a subinterface that carries IPv6
traffic, the rules apply to native IPv6 packets (ethertype 0x86DD) that exit the subinterface, including
packets that originated locally (control/management plane packets) and packets that transited through
the router.

The rules do not apply to MPLS-encapsulated IPv6 packets (ethertype 0x8847) exiting the subinterface.

15.3.1 Creating an IPv4 ACL

The following is an example IPv4 ACL that has one entry.

Example:

This example creates an IPv4 ACL named ip_tcp. Within the ip_tcp ACL, an entry with sequence ID
1000 is configured. The action is specified as accept, with logging set to true.

The filter matches packets with IP destination address 100.1.3.1/32; for TCP traffic, if the source address
100.1.5.1/32, destination port 6789, and source port 6722 matches the filter, the traffic stream is accepted.

--{ * candidate shared default }--[  ]--
# info acl 
 ipv4-filter ip_tcp {
        entry 1000 {
            description Match_IP_Address_TCP_Protocol_Ports
            action {
                accept {
                    log true
                }
            }
            match {
                destination-address 100.1.3.1/32
                protocol tcp
                source-address 100.1.5.1/32
                destination-port {
                    value 6789
                }
                source-port {
                    value 6722
                }
            }
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

185

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

Example

The following is an example of an entry added to the ip_tcp ACL that causes all traffic to be dropped.
Because it has the highest sequence ID, traffic that matches any of the lower-sequenced ACL entries
would have been accepted before being evaluated by this entry. Only traffic that did not match any of the
other ACL entries would be dropped by this entry.

--{ * candidate shared default }--[  ]--
# info acl
       ipv4-filter ip_tcp {
           entry 65535 {
               action {
                   drop {
                     log true
                   }
               }
           }
        }

Note that the drop action with logging set to true is not supported on 7220 IXR-D1, D2, D3, and D5
systems when it is attached as an egress filter.

15.3.2 Creating an IPv6 ACL

The following is an example IPv6 ACL that has one entry.

Example:

This example creates an IPv6 ACL named ipv6_tcp. Within the ipv6_tcp ACL, an entry with sequence
ID 100 is configured. The action is specified as accept, with logging set to true.

The filter matches packets with IPv6 destination address 2001:10:1:3::1/120; for TCP traffic, if the source
address 2001:10:1:5::1/120, destination port 6789, and source port 6722 matches the filter, the traffic
stream is accepted.

--{ * candidate shared default }--[  ]--
# info acl
ipv6-filter ipv6_tcp {
        entry 100 {
            description Match_Dest_Address_TCP_Src_Address_DP_SP
            action {
                accept {
                    log true
                }
            }
            match {
                destination-address 2001:10:1:3::1/120
                next-header tcp
                source-address 2001:10:1:5::1/120
                destination-port {
                    value 6789
                }
                source-port {
                    value 6722
                }
            }
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

186

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

15.3.3 Attaching an ACL to a subinterface

After an ACL is configured, you can attach it to a subinterface so that traffic entering or exiting the
subinterface is subject to the rules defined in the ACL.

Example:

The following commands apply IPv4 and IPv6 ACLs to inbound traffic on a subinterface:

--{ * candidate shared default }--[  ]--
# interface ethernet-1/16
--{ * candidate shared default }--[ interface ethernet-1/16 ]--
# subinterface 1
--{ * candidate shared default }--[ interface ethernet-1/16  subinterface 1 ]--
# acl 
--{ * candidate shared default }--[ interface ethernet-1/16 subinterface 1 acl ]-- 
# input ipv4-filter ip_tcp
--{ * candidate shared default }--[ interface ethernet-1/16 subinterface 1 acl ]--
# input ipv6-filter ipv6_tcp 

Example

You can check the configuration of the interface to verify that the ACL is successfully attached. For
example:

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/16
interface ethernet-1/16 {
    description dut1-dut-2
    subinterface 1 {
        ipv4 {
            address 100.1.5.2/24 {
            }
            arp {
                neighbor 100.1.5.1 {
                    link-layer-address 00:00:64:01:05:05
                }
            }
        }
        ipv6 {
            address 2001:10:1:5::2/120 {
            }
            neighbor-discovery {
                neighbor 2001:10:1:5::1 {
                    link-layer-address 00:00:64:01:05:05
                }
            }
        }
        acl {
            input {
                ipv4-filter ip_tcp
                ipv6-filter ipv6_tcp
            }
        }
    }
}

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

187

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

15.3.4 Attaching an ACL to the management interface

To modulate traffic for the management interface, navigate to the subinterface of interface mgmt0. Under
the acl context, attach the IPv4 or IPv6 ACL for input/output traffic.

Example:

--{ * candidate shared default }--[  ]--
# interface mgmt0
--{ * candidate shared default }--[ interface mgmt0 ]—
# subinterface 0
--{ * candidate shared default }--[ interface mgmt0 subinterface 0 ]--
# acl
--{ * candidate shared default }--[ interface mgmt0 subinterface 0 acl ]—
# input ipv4-filter ip_tcp
--{ * candidate shared default }--[ interface mgmt0 subinterface 0 acl ]—
# input ipv6-filter ipv6_tcp

Example

To verify the configuration for the management interface ACL:

--{ * candidate shared default }--[  ]--
# info interface mgmt0
   interface mgmt0     {
     admin-state enable
        subinterface 0 {
            admin-state enable
            ipv4 {
               dhcp-client true
            }
            ipv6 {
               dhcp-client true
            }
            acl {
               input {
                   ipv4-filter ip_tcp
                   ipv6-filter ipv6_tcp
               }
            }
        }
   }

15.3.5 Detaching an ACL from an interface

To detach an ACL from an interface, enter the subinterface context and delete the ACL from the
configuration.

Example:

The following commands detach an ACL from a subinterface:

--{ * candidate shared default }--[  ]--
# interface ethernet-1/16
--{ * candidate shared default }--[ interface ethernet-1/16 ]—
# subinterface 1
--{ * candidate shared default }--[ interface ethernet-1/16 subinterface 1 ]—
# delete acl input ipv4-filter

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

188

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

--{ * candidate shared default }--[ interface ethernet-1/16 subinterface 1 ]--

Example

Use the info interface command to verify that the ACL is no longer part of the subinterface configuration.
For example:

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/16
interface ethernet-1/16 {
    description dut1-dut-2
    subinterface 1 {
        ipv4 {
            address 100.1.5.2/24 {
            }
            arp {
                neighbor 100.1.5.1 {
                    link-layer-address 00:00:64:01:05:05
                }
            }
        }
        ipv6 {
            address 2001:10:1:5::2/120 {
            }
            neighbor-discovery {
                neighbor 2001:10:1:5::1 {
                    link-layer-address 00:00:64:01:05:05
                }
            }
        }
        acl {
            input {
                ipv6-filter ipv6_tcp
            }
        }
    }
}

15.3.6 Detaching an ACL from the management interface

The following example detaches an ACL from the management interface:

Example:

--{ * candidate shared default }--[  ]--
# interface mgmt0
--{ * candidate shared default }--[ interface mgmt0 ]—
# subinterface 0
--{ * candidate shared default }--[ interface mgmt0 subinterface 0 ]--
# delete acl input ipv4-filter

Example

To verify that the ACL was detached from the management interface:

--{ * candidate shared default }--[  ]--
# info interface mgmt0
   interface mgmt0     {
     admin-state enable

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

189

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

        subinterface 0 {
            admin-state enable
            ipv4 {
               dhcp-client true
            }
            ipv6 {
               dhcp-client true
            }
            acl {
               input {
                  ipv6-filter ipv6_tcp
               }
            }
        }
   }

15.3.7 Modifying ACLs

You can add entries to an ACL, delete entries from an ACL, and delete the entire ACL from the
configuration.

Example:

To add an entry to an ACL, enter the context for the ACL, then add the entry. For example, the following
commands add an entry to IPv4 ACL ip_tcp:

--{ * candidate shared default }--[  ]--
# acl ipv4-filter ip_tcp
--{ candidate shared default }--[ acl ipv4-filter ip_tcp ]--
# entry 65535
--{ candidate shared default }--[ acl ipv4-filter ip_tcp entry 65535 ]--
# action drop
--{ candidate shared default }--[ acl ipv4-filter ip_tcp entry 65535 action drop ]--
# log true
--{ candidate shared default }--[ acl ipv4-filter ip_tcp entry 65535 action drop ]--

Example

To delete an entry in an ACL, use the delete command under the context for the ACL and specify the
sequence ID of the entry to be deleted. For example, the following commands delete the entry in IPv4 ACL
ip_tcp with sequence ID 65535:

--{ candidate shared default }--[  ]--
# acl ipv4-filter ip_tcp
--{ candidate shared default }--[ acl ipv4-filter ip_tcp ]--
# delete entry 65535

Example

To delete the entire ACL, use the delete command under the acl context. For example, the following
commands delete the ip_tcp ACL:

--{ * candidate shared default }--[  ]--
# acl
--{ candidate shared default }--[ acl ]--
# delete ipv4-filter ip_tcp

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

190

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

15.3.8 Resequencing ACL entries

To aid in managing complex ACLs that have many entries, you can resequence the ACL entries to set
a sequence ID number for the first entry and a constant increment for the sequence ID for subsequent
entries.

For example, if you have an ACL with three entries, sequence IDs 123, 124, and 301, you can resequence
the entries so that the initial entry has sequence ID 100, and the other two entries have sequence ID 110
and 120.

Example:

The following is an example of an ACL with three entries:

--{ candidate shared default }--[ acl ]—
# info ipv4-filter ip_tcp
 ipv4-filter ip_tcp {
        entry 123 {
            action {
                drop {
                    log true
                }
            }
            match {
                destination-address 1.1.2.1/24
            }
        }
        entry 124 {
            action {
                accept {
                    log true
                }
            }
            match {
                destination-address 1.1.3.1/24
            }
        }
        entry 301 {
            action {
                drop {
                }
            }
            match {
                destination-address 1.1.4.1/24
            }
        }

To resequence the entries in the ACL so that the first entry has sequence ID 100, and the next two entries
are incremented by 10, enter the context for the ACL, issue the tools resequence command, then specify
the initial sequence ID and the increment for the subsequent entries. For example:

--{ candidate shared default }--[  ]--
# acl ipv4-filter ip_tcp
--{ candidate shared default }--[ acl ipv4-filter ip_tcp ]--
# tools resequence start 100 increment 10

After you enter the command, the ACL entries are renumbered. For example:

--{ candidate shared default }--[ acl ]—

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

191

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

# info ipv4-filter ip_tcp
 ipv4-filter ip_tcp {
        entry 100 {
            action {
                drop {
                    log true
                }
            }
            match {
                destination-address 1.1.2.1/24
            }
        }
        entry 110 {
            action {
                accept {
                    log true
                }
            }
            match {
                destination-address 1.1.3.1/24
            }
        }
        entry 120 {
            action {
                drop {
                }
            }
            match {
                destination-address 1.1.4.1/24
            }
        }

The resequence command is only available inside an ACL configuration context, and it only applies to the
entries of the ACL associated with that context.

15.4 Packet capture filters

For troubleshooting purposes, the SR Linux supports ACL policies called packet capture filters. When an
ingress IP packet on any line card transits through the router, and it matches a rule in a capture-filter policy,
it is copied and extracted toward the CPM (using the capture-filter extraction queue) and delivered to a
Linux virtual Ethernet interface, so that it can be displayed by tcpdump (or similar packet capture utility), or
encapsulated and forwarded to a remote monitoring system.

Similarly, when an ingress IP packet on any line card terminates locally, and it matches a rule of a capture-
filter policy, it is extracted toward the CPM (using the normal protocol-based extraction queue), and a
header field indicates to the CPM to replicate it (after running the CPM-filter rules) toward the Linux virtual
Ethernet interface.

There is one capture-filter for IPv4 traffic and another capture-filter for IPv6 traffic. The default IPv4
capture-filter policy copies no IPv4 packets and the default IPv6 capture-filter copies no IPv6 packets.

The entries for each capture-filter are installed on every line card. On the line card, the entries are
evaluated after the input subinterface ACLs and before the CPM-filter ACLs. On the CPM, the entries in the
capture-filter policy are evaluated after the CPM-filter entries.

When a capture-filter ACL is created, its rules are evaluated against all transit and terminating IPv4 or IPv6
traffic that is arriving on any subinterface of the router, regardless of where that traffic entered in terms
of network-instance, subinterface, linecard, pipeline, and so on. Note that capture-filter ACL rules cannot

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

192

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

override interface filter or system-filter ACL drop outcomes; packets dropped by interface filter ACLs or a
system filter ACL cannot be mirrored to the control plane.

Each capture-filter entry has a set of zero or more match conditions, and one of two possible actions:
accept and copy. The match conditions are the same as the other filter types. The accept action passes the
matching packet to the next stage of processing, without creating a copy. The copy action creates a copy of
the matching packet, extracts it toward the CPM and delivers it to the designated virtual Ethernet interface.

15.5 Control plane module (CPM) filters

For control plane protection, SR Linux supports ACL policies called CPM filters. There is one CPM filter for
IPv4 traffic and another CPM filter for IPv6 traffic. When an ingress IP packet is matched by a CPM filter
rule, and it is a terminating packet (that is, it must be extracted to the CPM), then it is processed according
to the matching CPM filter rule.

The entries for each CPM filter are installed on every line card. They are evaluated after the input
subinterface ACLs and after the capture-filter ACLs. CPM filter rules have no effect on locally originating
traffic or transit traffic, and they have no interaction with output subinterface ACLs.

When a CPM filter ACL is created, its rules are evaluated against all IPv4 or IPv6 traffic that is locally
terminating on the router, regardless of where that traffic entered in terms of network-instance,
subinterface, linecard, pipeline, and so on.

On 7250 IXR systems, for traffic terminating on the CPM of the router, the following secondary actions are
supported for ACL entries where accept is the primary action:

• distributed-policer – If the packet is extracted to the CPM, feed the packet to a hardware-based policer,
which determines if the packet should be queued by the line card toward the CPM or dropped because
a bit-per-second rate is exceeded.

•

system-cpu-policer – If the packet has been extracted to the CPM, feed the packet to a software-based
policer, which determines if the packet should be delivered to the CPM application or dropped because
a packet-per-second rate is exceeded.

On 7220 IXR-D1, D2, D3, and D5 systems, CPM filter ACLs support the following actions:

• accept – Allow the packet through to the next processing function.

• accept and distributed-policer – The packet is allowed through to the next processing function and rate

limited by a policer instance implemented by the 7220 IXR-D2 and D3.

• accept and system-cpu-policer – The packet is allowed through to the next processing function and rate

limited by a policer instance implemented by XDP-CPM.

• drop – Discard the packet without ICMP generation.

• drop and log – Discard the packet without ICMP generation and send information about the dropped

packet to the log application.

The system-cpu-policer and distributed-policer actions police terminating traffic to ensure that the rate does
not exceed a safe limit.

The system-cpu-policer action applies an aggregate rate limit, regardless of ingress line card, while the
distributed-policer action applies a rate limit to the extracted traffic from each core (7250 IXR) or complex
(7220 IXR) associated with the ingress port. You can have both types of policer actions in the same CPM
filter entry, or only one of them.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

193

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

CPM filter rules that apply a system-cpu-policer or distributed-policer action do not directly specify the
policer parameters; they refer to a generically defined policer. This allows different CPM filter entries, even
across multiple ACLs, to use the same policer. Optionally, each policer can be configured as entry-specific,
which means a different policer instance is used by each referring filter entry, even if they are part of the
same ACL.

15.6 System filters

A system filter ACL is an IPv4 or IPv6 ACL that evaluates ingress traffic before all other ACL rules. If an
IP packet is dropped by a system filter rule, it is the final disposition of the packet; neither a capture-filter
copy/accept action, nor an ingress interface ACL accept action, nor a CPM-filter accept action can override
the drop action of a system filter.

At most one system filter can be defined for IPv4 traffic, and at most one system filter can be defined for
IPv6 traffic. System filter ACLs are supported on 7220 IXR-D1, D2, and D3 systems only. They can be
applied only at ingress, not egress.

When a system-filter ACL is created, its rules are automatically installed everywhere, meaning they are
evaluated against all transit and terminating IPv4 or IPv6 traffic arriving on any subinterface of the router,
regardless of where that traffic entered in terms of network-instance, subinterface, pipeline, and so on.

A system filter is the only type of filter that can match the outer header of tunneled packets. For VXLAN
traffic, this allows you to configure a system filter that matches and drops unauthorized VXLAN tunnel
packets before they are decapsulated. The system filter matches the outer header of tunneled packets;
they do not filter the payload of VXLAN tunnels.

15.6.1 Creating a system filter

The following is an example of a system filter ACL that filters IPv4 traffic. When the system filter is applied,
it evaluates all transit and terminating IPv4 arriving on any subinterface of the router. The system filter ACL
evaluates the traffic before any other ACL filters. System filter ACLs can be configured on 7220 IXR-D1,
D2, and D3 systems only.

Example:

--{ * candidate shared default }--[  ]--
# info acl system-filter
 acl
    system-filter {
        ipv4-filter {
            entry 44 {
                action {
                    drop {
                        log true
                    }
                }
                match {
                    source-ip {
                        address 100.1.5.1
                        mask 0.0.0.255
                    }
                }
            }
        }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

194

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

    }

15.7 Configuring logging for ACLs

You can configure the SR Linux to log information about packets that match an ACL entry in the system
log.

You can set thresholds for ACL or TCAM resource usage. When utilization of a specified resource reaches
the threshold in either the rising or falling direction, it can trigger a log message.

15.7.1 Enabling syslog for the ACL subsystem

If you set the log parameter to true for the accept or drop action in an ACL entry, information about
packets that match the ACL entry is recorded in the system log. You can specify settings for the log file for
the ACL subsystem, including the location of the log file, maximum log file size, and the number of log files
to keep.

Example:

For example, the following configuration specifies that the log file for the ACL subsystem be stored in
the file dut1_file, located in the /opt/srlinux/bin/logs/srbase directory. The log file can be a
maximum of 1 Mb. When the log file reaches this size, it is renamed using dut1_file as its base name.
The five most recent log files are kept.

--{ candidate shared default }--[  ]--
# system
--{ candidate shared default }--[ system ]--
# info logging file dut1_file
logging {
        file dut1_file {
            directory /opt/srlinux/bin/logs/srbase/
            rotate 5
            size 1M
            subsystem acl {
            }
        }
}

Ensure that write permission is set for the specified directory path.

15.7.1.1 Syslog entry examples

The following are examples of syslog entries for ACLs.

IPv4 Accept:

acl||I Type: Ingress IPv4 Filter: testing Sequence Id: 100 Action: Accept Interface: ethernet-
1/16:1 Packet length: 56 IP Source: 100.1.5.1 Destination: 100.1.3.1 Protocol: 6 TCP Source
 port: 6722 Destination Port: 6789 Flags: SYN

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

195

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

IPv4 Drop:

acl||I Type: Ingress IPv4 Filter: test Sequence Id: 65535 Action: Drop Interface: ethernet-
1/16:1 Packet length: 44 IP Source: 100.3.2.3 Destination: 100.1.3.1 Protocol: 17 UDP Source
 port: 6722 Destination Port: 6789

IPv6 Accept:

acl||I Type: Ingress IPv6 Filter: tests Sequence Id: 1000 Action: Accept Interface: ethernet-
1/16:1 Packet length: 76 IP Source: 2001:10:1:5::1 Destination: 2001:10:1:3::1 Protocol: 6 TCP
 Source port: 6722 Destination Port: 6789 Flags: SYN

15.7.2 Logging ACL resource usage

You can set thresholds for ACL resource usage. When utilization of a specified ACL resource, such as
input IPv4 filter instances, reaches the threshold in either the rising or falling direction, it can trigger a log
message.

Example:

The following example sets thresholds for resource usage by input IPv4 filter instances. If the resource
usage percentage falls below the falling-threshold-log value, a log message of priority notice
is generated. If the resource usage percentage falls below the rising-threshold-log value, a log
message of priority warning is generated.

--{ * candidate shared default }--[  ]--
# info platform resource-monitoring
    platform {
        resource-monitoring {
            acl {
                resource input-ipv4-filter-instances {
                    rising-threshold-log 90
                    falling-threshold-log 90
                }
            }
        }
    }

15.7.3 Logging TCAM resource usage

You can set thresholds for Ternary Content Addressable Memory (TCAM) resource usage. When utilization
of a specified TCAM resource, such as TCAM used by IPv4 CPM filters, reaches the threshold in either the
rising or falling direction, it can trigger a log message.

Example:

The following example sets thresholds for TCAM resource usage by IPv4 CPM filters. If the resource
usage percentage falls below the falling-threshold-log value, a log message of priority notice
is generated. If the resource usage percentage falls below the rising-threshold-log value, a log
message of priority warning is generated.

--{ * candidate shared default }--[  ]--
# info platform resource-monitoring
    platform {

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

196

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

        resource-monitoring {
            tcam {
                resource cpm-capture-ipv4 {
                    rising-threshold-log 90
                    falling-threshold-log 90
                }
            }
        }
    }

15.8 Collecting and displaying ACL statistics

The SR Linux can collect statistics for packets matching an ACL and display statistics for the matched
packets. You can display the amount of system resources (TCAM) used by each type of ACL on each line
card. ACL statistics can also be displayed using show commands.

15.8.1 Collecting ACL statistics

You can configure an ACL to collect statistics for packets matching the ACL. Statistics can be collected for
packets that match each ACL entry, as well as for matching input/output traffic per subinterface.

Example:

The following example configures the ACL to record the number of matching packets for each entry:

--{ candidate shared default }--[ acl ]-- 
# ipv4-filter ip_tcp
--{ candidate shared default }--[ acl ipv4-filter ip_tcp ]--
# statistics-per-entry true

Example

By default, if two or more subinterfaces on the same line card reference the same ACL for filtering the
same direction of traffic, they use a shared instance of the same ACL in hardware. This means that per-
entry statistics (including the number of matched packets and the time stamp of the last matching packet),
if enabled, reflect the aggregate of the data gathered for the multiple subinterfaces.

To collect per-entry, per-subinterface statistics, instead of the aggregate of the subinterfaces where the
ACL is applied, you can configure an ACL to operate in subinterface-specific mode.

If you change an ACL from subinterface-specific mode to shared mode, or the other way around, during
the transition from one mode to the next, traffic continues to be subject to the previous mode until the
system resources (TCAM) entries are programmed for the new mode.

The following example configures the ACL to collect statistics for matching packets inbound and outbound
on each subinterface:

--{ candidate shared default }--[ acl ]-- 
# ipv4-filter ip_tcp
--{ candidate shared default }--[ acl ipv4-filter ip_tcp ]--
# subinterface-specific input-and-output

You can configure the following values for the subinterface-specific parameter:

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

197

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

• disabled (the default) – All subinterfaces on a single line card that reference the ACL as an input ACL
use a shared filter instance, and all subinterfaces on a single line card that reference the ACL as an
output ACL use a shared filter instance.

•

input-only – All subinterfaces on a single line card that reference the ACL as an output ACL use a
shared filter instance, but each subinterface that references the ACL as an input ACL uses its own
separate instance of the filter.

• output-only – All subinterfaces on a single line card that reference the ACL as an input ACL use a
shared filter instance, but each subinterface that references the ACL as an output ACL uses its own
separate instance of the filter.

•

input-and-output – Each subinterface that references the ACL as either an input ACL or an output ACL
uses its own separate instance of the filter.

15.8.2 Displaying ACL statistics

Use the info from state command to display the matched packet statistics and the time of the last match
for the interfaces to which the ACL is attached.

Example:

In the following example, the ACL is attached to two interfaces, and statistics are collected for each
subinterface:

--{ candidate shared default }--[ acl ipv4-filter ip_tcp ]--
# info from state
    subinterface-specific input-and-output
    statistics-per-entry true
    entry 1000 {
        description Match_IP_Address_TCP_Protocol_Ports
        action {
            accept {
                log true
            }
        }
        match {
            destination-address 100.1.3.1/32
            protocol tcp
            source-address 100.1.5.1/32
            destination-port {
                value 6789
            }
            source-port {
                value 6722
            }
        }
        statistics {
            aggregate {
                in-matched-packets 3000
                in-last-match 2019-07-16T10:53:00.1563Z
                out-matched-packets 0
            }
            per-interface {
                subinterface ethernet-1/16.1 {
                    in-matched-packets 3000
                    in-last-match 2019-07-16T10:53:00.1563Z
                }
            }
        }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

198

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

    }
    entry 65535 {
        action {
            drop {
                log true
            }
        }
        statistics {
            aggregate {
                in-matched-packets 1000
                in-last-match 2019-07-16T10:53:30.1563Z
            }
            per-interface {
                subinterface ethernet-1/16.1 {
                    in-matched-packets 1000
                    in-last-match 2019-07-16T10:53:30.1563Z
                }
            }
        }
    }

If the match criteria changes for an ACL entry, the statistics counter does not reset to zero. To reset the
statistics counter for an ACL entry to zero, use the tools acl clear command, as described in Clearing ACL
statistics.

15.8.3 Displaying ACL resource usage

Use the info from state platform command to display the amount of system resources (TCAM) used by
each type of ACL on each line card.

Example:

The following example shows two different numbers for the remaining (free) TCAM entry resources that
are available for input IPv4 ACLs on the line card. The free-static value refers to the available number
of resources assuming no additional TCAM banks are dynamically assigned to the ACL type. The free-
dynamic value refers to the available number of resources assuming all unallocated TCAM banks are
dedicated to the specified ACL type.

--{ candidate shared default }--[  ]--
# info from state platform linecard 1 forwarding-complex 0 tcam resource if-input-ipv4
    platform {
        linecard 1 {
            forwarding-complex 0 {
                tcam {
                    resource if-input-ipv4 {
                        free-static 2046
                        free-dynamic 18430
                        reserved 2
                        programmed 2
                    }
                }
            }
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

199

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

Example:

The following example shows the amount of system resources allocated to input IPv4 ACLs on the line
card and how much is used and free:

--{ candidate shared default }--[  ]--
# info from state platform linecard 1 forwarding-complex 0 acl resource input-ipv4-filter-
instances
    platform {
        linecard 1 {
            forwarding-complex 0 {
                acl {
                    resource input-ipv4-filter-instances {
                        used 1
                        free 254
                    }
                }
            }
        }
    }

15.8.4 Clearing ACL statistics

To reset ACL statistics counters to zero, use the tools acl clear command. This command can clear
statistics at the IPv4 / IPv6 / CPM filter level, ACL entry level, or for an interface or subinterface to which
the ACL is attached.

Example:

The following example clears statistics for an IPv4 filter:

--{ candidate shared default }--[ acl ]-- 
# tools acl ipv4-filter tcp_ip clear

Example

After this command is executed, the info from state output for the IPv4 filter includes a timestamp
indicating when the statistics were cleared. For example:

--{ candidate shared default }--[ acl ipv4-filter tcp_ip ]-- 
# info from state 
    subinterface-specific output-only
    statistics-per-entry true
    entry 1000 {
        description Match_IP_Address_TCP_Protocol_Ports
        action {
            accept {
                log true
            }
        }
        match {
            destination-address 100.1.3.1/32
            protocol tcp
            source-address 100.1.5.1/32
            destination-port {
                value 6789
            }
            source-port {
                value 6722

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

200

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

            }
        }
        statistics {
            last-clear 2019-10-03T13:53:51.000Z
        }
    }

Example

The following example clears statistics for a specific entry in the IPv4 filter:

--{ candidate shared default }--[ acl ]-- 
# tools acl ipv4-filter tcp_ip entry 1000 statistics clear

Example

The following example clears statistics for a specified subinterface for a specified entry in the IPv4 filter:

--{ candidate shared default }--[ acl ]-- 
# tools acl ipv4-filter tcp_ip entry 1000 statistics per-interface subinterface 1 clear

15.8.5 Displaying ACL statistics using show commands

You can display ACL statistics using relevant show commands.

Example:

To display information about all active ACLs, use the show acl summary command. For example:

# show acl summary
--------------------------------------------------------------------------------
IPv4 Filter ACLs
--------------------------------------------------------------------------------
Filter : ip_tcp
Active on : 1 subinterfaces (input) and 0 subinterfaces (output)
Entries : 2
--------------------------------------------------------------------------------
IPv6 Filter ACLs
--------------------------------------------------------------------------------
Filter : ipv6_tcp
Active on : 1 subinterfaces (input) and 0 subinterfaces (output)
Entries : 1
--------------------------------------------------------------------------------

Example

You can display statistics for a specific ACL, including how many times each ACL entry was matched on all
subinterfaces to which the ACL was applied. For example:

--{ candidate shared default }--[  ]--
# show acl ipv4-filter ip_tcp
====================================================================================
Filter        : ip_tcp
SubIf-Specific: input-and-output
Entry-stats   : yes
Entries       : 2
------------------------------------------------------------------------------------
 Subinterface     Input   Output

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

201

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

ethernet-1/16.1   yes     no    
------------------------------------------------------------------------------------
Entry 1000
  Match               : protocol=tcp, 100.1.5.1/32(6722-6722)->100.1.3.1/32(6789-
6789)
  Action              : accept
  Input Match Packets : 3000
  Input Last Match    : 18 seconds ago
  Output Match Packets: 0
  Output Last Match   : never
Entry 65535
  Match               : protocol=<undefined>, any(*)->any(*)
  Action              : drop
  Input Match Packets : 1000
  Input Last Match    : 6 minutes ago
  Output Match Packets: 0
  Output Last Match   : never

Example

To display per-interface statistics for packets matching each ACL entry, specify the interface name in
addition to the ACL name. For example:

--{ candidate shared default }--[  ]--
# show acl ipv4-filter ip_tcp interface ethernet-1/16
====================================================================================
Filter        : ip_tcp
SubIf-Specific: input-and-output
Entry-stats   : yes
Entries       : 2
------------------------------------------------------------------------------------
 Subinterface     Input   Output
ethernet-1/16.1   yes     no    
------------------------------------------------------------------------------------
Entry 1000
  Match               : protocol=tcp, 100.1.5.1/32(6722-6722)->100.1.3.1/32(6789-
6789)
  Action              : accept
  Input Match Packets : 3000
  Input Last Match    : 5 minutes ago
  Output Match Packets: 0
  Output Last Match   : never
Entry 65535
  Match               : protocol=<undefined>, any(*)->any(*)
  Action              : drop
  Input Match Packets : 1000
  Input Last Match    : 10 minutes ago
  Output Match Packets: 0
  Output Last Match   : never

Example

To display statistics for packets matching a CPM filter, specify the CPM filter type (IPv4 or IPv6). For
example:

--{ candidate shared default }--[  ]--
# show acl cpm-filter ipv4-filter
================================================================================
Filter     : CPM IPv4-filter
Entry-stats: no
Entries    : 1
--------------------------------------------------------------------------------

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

202

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Access control lists

Entry 1001
  Match          : protocol=<undefined>, any(*)->1.1.2.1/24(*)
  Action         : none
  Matched Packets: 0
--------------------------------------------------------------------------------

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

203

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

16 SR Linux applications

The SR Linux is a suite of modular, lightweight applications running like any others in a Linux environment.
Each SR Linux application supports a different protocol or function, such as BGP, LLDP, AAA, and so on.
These applications use gRPC and APIs to communicate with each other and external systems over TCP.

One SR Linux application, the application manager (app_mgr), is itself responsible for monitoring the
health of the process IDs running each SR Linux applications, and restarting them if they fail. The
application manager reads in application-specific YAML configuration and YANG models, and starts each
application (or allows an application not to start if there no configuration exists for it). There is an instance
of the app_mgr that handles applications running on the CPM, and an instance of the app_mgr on each
IMM that handles applications running on the line card.

In addition to the Nokia-provided SR Linux applications, the SR Linux supports installation of user-defined
applications, which are managed and configured in the same way as the default SR Linux applications.
User-defined SR Linux applications can be loaded, reloaded, and unloaded from the system as necessary.

16.1 Installing an application

About this task

To install an application, copy the application files into the appropriate SR Linux directories, then reload the
application manager and start the application.

The example in this topic installs an application called fib_agent. The application consists of files named
fib_agent.yml, fib_agent.sh, fib_agent.py, and fib_agent.yang. The fib_agent.yml file is
installed in the /etc/opt/srlinux/appmgr/ directory. The .yml file for a user-defined application must
reside in this directory in order for the app_mgr to read its YAML configuration.

The .yml file defines the locations of the other application files. The other application files can reside
anywhere in the system other than in the /opt/srlinux/ directory or any tempfs file system.

In this example, the fib_agent.sh and fib_agent.py files are installed in the directory /user_
agents/, and the fib_agent.yang file is installed in the directory/yang/. The locations for these files
are defined in the fib_agent.yml file.

Procedure

Step 1. Copy the application files into the SR Linux directories.

Example

--{ candidate }--[  ]--
# bash
# cp fib_agent.yml /etc/opt/srlinux/appmgr/.
# cp fib_agent.sh /user_agents/.
# cp fib_agent.py /user_agents/.
# cp fib_agent.yang /yang/.
# exit

Step 2. From the SR Linux CLI, reload the application manager.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

204

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

Example

--{ candidate }--[ ]--
# tools system app-management application app_mgr reload

Step 3. Apply the changes to the configuration.

Example

--{ candidate }--[  ]--
# fib-agent
--{ candidate }--[ fib-agent ]--
# commit stay
All changes have been committed. Starting new transaction.
--{ candidate }--[ fib-agent ]--

Step 4. Verify that the application is running.

Example

# show system application fib_agent
  +-----------+-----+---------+-----------------------+--------------------------+
  |  Name     | PID |  State  |        Version        |       Last Change        |
  +===========+=====+=========+=======================+==========================+
  | fib_agent | 227 | running | v21.3.0-61-gd19567393 | 2021-01-13T20:16:45.697Z |
  +-----------+-----+---------+-----------------------+--------------------------+

16.2 Starting an application

To start an SR Linux application instance, use the start option in the tools system app-management
command. To terminate a running application instance and restart it, use the restart option.

Example:

To start an SR Linux application instance:

--{ candidate }--[  ]--
# tools system app-management application mpls_mgr start
/system/app-management/application[name=mpls_mgr]:
    Application 'mpls_mgr' was started

Example

To restart an SR Linux application instance:

--{ candidate }--[  ]--
# tools system app-management application mpls_mgr restart
/system/app-management/application[name=mpls_mgr]:
    Application 'mpls_mgr' was killed with signal 9
/system/app-management/application[name=mpls_mgr]:
    Application 'mpls_mgr' was restarted

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

205

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

16.3 Terminating an application

You can use the stop, quit, or kill options in the tools system app-management command to terminate
an SR Linux application.

• stop gracefully terminates the application, allowing it to clean up before exiting.

• quit terminates the application and generates a core dump. The core dump files are saved in the /

var/log/srlinux/cores/ directory.

• kill terminates the application immediately, without allowing it to clean up before exiting.

Example:

To terminate an application gracefully:

--{ candidate }--[  ]--
# tools system app-management application mpls_mgr stop
/system/app-management/application[name=mpls_mgr]:
    Application 'mpls_mgr' was killed with signal 15

Example

To terminate an application and generate a core dump:

--{ candidate }--[  ]--
# tools system app-management application mpls_mgr quit
/system/app-management/application[name=mpls_mgr]:
    Application 'mpls_mgr' was killed with signal 3

Example

To terminate an application immediately:

--{ candidate }--[  ]--
# tools system app-management application mpls_mgr kill
/system/app-management/application[name=mpls_mgr]:
    Application 'mpls_mgr' was killed with signal 9

16.4 Reloading application configuration

Reloading the application manager causes it to process any changes in the installed applications' YAML
configuration and restart the applications. Applications that are no longer present in the system are
stopped, and their YANG modules are removed from the management server. Applications removed from
the system have their nodes or augmentations removed from the system schema.

Example:

To reload the application configuration, reload the app_mgr application:

--{ * running }--[  ]--
# tools system app-management application app_mgr reload

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

206

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

16.5 Clearing application statistics

You can display statistics collected for an application with the info from state command. To reset
the statistics counters for the application, use the statistics clear option in the tools system app-
management command.

Example:

To reset the statistics counters for an application:

--{ running }--[  ]--
# tools system app-management application mpls_mgr statistics clear

16.6 Restricted operations for applications

An application may have one or more operations that are restricted by default. For example, the linux_mgr
application has stop, quit, and kill as restricted operations, meaning that these options are not available
when entering the tools system app-management command for the linux_mgr application.

Table 14: Restricted operations for SR Linux applications  lists the restricted operations for each SR Linux
application.

Table 14: Restricted operations for SR Linux applications

Application

Restricted operations

aaa_mgr

acl_mgr

app_mgr

arp_nd_mgr

bfd_mgr

bgp_mgr

chassis_mgr

device_mgr

reload

reload

start, stop, restart, quit, kill

reload

reload

reload

stop, quit, kill, reload

reload

dhcp_client_mgr

stop, reload

fib_mgr

gnmi_server

idb_server

reload

reload

start, stop, restart, quit, kill, reload

json_rpc_config

reload

linux_mgr

stop, quit, kill

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

207

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

Application

Restricted operations

lldp_mgr

log_mgr

mgmt_server

mpls_mgr

net_inst_mgr

oam_mgr

plcy_mgr

qos_mgr

sdk_mgr

static_route_mgr

supportd

xdp_cpm

xdp_lc

reload

reload

start, stop, quit, kill, reload

reload

start, stop, quit, kill, reload

reload

reload

reload

reload

reload

reload

stop, quit, kill, reload

reload

Restricted options are specified in the restricted-operations setting in the YAML file for the
application.

16.7 Configuring an application

About this task

To configure an SR Linux application, edit settings in the application YAML file, then reload the application
manager to activate the changes.

The example in this section shows how to configure an application to specify the action the SR Linux
device takes when the application fails. If an SR Linux application fails a specified number of times over a
specified time period, the SR Linux device can reboot the system or attempt to restart the application after
waiting a specified number of seconds.

For example, if the aaa_mgr application crashes 5 times within a 500-second window, the SR Linux device
can be configured to wait 100 seconds, then restart the aaa_mgr application.

The following actions can be taken if an SR Linux application fails:

• Reboot the system

• Wait a specified number of seconds, then attempt to restart the failed application

• Move the failed application to error state without rebooting the system or attempting to restart the

application

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

208

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

If you stop or restart an application using the tools system app-management command in the SR Linux
CLI, it is not considered an application failure; the failure action for the application, if one is configured,
does not occur. However, if the failed application waits a specified period of time (or forever) to be
restarted, or has been moved into error state, you can restart the application manually with the tools
system app-management application restart CLI command.

To configure the failure action for an application:

Procedure

Step 1. Check the status of the SR Linux applications:

Example

--{ running }--[  ]--
# show system application
+--------------+-----+--------------------+-----------------------+--------------------------+
|    Name      | PID |       State        |        Version        |       Last Change        |
+==============+=====+====================+=======================+==========================+
| aaa_mgr      | 242 | error              | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.967Z |
| acl_mgr      | 193 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.967Z |
| app_mgr      | 118 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:11.161Z |
| arp_nd_mgr   | 104 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.967Z |
| bfd_mgr      |     | waiting-for-config |                       |                          |
| bgp_mgr      | 109 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:13.156Z |
| chassis_mgr  | 115 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.967Z |
| dev_mgr      | 150 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.001Z |
| fib_mgr      | 168 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.968Z |
| gnmi_server  | 157 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:13.296Z |
| idb_server   | 171 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.228Z |
| igmp_mgr     |     | waiting-for-config |                       |                          |
| isis_mgr     |     | waiting-for-config |                       |                          |
| json_rpc     | 166 | running            |                       | 2022-01-21T20:15:13.234Z |
| label_mgr    | 139 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:13.186Z |
| lag_mgr      | 103 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.968Z |
| ldp_mgr      |     | waiting-for-config |                       |                          |
| linux_mgr    | 116 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.968Z |
| lldp_mgr     | 149 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:13.206Z |
| log_mgr      | 127 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.968Z |
| mgmt_server  | 149 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.968Z |
| mirror_mgr   |     | waiting-for-config |                       |                          |
| mpls_mgr     |     | waiting-for-config |                       |                          |
| net_inst_mgr | 160 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.968Z |
| oam_mgr      | 160 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:13.231Z |
| ospf_mgr     |     | waiting-for-config |                       |                          |
| p4rt_server  | 641 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T21:56:47.935Z |
| plcy_mgr     | 177 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:13.242Z |
| qos_mgr      | 186 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:13.322Z |
| sshd-mgmt    | 192 | running            |                       | 2022-01-21T20:15:19.710Z |
| xdp_cpm      | 197 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.968Z |
| xdp_lc_1     | 108 | running            |                       | 2022-01-21T20:15:10.968Z |
+--------------+-----+--------------------+-----------------------+--------------------------+

Step 2. Use the info from state command to check the current failure action settings for the application

to configure. These settings are highlighted in the following example:

Example

--{ running }--[  ]--
# info from state system app-management application aaa_mgr
    system {
        app-management {
            application aaa_mgr {

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

209

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

                pid 242
                state error
                last-change 2022-01-21T20:15:10.967Z
                author Nokia
                failure-threshold 3
                failure-window 300
                failure-action reboot
                path /opt/srlinux/bin
                launch-command ./sr_aaa_mgr
                search-command ./sr_aaa_mgr
                version v22.3.0-34-ge0ee326f8
                restricted-operations [
                    reload
                ]
                statistics {
                    restart-count 0
                }
                yang {
                    modules [
                        srl_nokia-aaa
                        srl_nokia-aaa-types
                    ]
                    source-directories [
                        /opt/srlinux/models/ietf
                        /opt/srlinux/models/srl_nokia/models/common
                        /opt/srlinux/models/srl_nokia/models/network-instance
                        /opt/srlinux/models/srl_nokia/models/system
                    ]
                }
            }
        }
    }

The following failure action settings can be configured for an application:

• failure-threshold: number of times that the application must fail during the failure-

window period before the failure-action is taken; the default is three times.

• failure-window: number of seconds over which the application must fail the failure-
threshold number of times before the failure-action is taken; the default is 300 seconds.

• failure-action: action to take if the application fails failure-threshold times over failure-

window seconds. This can be one of the following:

– reboot: reboot the system; this is the default failure-action.

– wait=seconds: wait this number of seconds, then attempt to restart the application.

– wait=forever: move the application to error state and do not reboot the system or

attempt to restart the application.

Step 3. Edit the YAML configuration for the application.

The YAML configuration files for SR Linux applications are located in the directory /opt/
srlinux/appmgr on the SR Linux device. They are named sr_application_name_
config.yml; for example, sr_aaa_mgr_config.yml.

Step 4.

In the .yml file, add or change the settings for the failure-threshold, failure-window,
and failure-action parameters.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

210

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

Example
In the following example, the failure action settings in the sr_aaa_mgr_config.yml file are
configured so that if the aaa_mgr application fails 5 times over a 500-second period, the SR
Linux device waits 100 seconds, then attempts to restart the aaa_mgr application:

aaa_mgr_setup:
   path: /opt/srlinux/bin
   launch-command: ./aaamgr_set_env.sh
   run-as-user: root
   never-show: Yes
   never-restart: Yes
   start-order: 1
aaa_mgr:
   path: /opt/srlinux/bin
   launch-command:  ./sr_aaa_mgr
   search-command: ./sr_aaa_mgr
   run-as-user: root
   restricted-operations: ['reload']
   failure-threshold: 5
   failure-window : 500
   failure-action: "wait=100"
   yang-modules:
       names:
           - "srl_nokia-aaa"
           - "srl_nokia-aaa-types"
       source-directories:
           - "/opt/srlinux/models/ietf"
           - "/opt/srlinux/models/srl_nokia/models/common"
           - "/opt/srlinux/models/srl_nokia/models/system"
           - "/opt/srlinux/models/srl_nokia/models/network-instance"

Step 5. Save and close the .yml configuration file.

Step 6.

In the SR Linux CLI, reload the application manager:

Example

--{ running }--[  ]--
# tools system app-management application app_mgr reload

This command reloads any application whose .yml configuration file has changed. It does not
affect any service.

Step 7. Use the info from state command to verify that the changes to the failure action settings are now

in effect.

Example

--{ running }--[  ]--
# info from state system app-management application aaa_mgr
    system {
        app-management {
            application aaa_mgr {
                pid 242
                state running
                last-change 2022-01-21T20:15:10.967Z
                author Nokia
                failure-threshold 5
                failure-window 500
                failure-action wait=100
                path /opt/srlinux/bin

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

211

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

                launch-command ./sr_aaa_mgr
                search-command ./sr_aaa_mgr
                version v22.3.0-34-ge0ee326f8
                restricted-operations [
                    reload
                ]
                statistics {
                    restart-count 0
                }
                yang {
                    modules [
                        srl_nokia-aaa
                        srl_nokia-aaa-types
                    ]
                    source-directories [
                        /opt/srlinux/models/ietf
                        /opt/srlinux/models/srl_nokia/models/common
                        /opt/srlinux/models/srl_nokia/models/network-instance
                        /opt/srlinux/models/srl_nokia/models/system
                    ]
                }
            }
        }
    }

16.8 Removing an application from the system

About this task

To remove an application from the system, remove the application files from the SR Linux directories where
they reside, then reload the application manager.

When an application is removed from the system, SR Linux stops sending updates for the paths that
the application would populate. If the application is subsequently reloaded, SR Linux resumes sending
updates.

For active CLI sessions, the schema is updated to remove the application. If an active CLI session exists in
a context that is no longer present because of the application being removed, the CLI context is changed to
the next-highest valid context.

User-defined applications can be removed from the system, but removing Nokia-provided SR Linux
applications is not supported.

In the following example, the fib_agent application, consisting of files named fib_agent.yml, fib_
agent.sh, fib_agent.py, and fib_agent.yang, is removed from the system.

Procedure

Step 1. Remove the application files from the SR Linux directories.

Example

--{ candidate }--[  ]--
# bash
# rm /etc/opt/srlinux/appmgr/fib_agent.yml
# rm /user_agents/fib_agent.sh
# rm /user_agents/fib_agent.py
# rm /yang/fib_agent.yang
# exit

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

212

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

Step 2. From the SR Linux CLI, reload the application manager.

Example

--{ candidate }--[ ]--
# tools system app-management application app_mgr reload

The application manager stops any application that is no longer present, and removes the
application's YANG module from the management server.

16.9 Partioning and isolating application resources

The SR Linux protects system processes through the use of control groups (cgroups), which impose
resource consumption limits on resource-intensive customer applications.

16.9.1 Cgroup profiles

Cgroup profiles define how usage limits are applied. On the SR Linux, cgroup profiles are supported for
CPU and memory and are defined in cgroup_profile.json configuration files.

SR Linux provides a default cgroup profile; customers can configure additional cgroup profiles.

16.9.1.1 Default cgroup profile

The SR Linux-provided default cgroup profile is located in the /opt/srlinux/appmgr/cgroup_
profile.json directory.

Note: Editing the default cgroup profile is not recommended.

If the default cgroup profile fails to parse or be read by the app_mgr, the SR Linux does not start.

The default cgroup_profile.json file definition is shown below:

{
 "profiles": [
  {
   "name": "workload.primary",
   "path": "workload.slice/primary",
   "controller": {
    "memory": {
     "max": 0.8,
     "swap_max": 0,
     "low": 0
    },
    "cpu": {
     "weight": "10000",
     "period": "100000",
     "quota": "0"
    },
    "cpuset": {
     "cpus": "",
     "mems": ""
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

213

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

   }
  },
  {
   "name": "workload.datapath",
   "path": "workload.slice/datapath",
   "controller": {
    "memory": {
     "max": 0.8,
     "swap_max": 0,
     "low": 0
    },
    "cpu": {
     "weight": "10000",
     "period": "100000",
     "quota": "0"
    },
    "cpuset": {
     "cpus": "all",
     "mems": ""
    }
   }
  },
  {
   "name": "workload.secondary",
   "path": "workload.slice/secondary",
   "controller": {
    "memory": {
     "max": 0.5,
     "swap_max": 0,
     "low": 0
    },
    "cpu": {
     "weight": "10000",
     "period": "100000",
     "quota": "0"
    },
    "cpuset": {
     "cpus": "",
     "mems": ""
    }
   }
  },
  {
   "name": "user.default",
   "path": "user.slice/default",
   "controller": {
    "memory": {
     "max": 0.25,
     "swap_max": 0,
     "low": 0
    },
    "cpu": {
     "weight": "1000",
     "period": "100000",
     "quota": "0"
    },
    "cpuset": {
     "cpus": "",
     "mems": ""
    }
   }
  }
 ]
}

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

214

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

Table 15: Default cgroup profile parameters describes the default cgroup profile parameters.

Table 15: Default cgroup profile parameters

Parameter

Description

name

The cgroup profile name.

Type: string

path

The cgroup directory path relative to a unified root path. A typical unified
root path is /sys/fs/cgroup or /mnt/cgroup/unified

Type: string

controller

The memory controller configuration.

max This number denotes the percentage of total memory. The actual
memory value is calculated as (max. × total_memory) and is set in the
memory.max interface file of the cgroup. If the value is 0, this configuration
is ignored. The range is from 0 to 1, the default is 0.8.

low This number denotes the percentage of total memory. The actual
memory value is calculated as (max. × total_memory) and is set in the
memory.low interface file of the cgroup. The range is from 0 to 1, the
default is 0.8.

cpu

The CPU controller configuration.

weight This value is set in the cpu.weight interface file of the cgroup. The
range is from 1 to 10 000, the default is 100.

period This value specifies a period of time, in microseconds, for how
regularly a cgroup's access to CPU resources should be reallocated.This
value is set in the cpu.max interface file of the cgroup. The range is from
1000 to 1 000 000, the default is 100 000.

quota This value specifies the total length of time, in microseconds,
for which all tasks in a cgroup can run during one period (as defined in
the period parameter). If quota is set to 0, it translates to ‟max” in the
cpu.max interface file. The range is from 1000 to 1 000 000, the default is
max.

cpuset

CPU usage information for the cgroup.

cpus This value indicates the CPUs used by the cgroup. This can be "",
meaning use all CPUs except for the isolated CPUs; this is the default.
The value all means include the isolated CPUs for cgroup usage. The
value x, y-z, where x, y, and z are CPU numbers, means use a specific
CPU or a range of CPUs.

mems This value is used for scheduling multiple NUMA (non-uniform
memory access) aware applications in the cgroup.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

215

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

16.9.1.2 Customer-defined cgroup profile

Customers can configure cgroup profiles in the /etc/opt/srlinux/appmgr/cgroup_profile.json
directory. The app_mgr creates this directory at boot up if it does not exist.

If a customer-defined cgroup profile fails to load, the system continues to function and applications that are
loaded into the customer cgroup are loaded using Nokia defaults, listed below.

• Nokia-written applications run in the workload.slice/primary cgroup along with any processes that are

started by linuxadmin, including sr_cli.

• Non-Nokia-written applications run in the workload.slice/secondary cgroup. If a customer builds an

application and launches it using the app_mgr without specifying a cgroup, the application runs in this
cgroup

• All interactive user applications run in the user.slice/default cgroup, including sr_cli when not started by

linuxadmin.

The admin user is treated as any other user in the system. Its processes fall into the user.slice/default
cgroup.

16.9.2 Configuring a cgroup

Customers can configure up to three cgroups in the /etc/opt/srlinux/appmgr/cgroup_
profile.json directory. Customer applications are assigned to these groups. Any more than three
configured cgroups are ignored. The depth of cgroups is limited to two levels where, for example, workload
is one level, and primary/secondary are two levels. Any levels beyond this are also ignored.

If a cgroup with the same name is used in multiple customer-defined profiles, the system ignores it and
uses the cgroup defined in the default profile.

16.9.2.1 Cgroup configuration example

About this task

The following example shows the configuration of two customer-defined cgroups: one for a lightweight
database that needs priority access to resources, and one for storing the users of the database.

The steps and the outputs are described below.

The configuration above created two cgroup profiles: one for the database slice and one for the frontend
slice. The profile for the database slice is configured to limit the database to 50% of system memory. The
profile for the frontend slice is configured to limit the web front end to 20% of system memory.

In addition, both cgroup profiles are configured to limit CPU resources for their respective cgroup. The
database server CPU is weighted at 10000 (the maximum CPU weight) and the frontend server CPU is
weighted at 5000 (half the CPU weight of the database). The weights are added together and each group
is allocated its ratio of CPU as a proportion of the sum. The periods are kept the same, and no guaranteed
CPU is granted.

Procedure

Step 1.

Install the application, including the YAML binary file and optional YANG module.

In this example, YAML defines two applications: dtw-database and dtw-frontend. These
applications are placed into their own cgroups: distributetheweb.slice/database and
distributetheweb.slice/frontend.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

216

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

The app-mgr creates the cgroups.

The output below shows the installation of the database and a web front end.

dtw-database:
   path: /opt/distributetheweb/bin/
   launch-command: ./run_db
   search-command: ./run_db
   failure-threshold: 100
   failure-action: "wait=60"
   cgroup: distributetheweb.slice/database
   oom-score-adj: -500
   yang-modules:
       names:
           - "database"
       source-directories:
           - "/opt/distributetheweb/yang/"

dtw-frontend:
   path: /opt/distributetheweb/bin/
   launch-command: ./run_frontend
   search-command: ./run_frontend
   failure-threshold: 100
   failure-action: "wait=60"
   cgroup: distributetheweb.slice/frontend
   oom-score-adj: 200
   yang-modules:
       names:
           - "frontend"
       source-directories:
           - "/opt/distributetheweb/yang/"

Step 2. Configure the cgroup profiles in the /etc/opt/srlinux/appmgr/cgroup_profile.json

directory.

The output below shows the configuration.

{
 "profiles": [
  {
   "name": "distributetheweb.database",
   "path": "distributetheweb.slice/database",
   "controller": {
    "memory": {
     "max": 0.5,
     "swap_max": 0,
     "low": 0
    },
    "cpu": {
     "weight": "10000",
     "period": "100000",
     "quota": "0"
    }
   }
  },
  {
   "name": "distributetheweb.frontend",
   "path": "distributetheweb.slice/frontend",
   "controller": {
    "memory": {
     "max": 0.2,
     "swap_max": 0,

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

217

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

     "low": 0
    },
    "cpu": {
     "weight": "5000",
     "period": "100000",
     "quota": "0"
    }
   }
  }
 ]
}

16.9.3 Kernel low-memory killer

The kernel low-memory killer driver monitors the memory state of a running system. It reacts to high
memory pressure by killing the least essential processes to keep the system performing at acceptable
levels.

When the system is low in memory and cannot find free memory space, the out_of_memory function is
called. The out_of_memory function makes memory available by killing one or more processes.

When an out-of-memory (OOM) failure occurs, the out_of_memory function is called and it obtains a score
from the select_bad_process function. The process with the highest score is the one that is killed. Some of
the criteria used to identify a bad process include the following:

• The kernel needs a minimum amount of memory for itself.

• Try to reclaim a large amount of memory.

• Do not kill a process that is using a small amount of memory.

• Try to kill the minimum number of processes.

• Algorithms that elevate the sacrifice priority on processes the user wants to kill.

In addition to this list, the OOM killer checks the out-of-memory (OOM) score. The OOM killer sets the
OOM score for each process and then multiplies that value by memory usage. The processes with higher
values have a high probability of being terminated by the OOM killer.

16.9.3.1 SR Linux process kill strategy

The kernel calculates the oom_score using the formula 10 × percentage of memory used by the process.
The maximum score is 10 × 100% = 1000. The oom_score of a process can be found in the /proc
directory (/proc/$pid/oom_score). An oom_score of 1000 means the process is using all the memory,
an oom_score of 500 means it is using half the memory, and an oom_score of 0 means it is using no
memory.

The OOM killer checks the oom_score_adj file in the /proc/$pid/oom_score_adj directory to adjust
its final calculated score. The default value is 0.

The oom_score_adj value can range from -1000 to 1000. A score of -1000 results in a process using
100% of the memory and in not being terminated by the OOM killer. However, a score of 1000 causes
the Linux kernel to terminate the process even when it uses minimal memory. A score of -100 results in a
process using 10% of the memory before it is considered for termination, as its score remains 0 until its
unadjusted score reaches 100.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

218

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

The oom_score_adj value for each process is defined in its corresponding YAML definition file. The
system groups the processes based on their score, which the SR Linux OOM killer uses as the hierarchy
for terminating a rogue process, as follows:

• group1 = -998, for processes that should never be killed, such as app_mgr, idb_server, and all

processes on the IMM.

• group2 = -200, for processes that ideally should not be killed because doing so has a substantial impact

on the system, such as mgmt_server, chassis_mgr, and net_inst_mgr. A score of -200 means the
process gets to use 20% of the memory before their memory use starts being counted.

• group3 = 0, for process that should be killed if they are using too much memory such as BGP, ISIS, and

OSPF.

• group4 = 500, for processes that should be preferentially killed, such as cli and oam_mgr

Table 16: OOM adjust score per process lists the OOM adjust score for each process.

Table 16: OOM adjust score per process

Process name

OOM adjust score

aaa_mgr

acl_mgr

app_mgr

sarp_nd_mgr

bfd_mgr

bgp_mgr

chassis_mgr

dev_mgr

dhcp_client_mgr

dhcp_relay_mgr

eth_switch_mgr

evpn_mgr

fib_mgr

gnmi_server

idb_server

isis_mgr

json_rpc

l2_mac_learn_mgr

0

0

-998

-200

-200

0

-200

-200

0

0

-200

0

0

500

-998

0

500

0

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

219

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

Process name

OOM adjust score

l2_mac_mgr

l2_static_mac_mgr

lag_mgr

linux_mgr

lldp_mgr

log_mgr

mcid_mgr

mgmt_server

mpls_mgr

net_inst_mgr

oam_mgr

ospf_mgr

plcy_mgr

qos_mgr

sdk_mgr

sflow_sample_mgr

sshd-mgmt

static_route_mgr

supportd

timesrv

vrrp_mgr

vxlan_mgr

xdp_cpm

0

0

0

0

0

0

0

-200

0

-200

500

0

0

0

500

500

0

0

0

0

0

0

-200

16.9.4 Application manager extensions for cgroups

The cgroup feature provides two additional parameters in the app_mgr YAML file, the cgroup parameter
and the oom-score-adj parameter.

The app_mgr uses the cgroup parameter to launch an application within a specific cgroup. A valid
value for the cgroup parameter is the path of a cgroup as specified in the cgroup profile (equivalent to /

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

220

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

profiles/name[]/path), from the cgroupv2 root. If this cgroup does not exist, the app_mgr launches
the user application from the default cgroup profile path workload.slice/secondary.

The app_mgr uses the oom-score-adj parameter to set the out-of-memory adjust score for a process. This
score is fed into the SR Linux OOM killer. Valid oom-score-adj scores are any value in the range of -1000
to 1000. A process with a score of -1000 is least likely to be killed while a process with a score of 1000 is
most likely to be killed. At -1000, a process can use 100% of memory and still avoid being terminated by
the OOM killer; however, SR Linux kills the process more frequently.

The cgroup parameter and the oom-score-adj parameter are shown in the output below.

bgp_mgr:
   path: @SRLINUX_BINARY_INSTALL_PREFIX@
   launch-command: @YAML_LAUNCH_ENVIRONMENT@ ./sr_bgp_mgr
   search-command: ./sr_bgp_mgr
   oom-score-adj: 0
   wait-for-config: Yes
   author: 'Nokia'
   restricted-operations: ['reload']
   cgroup: workload.slice/primary
   yang-modules:
       names:
           - "srl_nokia-bgp"
           - "srl_nokia-bgp-vpn"
           - "srl_nokia-rib-bgp"
           - "srl_nokia-system-network-instance-bgp-vpn"
       tools:
           - "srl_nokia-tools-bgp"
       source-directories:
           - "@SRLINUX_FILE_INSTALL_PREFIX@/models/ietf"
           - "@SRLINUX_FILE_INSTALL_PREFIX@/models/srl_nokia/models/common"
           - "@SRLINUX_FILE_INSTALL_PREFIX@/models/srl_nokia/models/interfaces"
           - "@SRLINUX_FILE_INSTALL_PREFIX@/models/srl_nokia/models/network-
instance"
           - "@SRLINUX_FILE_INSTALL_PREFIX@/models/srl_nokia/models/routing-policy"
           - "@SRLINUX_FILE_INSTALL_PREFIX@/models/srl_nokia/models/system"

16.9.5 Debugging cgroups

Cgroup debugging capability is available through:

• SR Linux CLI commands

• Linux-provided CLI commands

16.9.5.1 SR Linux cgroup debugging commands

The SR Linux provides CLI commands to perform the following:

•

•

•

•

check the usage of existing cgroups

show information about the OOM adjust score of applications managed by the app_mgr

show information about the cgroups that are associated with the applications that are managed by the
app_mgr

list all of the applications associated with a specified cgroup

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

221

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

16.9.5.1.1 Checking existing cgroup usage

The output below is an example of checking existing cgroup usage.

--{ running }--[  ]--  
# info from state platform control A cgroup *
    platform {                    
        control A {                
            cgroup /mnt/cgroup/unified/user.slice/default {
                memory-statistics {
                    current 0 
                    current-swap 0    
                    anon 0        
                    kernel-stack 0  
                    slab 0      
                    sock 0
                    anon-thp 0      
                    file 0          
                    file-writeback 0  
                    file-dirty 0
                }
                cpuacct-statistics {
                    user 0
                    system 0
                }
            }
            cgroup /mnt/cgroup/unified/workload.slice/primary {
                memory-statistics {
                    current 1621110784
                    current-swap 0
                    anon 1327427584
                    kernel-stack 2396160
                    slab 12939264
                    sock 151552
                    anon-thp 855638016
                    file 250916864
                    file-writeback 0
                    file-dirty 0
                }
                cpuacct-statistics {
                    user 22082989551
                    system 11252275018
                }
            }
            cgroup /mnt/cgroup/unified/workload.slice/secondary {
                memory-statistics {
                    current 7827456
                    current-swap 0
                    anon 4501504
                    kernel-stack 73728
                    slab 2453504
                    sock 8192
                    anon-thp 0
                    file 0
                    file-writeback 0
                    file-dirty 0
                }
                cpuacct-statistics {
                    user 34323091
                    system 12342430
                }
            }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

222

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

        }
    }

16.9.5.1.2 Showing current OOM adjust scores

The output below is an example of showing information about the current OOM adjust scores for all
applications that are managed by the app_mgr.

--{ running }--[  ]-- 
# info from state system app-management application * oom-score-adj
    system {                     
        app-management {          
            application aaa_mgr {
                oom-score-adj 0          
            }                  
            application acl_mgr {
                oom-score-adj 0         
            }                  
            application app_mgr {
                oom-score-adj -998    
            }                  
            application arp_nd_mgr {
                oom-score-adj -200
            }                  
|
|
|
            application vxlan_mgr {
                oom-score-adj 0
            }
            application xdp_lc_1 {
                oom-score-adj -200
            }
        }
    }

16.9.5.1.3 Showing cgroup information

The output below is an example of showing information about cgroups that are associated with applications
managed by the app_mgr.

--{ running }--[  ]--  
# info from state system app-management application * cgroup
    system {
        app-management {         
            application aaa_mgr {
                cgroup /mnt/cgroup/unified/workload.slice/primary  
            }
            application acl_mgr {
                cgroup /mnt/cgroup/unified/workload.slice/primary
            }
            application arp_nd_mgr {
                cgroup /mnt/cgroup/unified/workload.slice/primary
            }
            application bgp_mgr {
                cgroup /mnt/cgroup/unified/workload.slice/primary
            }     
|

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

223

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

|
|
            application sshd-mgmt {
                cgroup /mnt/cgroup/unified/workload.slice/secondary  
            }
            application supportd {
                cgroup /mnt/cgroup/unified/workload.slice/primary
            }
            application vxlan_mgr {
                cgroup /mnt/cgroup/unified/workload.slice/primary
            }
            application xdp_lc_1 {
                cgroup /mnt/cgroup/unified/workload.slice/primary
            }
        }
    }

16.9.5.1.4 Listing all the applications associated with a specified cgroup

Use the tools system cgroup command pgrep cgroup cgroupname command to list all the applications
associated with a specified group; the output below shows an example.

--{ running }--[  ]--
# tools system cgroup command pgrep cgroup workload.slice/primary
+-------+----------------------+
|  Pid  |       Process        |
+=======+======================+
| 3373  | sr_app_mgr           |
| 3385  | sr_supportd          |
| 3402  | sr_device_mgr        |
| 3460  | sr_idb_server        |
| 3471  | sr_aaa_mgr           |
| 3482  | sr_acl_mgr           |
| 3518  | sr_arp_nd_mgr        |
| 3542  | sr_chassis_mgr       |
| 3560  | sr_dhcp_client_mgr   |
| 3574  | sr_evpn_mgr          |
| 3586  | sr_fib_mgr           |
| 3598  | sr_l2_mac_learn_mgr  |
| 3611  | sr_l2_mac_mgr        |
| 3621  | sr_lag_mgr           |
| 3631  | sr_linux_mgr         |
| 3641  | sr_log_mgr           |
| 3651  | sr_mcid_mgr          |
| 3681  | sr_mgmt_server       |
| 3702  | sr_net_inst_mgr      |
| 3724  | sr_oam_mgr           |
| 3743  | sr_sdk_mgr           |
| 3753  | sr_sflow_sample_mgr  |
| 3772  | sr_xdp_lc_1          |
| 3874  | sudo                 |
| 3895  | sudo                 |
| 3902  | sudo                 |
| 3921  | sudo                 |
| 3930  | sr_qos_mgr           |
| 3953  | sr_gnmi_server       |
| 3979  | sr_json_rpc          |
| 3990  | sr_vxlan_mgr         |
| 16740 | sr_json_wkr          |
| 16742 | python3              |
| 17013 | python3              |

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

224

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

| 18474 | sr_json_wkr          |
| 18478 | python3              |
| 18671 | python3              |
| 20671 | sr_lldp_mgr          |
| 21177 | sr_bgp_mgr           |
| 21190 | sr_plcy_mgr          |
| 12753 | sr_l2_static_mac_mgr |
| 27353 | rsyslogd             |
| 9777  | python               |
+-------+----------------------+

16.9.5.2 Linux-provided cgroup debugging commands

The following Linux-provided CLI commands are available for debugging cgroups:

•

•

the systemd-cgls command

the systemd-cgtop command

The systemd-cgls command dumps the cgroup hierarchy. The output below shows an example of the
systemd-cgls command.

[linuxadmin@srlinux unified]$ systemd-cgls
+-1 /usr/lib/systemd/systemd --switched-root --system --deserialize 22
+-system.slice
  +-rngd.service
  | +-2725 /sbin/rngd -f
  +-systemd-udevd.service
  | +-868 /usr/lib/systemd/systemd-udevd
  +-system-serial\x2dgetty.slice
  | +-serial-getty@ttyS0.service
  |   +-1120 login -- linuxadmin
  |   +-8320 -bash
  |   +-9262 sendacct "systemd-cgls"
  |   +-9263 systemd-cgls
  |   +-9264 less
  +-srlinux.service
  | +- 3092 /usr/bin/sudo /opt/srlinux/bin/sr_linux
  | +- 3120 runuser --user srlinux --group srlinux -- /opt/srlinux/bin/sr_linux
  | +- 4019 /bin/bash /opt/srlinux/bin/sr_linux --user-env-switched
  | +- 4039 ./sr_app_mgr
  | +- 4051 ./sr_supportd --server-mode
  | +- 4068 ./sr_device_mgr
  | +- 4219 ./sr_idb_server
  | +- 4229 ./sr_eth_switch
  | +- 4288 ./sr_aaa_mgr
  | +- 4299 ./sr_acl_mgr
  | +- 4314 ./sr_arp_nd_mgr
  | +- 4324 ./sr_chassis_mgr
  | +- 4337 ./sr_dhcp_client_mgr
  | +- 4365 ./sr_evpn_mgr
  | +- 4381 ./sr_fib_mgr
  | +- 4395 ./sr_l2_mac_learn_mgr
  | +- 4411 ./sr_l2_mac_mgr
  | +- 4423 ./sr_lag_mgr
  | +- 4445 ./sr_linux_mgr
  | +- 4494 ./sr_log_mgr
  | +- 4510 ./ntpd -c /etc/ntps.conf -g
  | +- 4526 ./sr_mcid_mgr
  | +- 4574 ./sr_mgmt_server
  | +- 4608 ./sr_net_inst_mgr
  | +- 4626 ./sr_oam_mgr

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

225

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

SR Linux applications

  | +- 4640 ./sr_sdk_mgr
  | +- 4658 ./sr_sflow_sample_mgr
  | +- 4681 ./sr_xdp_cpm
  | +- 5197 /usr/bin/sudo -Enu root /usr/bin/sudo -Enu gnmirpc bash -c ./sr_gnmi
  | +- 5224 /usr/bin/sudo -Enu root /usr/bin/sudo -Enu jsonrpc bash -c ./sr_json
  | +- 5243 /usr/bin/sudo -Enu gnmirpc bash -c ./sr_gnmi_server
  | +- 5248 ./sr_qos_mgr
  | +- 5261 /usr/bin/sudo -Enu jsonrpc bash -c ./sr_json_rpc
  | +- 5290 ./sr_gnmi_server
  | +- 5302 ./sr_json_rpc
  | +- 5693 /usr/sbin/sshd -f /etc/ssh/sshd_config_mgmt
  | +- 6361 /usr/sbin/rsyslogd -i /var/run/srlinux/rsyslogd.pid
  | +-21936 ./sr_bfd_mgr
  | +-22018 ./sr_bgp_mgr
  | +-22132 ./sr_isis_mgr
  | +-22242 ./sr_lldp_mgr
  | +-22321 ./sr_mpls_mgr
  | +-22437 ./sr_ospf_mgr
  | +-22588 ./sr_plcy_mgr
  | +-22701 ./sr_static_route_mgr
  | +-22796 sr_json_wkr
  | +-22797 python3 -m srlinux.mgmt.json_rpc.json_rpc_server_main --bind=[::]:40
  | +-22953 ./ntpd -c /etc/mntp.conf -g
  | +-23023 python3 -m srlinux.mgmt.json_rpc.json_rpc_server_main --bind=[::]:40
  | +-23736 sr_json_wkr
  | +-23741 python3 -m srlinux.mgmt.json_rpc.json_rpc_server_main --bind=[::]:40
  | +-24009 python3 -m srlinux.mgmt.json_rpc.json_rpc_server_main --bind=[::]:40
  | +-27488 ./dnsmasq --conf-file=/etc/dnsmasq.conf
  +-polkit.service
  | +-2701 /usr/lib/polkit-1/polkitd --no-debug
  +-ztpapi.service
  | +-1114 /opt/srlinux/ztp/virtual-env/bin/python -m ztp.ztphttp
  +-systemd-journald.service
  | +-840 /usr/lib/systemd/systemd-journald
  +-sshd.service
  | +-985 /usr/sbin/sshd -D
  +-crond.service
  | +-1133 /usr/sbin/crond -n
  +-sr_watchdog.service
  | +-1155 sr_wd
  +-dbus.service
  | +-991 /usr/bin/dbus-daemon --system --address=systemd: --nofork --nopidfile
  +-systemd-logind.service
    +-1062 /usr/lib/systemd/systemd-logind

The systemd-cgtop command dumps the current usage of each cgroup. The output below shows an
example of the systemd-cgtop command.

Path                                     Tasks   %CPU   Memory  Input/s Output/s

/                                          186      -        -        -        -
/system.slice/crond.service                  1      -        -        -        -
/system.slice/dbus.service                   1      -        -        -        -
/system.slice/polkit.service                 1      -        -        -        -
/system.slice/rngd.service                   1      -        -        -        -
/system.slice/sr_watchdog.service            1      -        -        -        -
/system.slice/srlinux.service               53      -        -        -        -
/system.slice/sshd.service                   1      -        -        -        -
/system.slic...ial-getty@ttyS0.service       3      -        -        -        -
/system.slice/systemd-journald.service       1      -        -        -        -
/system.slice/systemd-logind.service         1      -        -        -        -
/system.slice/systemd-udevd.service          1      -        -        -        -
/system.slice/ztpapi.service                 1      -        -        -        -

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

226

SPACER TEXT

 
CONFIGURATION BASICS RELEASE 22.6

Mirroring

17 Mirroring

Mirroring copies IPv4 and IPv6 packets seen on a specified source, such as an interface (port) or
subinterface (VLAN), or matching an ACL entry, and sends the packets to a specific destination, such as a
locally attached traffic analyzer or a tunnel toward a remote destination.

By default, the mirrored packets include IPv4/IPv6 headers, as well as Ethernet headers. Traffic from
multiple sources can be mirrored to a single destination, although traffic from a specific source cannot be
mirrored to multiple destinations.

17.1 Mirror sources

The source for mirrored traffic can be an interface or subinterface or an ACL filter.

•

Interfaces / subinterfaces

A mirror source can be an interface, including all subinterfaces within that interface. The source can
be a single interface (for example, interface ethernet-1/1) or a LAG (for example, interface
lag1). Either a LAG member or LAG port can be mirrored. When a LAG port is configured as a mirror
source, mirroring is enabled on all ports making up the LAG.

The source can be a specific VLAN; that is, a subinterface within an interface where VLAN tagging is
enabled (for example, interface ethernet-1/1.1 or lag1.1).

You can configure mirroring for traffic in a specific direction (ingress only, egress only) or bidirectional
traffic (both ingress and egress).

• ACL filters

A mirror source can be an IPv4 or IPv6 ACL filter, applied under one or more subinterfaces. Traffic
matching entries in the filter (regardless of whether the action is accept or drop), can be mirrored to the
destination.

On 7220 IXR-D2/D2L/D3/D3L systems, mirroring from ACL filters is supported in the ingress direction
only.

17.2 Mirror destinations

Traffic from the mirror source can be copied to a local destination (local mirroring) or encapsulated into a
tunnel to a remote destination (remote mirroring).

Local mirroring

In a local mirroring configuration, both the mirror source and mirror destination reside on the same SR
Linux node, as shown in Figure 7: Local mirroring.

In this configuration, the local destination is a Switched Port Analyzer (SPAN).

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

227

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Mirroring

Figure 7: Local mirroring

Remote mirroring

In a remote mirroring configuration, the mirror source and mirror destination are on different nodes. The
mirror source resides on the SR Linux node, and the mirrored packets are encapsulated into a tunnel
toward the mirror destination.

Figure 8: Remote mirroring shows a remote mirroring configuration. In this configuration, the remote
destination is an Encapsulated Remote Switched Port Analyzer (ERSPAN).

Tunnel end points are defined within a specific network-instance, where the local tunnel endpoint IP
address can be either a loopback subinterface address or any subinterface address within that network-
instance.

Figure 8: Remote mirroring

Mirroring to underlay (ERSPAN+GRE)

In a mirroring to underlay (ERSPAN+GRE) configuration, the mirrored packets, including IPv4/IPv6 header
as well as Ethernet header, are tunneled using Transparent Ethernet Bridging (GRE protocol type 0x6558)
or L2oGRE toward the remote destination.

Figure 9: Mirroring to underlay shows a mirroring to underlay configuration.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

228

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Mirroring

Figure 9: Mirroring to underlay

17.3 Configuring mirroring

To configure mirroring, you configure a mirroring-instance, which specifies the source and destination for
the mirrored traffic. Multiple mirror sources can have a single destination, although traffic from a specific
source cannot be mirrored to multiple destinations. Only one mirror destination can be configured per
mirroring-instance. A mirror destination cannot be reused in multiple mirroring instances.

Within a mirroring-instance, if an interface is configured as mirror source, a subinterface within that
interface cannot be added as another mirror source. If a LAG is defined as mirror destination, only the first
8 members of the LAG carry mirrored traffic.

Mirrored traffic is considered Best Effort (BE) Forwarding Class.

17.3.1 Configuring mirroring sources

To configure mirroring, you specify the source and destination for mirrored traffic within a mirroring-
instance. The source in a mirroring-instance can be traffic on a specified interface, subinterface, or LAG, or
can be packets matching an ACL entry.

Example: interface source

The following example shows a mirroring-instance configuration with an interface as the source for
mirrored traffic:

--{ * candidate shared default }--[  ]--
# info system mirroring
    system {
        mirroring {
            mirroring-instance 1 {
                admin-state enable
                mirror-source {
                    interface ethernet-1/5 {
                        direction ingress-egress

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

229

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Mirroring

                    }
                }
            }
        }
    }

Example: ACL source

The following example configures an ACL with an entry that matches TCP packets and applies the ACL to
a subinterface. A mirroring-instance is configured that uses packets matching the ACL as the source for
mirrored traffic.

--{ +* candidate shared default }--[  ]--
# info acl ipv4-filter ip_tcp
    acl {
        ipv4-filter ip_tcp {
            entry 1000 {
                description Match_TCP_Protocol
                action {
                    accept {
                    }
                }
                match {
                    protocol tcp
                }
            }
        }
    }

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/1 subinterface 1 acl
    interface ethernet-1/1 {
        subinterface 1 {
            acl {
                input {
                    ipv4-filter ip_tcp
                }
            }
        }
    }

--{ * candidate shared default }--[  ]--
# info system mirroring
    system {
        mirroring {
            mirroring-instance 1 {
                admin-state enable
                mirror-source {
                    acl ip_tcp {
                        entry 1000
                    }
                }
            }
        }
    }

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

230

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Mirroring

17.3.2 Configuring mirroring destinations

In a mirroring-instance, you specify the destination for the mirrored traffic. The mirroring destination can be
a local destination residing on the same SR Linux node as the mirroring source, or a remote destination
where the mirrored traffic is sent via a tunnel. The tunneled traffic can be encapsulated using Transparent
Ethernet Bridging (GRE protocol type 0x6558) or L2oGRE.

Example: Local destination

The following enables a subinterface to be a local mirror destination:

--{ * candidate shared default }--[  ]--
# info from running interface ethernet-1/4 subinterface 1
    interface ethernet-1/4 {
        subinterface 1 {
            type local-mirror-dest
            admin-state enable
            vlan {
                encap {
                    single-tagged {
                        vlan-id 1127
                    }
                }
            }
            local-mirror-destination {
                admin-state enable
            }
        }
    }

The following configures a mirroring-instance where traffic from the mirror source is mirrored to the
subinterface enabled as a local mirror destination:

--{ * candidate shared default }--[  ]--
# info system mirroring
    system {
        mirroring {
            mirroring-instance 1 {
                admin-state enable
                mirror-source {
                    interface ethernet-2/1 {
                        direction ingress-egress
                    }
                }
                mirror-destination {
                    local ethernet-1/4.1
                }
            }
        }
    }

Example: Remote destination using underlay

The following example configures a mirroring-instance that specifies the mirrored traffic be encapsulated
into a tunnel within a network-instance. The mirrored traffic is encapsulated into a tunnel using L2oGRE to
the remote destination.

--{ * candidate shared default }--[  ]--
# info system mirroring
    system {

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

231

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Mirroring

        mirroring {
            mirroring-instance 1 {
                admin-state enable
                mirror-source {
                    interface ethernet-2/1 {
                        direction ingress-egress
                    }
                }
                mirror-destination {
                    remote {
                        encap l2ogre
                        network-instance IPVRF-1 {
                            tunnel-end-points {
                                src-ipv4 192.168.1.53
                                dst-ipv4 192.168.1.153
                            }
                        }
                    }
                }
            }
        }
    }

17.4 Displaying mirroring information

Use the info from state command to display mirroring configuration information.

Example:

--{ * candidate shared default }--[  ]--
# info from state system mirroring mirroring-instance 2
    system {
        mirroring {
            mirroring-instance 2 {
                admin-state enable
                oper-state down
                oper-down-reason local-mirror-subif-down
                mirror-source {
                    interface lag1 {
                        direction ingress-egress
                    }
                }
                mirror-destination {
                    local lag25.1
                }
            }
        }
    }

17.5 Displaying mirroring statistics

You can use the info from state command to display the outgoing mirrored packets/octets per interface.

Example:

--{ * candidate shared default }--[  ]--

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

232

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Mirroring

# info from state interface ethernet-1/1 statistics | grep mirror
            out-mirror-octets 0
            out-mirror-packets 0

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

233

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

UFT profiles

18 UFT profiles

The processors in 7220 IXR-D1, 7220 IXR-D2/D3, and 7220-IXR H2/H3 systems use shared memory
tables known as Unified Forwarding Tables (UFTs). With UFTs, the processor has a set of shared banks
that can be partitioned to support the following types of forwarding table entries:

• Learned MAC addresses

•

•

IP host entries

IP longest-prefix-match routes

The default settings for the shared bank allocations can be changed by modifying the UFT profile for the
system.

18.1 Shared bank partitioning for SR Linux systems

The number of shared banks, the size of each shared bank, and the way they can be divided depend on
the SR Linux system, as described in Table 17: Shared bank configuration for SR Linux systems.

Table 17: Shared bank configuration for SR Linux systems

SR Linux system Shared bank configuration

7220 IXR-D1

6 shared banks

16K single-wide/SW or 8K double-wide/DW entries per shared bank

• 1 SW entry can store 1 IPv4 host entry or 1 MAC address.

• 1 DW entry can store 1 IPv6 host entry.

•

If a bank has any DW entry, it is forced into DW mode.

If ALPM is enabled, it requires 4 shared banks; each of the
remaining banks can be allocated to either IP host entries or MAC
addresses.

7220 IXR-D2/D3

8 shared banks

32K single-wide of 16K double-wide entries per shared bank

• 1 SW entry can store 1 IPv4 host entry or 1 MAC address.

• 1 DW entry can store 1 IPv6 host entry.

•

If a bank has any DW entry, it is forced into DW mode.

ALPM can be enabled in 8-bank (high-scale) mode; each of the
remaining banks, if there are any, can be allocated to either IP host
entries or MAC addresses.

7220 IXR-H2/H3

8 shared banks

8K entries per shared bank

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

234

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

UFT profiles

SR Linux system Shared bank configuration

ALPM is enabled by default. ALPM uses all of the shared banks.

18.2 LPM table partitioning

IP FIB scale depends significantly on the number of UFT banks used for ALPM, but also depends on the
partitioning of the hardware LPM table, which is an always-present TCAM + SRAM table that stores IP
LPM route entries.

When ALPM is not active, IP FIB scale is entirely determined by the size and partitioning of this table.
When ALPM is active, the hardware LPM table is used as a first-search table into the ALPM banks, so it
also plays an important role.

If the ipv6-128bit-lpm-entries parameter is configured to be greater than zero, the hardware LPM table is
partitioned into two sub-blocks: a single-wide sub-block and a double-wide sub-block:

• The single-wide sub-block can store IPv4 routes (each consuming half of a single-wide entry) and IPv6

routes up to /64 prefix length (each consuming a single-wide entry).

• The size of the double-wide sub-block is controlled by the ipv6-128bit-lpm-entries parameter, and this

sub-block can store IPv6 routes up to /128 prefix length (each consuming a double-wide entry).

It can also store IPv4 routes and IPv6 routes up to /64 prefix length; inside the double-wide sub-block,
IPv4 routes consume half of a single-wide entry, and IPv6 routes up to /64 prefix length require a
double-wide entry.

18.3 Default UFT allocations for SR Linux systems

The default UFT shared bank allocations and hardware LPM table parameters for each SR Linux system
are summarized in Table 18: Default UFT allocations and hardware LPM table parameters.

Table 18: Default UFT allocations and hardware LPM table parameters

SR Linux system Default UFT allocations and L3DEFIP table parameters

7220 IXR-D1

Extra IP host shared banks: 3

Extra MAC address shared banks: 3

ALPM: disabled

ipv6-128bit-lpm-entries: 1024

7220 IXR-D2/D3

Extra IP host shared banks: 4

Extra MAC address shared banks: 4

ALPM: disabled

ipv6-128bit-lpm-entries: 2048

7220 IXR-H2/H3

ALPM: enabled

ipv6-128bit-lpm-entries: 512

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

235

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

UFT profiles

18.4 Configuring a UFT profile

You can change the settings for the UFT shared bank allocations and hardware LPM table parameters
from the defaults listed in Table 18: Default UFT allocations and hardware LPM table parameters by
modifying the system UFT profile.

To change the settings for the UFT shared bank allocations and hardware LPM table parameters from the
defaults, modify the system UFT profile as shown in the following example.

Example:

This example configures a UFT profile for a 7220 IXR-D1 system. The UFT profile enables ALPM and
configures 32K extra IP host entries from the UFT shared banks.

--{ * candidate shared default }--[  ]--
# info platform resource-management unified-forwarding-resources
    platform {
        resource-management {
            unified-forwarding-resources {
                alpm enabled
                requested-extra-ip-host-entries 32768
                ipv6-128bit-lpm-entries 1024
            }
        }
    }

Note:
UFT profile configuration changes do not take effect immediately when the changes are
committed; they take effect the next time XDP is restarted.

18.5 Displaying UFT profile information

Use the info from state command to display the UFT profile, including the extra number of host entries
and MAC address entries allocated from UFT shared banks.

Example:

--{ * candidate shared default }--[  ]--
# info from state platform resource-management unified-forwarding-resources
    platform {
        resource-management {
            unified-forwarding-resources {
                xdp-restart-required true
                alpm enabled
                requested-extra-ip-host-entries 32768
                allocated-extra-ip-host-entries 32768
                allocated-extra-mac-entries 0
                ipv6-128bit-lpm-entries 1024
            }
        }
    }

In the example, the xdp-restart-required leaf is shown as true if a change has been committed to
one or more of the configurable values in the unified-forwarding-resources container, but XDP

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

236

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

UFT profiles

has not yet been restarted. Until XDP is restarted, the operational values are still the values initialized at
the last XDP restart.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

237

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Maintenance Mode

19 Maintenance Mode

SR Linux maintenance mode allows you to take a network element out of service so that maintenance
actions can be performed; for example, to upgrade the software image on a router.

Using SR Linux maintenance mode, you can do this with minimal impact on traffic. SR Linux maintenance
mode works as follows:

1. A maintenance group is configured that specifies the resources to be taken out of service. See

Configuring a maintenance group.

2. A maintenance profile is configured that specifies policy changes to apply when the group is in

maintenance mode. A maintenance profile is associated with each maintenance group. See Configuring
a maintenance profile.

The usual intent of the policy changes is to de-preference paths through the maintenance group so that
traffic is diverted elsewhere.

3. The maintenance group is placed into maintenance mode, which applies the policies in the associated

maintenance profile. See Placing a maintenance group into maintenance mode.

4. The user monitors the traffic on the interfaces in the maintenance group. When the traffic rate falls
below a threshold, the user shuts down the members of the maintenance group and performs the
required service. See Taking a maintenance group out of service.

5. After the service is completed, the user takes the maintenance group out of maintenance mode, which
disables the policies in the associated maintenance profile, and restores traffic on the original paths.
See Restoring the maintenance group to service.

19.1 Configuring a maintenance group

A maintenance group specifies a set of network resources to be taken out of service when maintenance
mode is enabled. For example, a maintenance group can consist of one or more BGP neighbors or peer
groups belonging to a one or more network instances.

Specify a set of network resources in a maintenance group. The network resources in the maintenance
group are taken out of service when maintenance mode is enabled.

Example:

The following example configures maintenance group mgroup1, consisting of the BGP neighbors in peer
group headquarters1, which exists in the default network instance, as well as BGP neighbors in peer group
headquarters2, which exists in network instance "black". In the example, maintenance group mgroup1 is
associated with maintenance profile mprof1.

--{ candidate shared default }--[  ]--
# info system maintenance
    system {
        maintenance {
            group mgroup1 {
                maintenance-profile mprof1
                maintenance-mode {
                    admin-state disable

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

238

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Maintenance Mode

                }
                members {
                    bgp {
                        network-instance default {
                            peer-group [
                                headquarters1
                            ]
                        network-instance black {
                            peer-group [
                                headquarters2
                            ]
                        }
                    }
                }
            }
        }
    }

19.2 Configuring a maintenance profile

A maintenance profile specifies policy changes that are applied to members of a maintenance group when
maintenance mode is enabled for the group.

The following example configures a routing policy and a maintenance profile that references the routing
policy.

Example:

The following example defines the routing policy drain-with-as-path-prepend:

--{ candidate shared default }--[  ]--
# info routing-policy policy drain-with-as-path-prepend
    routing-policy {
        policy drain-with-as-path-prepend {
            default-action {
                accept {
                    bgp {
                        as-path {
                            prepend {
                                as-number auto
                                repeat-n 3
                            }
                        }
                    }
                }
            }
        }
    }

The following example defines a maintenance profile that references the routing policy drain-with-as-path-
prepend.

--{ candidate shared default }--[  ]--
# info system maintenance
    system {
        maintenance {
            profile mprof1 {
                bgp {
                    import-policy drain-with-as-path-prepend

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

239

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Maintenance Mode

                    export-policy drain-with-as-path-prepend
                }
            }
        }
    }

19.3 Placing a maintenance group into maintenance mode

When a maintenance group is placed into maintenance mode, it applies the policies in the associated
maintenance profile to the resources in the maintenance group.

To place a maintenance group into maintenance mode, change the setting for maintenance-mode in the
group configuration to enable, then commit the configuration.

Example:

The following example enables maintenance mode for maintenance group mgroup1, and commits the
configuration. The policies configured in the maintenance profile associated with mgroup1 are applied to
the resources configured in mgroup1.

--{ candidate shared default }--[  ]--
# info system maintenance group mgroup1
    system {
        maintenance {
            group mgroup1 {
                maintenance-mode {
                    admin-state enable
                }
            }
        }
    }

--{ * candidate shared default }--[  ]--
# commit stay
All changes have been committed. Starting new transaction.

19.4 Taking a maintenance group out of service

After enabling maintenance mode for a maintenance group, monitor the traffic on the interfaces in the
group. When the traffic rate drops to an acceptable level, shut down the members of the maintenance
group and perform the required service.

Monitor traffic for an interface using the info from state command to show interface traffic statistics. When
the traffic rate reaches a low-enough level, administratively disable the interface.

Example:

To monitor an interface:

--{ running }--[  ]--
# info from state interface ethernet-1/2 statistics
    interface ethernet-1/2 {
        statistics {
            in-octets 46969

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

240

SPACER TEXT

CONFIGURATION BASICS RELEASE 22.6

Maintenance Mode

            in-unicast-pkts 492
            in-broadcast-pkts 0
            in-multicast-pkts 34
            in-discards 0
            in-errors 0
            in-unknown-protos 0
            in-fcs-errors 0
            out-octets 46169
            out-unicast-pkts 490
            out-broadcast-pkts 1
            out-multicast-pkts 25
            out-discards 0
            out-errors 0
            carrier-transitions 1

To shut down the interface:

--{ * candidate shared default }--[  ]--
# interface ethernet-1/2 admin-state disable
# commit stay
All changes have been committed. Starting new transaction.

19.5 Restoring the maintenance group to service

After performing the required maintenance operations, restore the maintenance group to service.

To restore the maintenance group to service, change the setting for the maintenance-mode state in the
group configuration to disable, then commit the configuration.

Example:

The following example takes maintenance group mgroup1 out of maintenance mode:

--{ candidate shared default }--[  ]--
# info system maintenance group mgroup1
    system {
        maintenance {
            group mgroup1 {
                maintenance-mode {
                    admin-state disable
                }
            }
        }
    }

--{ * candidate shared default }--[  ]--
# commit stay
All changes have been committed. Starting new transaction.

3HE 18781 AAAA TQZZA

© 2022 Nokia.
Use subject to Terms available at: www.nokia.com/terms/.

241

SPACER TEXT

Customer document and product support

Customer documentation
Customer documentation welcome page

Technical support
Product support portal

Documentation feedback
Customer documentation feedback

Nokia Service Router Linux
Release 24.7

Configuration Basics Guide

3HE 20653 AAAA TQZZA
Edition: 01
July 2024

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

Nokia is committed to diversity and inclusion. We are continuously reviewing our customer
documentation and consulting with standards bodies to ensure that terminology is inclusive and
aligned with the industry. Our future customer documentation will be updated accordingly.

This document includes Nokia proprietary and confidential information, which may not be distributed
or disclosed to any third parties without the prior written consent of Nokia.

This document is intended for use by Nokia’s customers (“You”/”Your”) in connection with a product
purchased or licensed from any company within Nokia Group of Companies. Use this document
as agreed. You agree to notify Nokia of any errors you may find in this document; however, should
you elect to use this document for any purpose(s) for which it is not intended, You understand and
warrant that any determinations You may make or actions You may take will be based upon Your
independent judgment and analysis of the content of this document.

Nokia reserves the right to make changes to this document without notice. At all times, the
controlling version is the one available on Nokia’s site.

No part of this document may be modified.

NO WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT
LIMITED TO ANY WARRANTY OF AVAILABILITY, ACCURACY, RELIABILITY, TITLE, NON-
INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, IS MADE
IN RELATION TO THE CONTENT OF THIS DOCUMENT. IN NO EVENT WILL NOKIA BE LIABLE
FOR ANY DAMAGES, INCLUDING BUT NOT LIMITED TO SPECIAL, DIRECT, INDIRECT,
INCIDENTAL OR CONSEQUENTIAL OR ANY LOSSES, SUCH AS BUT NOT LIMITED TO LOSS
OF PROFIT, REVENUE, BUSINESS INTERRUPTION, BUSINESS OPPORTUNITY OR DATA
THAT MAY ARISE FROM THE USE OF THIS DOCUMENT OR THE INFORMATION IN IT, EVEN
IN THE CASE OF ERRORS IN OR OMISSIONS FROM THIS DOCUMENT OR ITS CONTENT.

Copyright and trademark: Nokia is a registered trademark of Nokia Corporation. Other product
names mentioned in this document may be trademarks of their respective owners.

The registered trademark Linux® is used pursuant to a sublicense from the Linux Foundation, the
exclusive licensee of Linus Torvalds, owner of the mark on a worldwide basis.

© 2024 Nokia.

Configuration Basics Guide Release 24.7

Table of contents

Table of contents

1  About  this  guide.................................................................................................................................. 9

1.1  Precautionary and information messages...................................................................................9

1.2  Conventions................................................................................................................................. 9

2  What's  new......................................................................................................................................... 11

3  System  management.........................................................................................................................12

3.1  Configuring  a  hostname............................................................................................................ 12

3.2  Configuring a domain name......................................................................................................12

3.3  Configuring DNS settings..........................................................................................................13

3.3.1  Configuring preferred source address for DNS requests............................................... 14

3.4  Configuring the management network-instance....................................................................... 14

3.5  Access  types............................................................................................................................. 15

3.5.1  Enabling an SSH server................................................................................................. 15

3.5.1.1  Configuring SSH key-based authentication.......................................................... 16

3.5.2  SSH  host  keys................................................................................................................ 17

3.5.2.1  Host key authentication and preservation............................................................ 17

3.5.3  SSH  certificates...............................................................................................................19

3.5.3.1  Configuring CA public key (trust-anchors)............................................................19

3.5.3.2  Configuring SSH principals...................................................................................20

3.5.3.3  Configuring host certificate................................................................................... 21

3.5.3.4  Trusting CA public key..........................................................................................22

3.5.3.5  Configuring revoked key list................................................................................. 22

3.5.3.6  Viewing an SSH certificate................................................................................... 23

3.5.4  Configuring  FTP.............................................................................................................. 24

3.6  Configuring  banners.................................................................................................................. 25

3.7  Synchronizing the system clock................................................................................................25

3.8  Configuring preferred source address for NTP requests..........................................................26

3.9  Configuring  SNMP.....................................................................................................................27

3.10  IP ECMP Load Balancing....................................................................................................... 27

3.10.1  Configuring IP ECMP load balancing........................................................................... 28

3.11  Powering down the system..................................................................................................... 28

3.12  Configuring reboot options...................................................................................................... 29

3.12.1  delay.............................................................................................................................. 29

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

3

 
 
 
 
Configuration Basics Guide Release 24.7

Table of contents

3.12.2  cancel............................................................................................................................ 30

3.12.3  force...............................................................................................................................30

3.12.4  message........................................................................................................................ 30

3.12.5  warm.............................................................................................................................. 33

3.13  Non-stop  forwarding................................................................................................................ 33

3.13.1  Triggering redundancy switchover................................................................................ 34

3.13.2  Forcing redundancy synchronization............................................................................ 35

3.14  VRRP....................................................................................................................................... 35

3.14.1  Configuring  VRRP......................................................................................................... 35

4  Configuration management.............................................................................................................. 38

4.1  Default  configuration..................................................................................................................38

4.2  Configuration  datastores........................................................................................................... 38

4.3  Configuration  modes................................................................................................................. 39

4.3.1  Configuration candidates.................................................................................................39

4.3.2  Setting the configuration mode....................................................................................... 39

4.4  Committing a configuration in candidate mode........................................................................ 40

4.4.1  Confirming a commit operation.......................................................................................41

4.4.2  Validating a commit operation.........................................................................................42

4.4.3  Updating the baseline datastore..................................................................................... 42

4.5  Deleting  a  configuration............................................................................................................ 43

4.6  Annotating the configuration..................................................................................................... 43

4.7  Discarding a configuration in candidate mode..........................................................................45

4.8  Displaying configuration details.................................................................................................45

4.9  Displaying the configuration state............................................................................................. 47

4.10  Saving a configuration to a file............................................................................................... 49

4.11  Loading  a  configuration........................................................................................................... 49

4.12  Executing configuration statements from a file.......................................................................50

4.13  Configuration checkpoints....................................................................................................... 50

4.13.1  Generating a checkpoint............................................................................................... 51

4.13.2  Loading a checkpoint.................................................................................................... 51

4.13.3  Reverting to a previous checkpoint.............................................................................. 52

4.13.4  Clearing a checkpoint................................................................................................... 52

4.13.5  Configuring maximum number of checkpoints..............................................................53

4.13.6  Displaying checkpoint information................................................................................ 53

4.14  Rescue  configuration...............................................................................................................53

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

4

 
 
 
 
Configuration Basics Guide Release 24.7

Table of contents

4.14.1  Saving a rescue configuration...................................................................................... 54

4.14.2  Clearing a rescue configuration.................................................................................... 54

4.15  Configuration  upgrades........................................................................................................... 55

4.15.1  Upgrading configuration files........................................................................................ 55

5  Securing  access................................................................................................................................ 56

5.1  User  types................................................................................................................................. 56

5.1.1  Linux  users...................................................................................................................... 56

5.1.2  Local  users...................................................................................................................... 56

5.1.3  Remote  users.................................................................................................................. 56

5.2  AAA  functions............................................................................................................................ 57

5.2.1  Authentication.................................................................................................................. 57

5.2.1.1  Superuser attribute for local users....................................................................... 57

5.2.1.2  Password security for local users.........................................................................57

5.2.1.3  Password hashing for local users.........................................................................58

5.2.2  Authorization....................................................................................................................58

5.2.2.1  Superuser role attribute for local users................................................................ 59

5.2.3  Accounting....................................................................................................................... 59

5.3  AAA server group configuration................................................................................................ 60

5.3.1  Configuring an AAA server group...................................................................................60

5.4  Authentication for the linuxadmin user......................................................................................62

5.4.1  Configuring the password for the linuxadmin user......................................................... 62

5.5  Authentication for local users....................................................................................................63

5.5.1  Configuring authentication for local users...................................................................... 63

5.5.2  Configuring superuser attribute for local users...............................................................64

5.5.3  Configuring password security for local users................................................................ 65

5.5.4  Configuring hash-method for local user passwords....................................................... 67

5.5.5  Clearing locked-out local users.......................................................................................68

5.6  Authorization using role-based access control......................................................................... 69

5.6.1  Role  configuration........................................................................................................... 69

5.6.1.1  Configuring  a  role................................................................................................. 70

5.6.1.2  Configuring superuser role for local users........................................................... 71

5.6.2  Assigning roles to users................................................................................................. 72

5.6.3  Authorization using a TACACS+ server..........................................................................73

5.6.3.1  Configuring TACACS+ Authorization.................................................................... 74

5.6.4  Authorization using a RADIUS server............................................................................ 76

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

5

 
 
 
 
Configuration Basics Guide Release 24.7

Table of contents

5.6.4.1  Configuring RADIUS Authorization....................................................................... 76

5.6.5  Service  authorization.......................................................................................................77

5.6.5.1  Configuring service authorization......................................................................... 78

5.6.6  CLI plug-in authorization for local users......................................................................... 79

5.6.6.1  Configuring CLI plug-in authorization................................................................... 80

5.7  Accounting  configuration........................................................................................................... 81

5.7.1  Configuring TACACS+ accounting..................................................................................81

5.7.2  Configuring RADIUS accounting.....................................................................................82

5.8  Displaying user session information......................................................................................... 82

5.9  Disconnecting user sessions.....................................................................................................83

5.10  Configuring the idle-timeout period for user sessions............................................................ 84

6  Management  servers......................................................................................................................... 85

6.1  gRPC  server.............................................................................................................................. 85

6.1.1  Configuring a gRPC server.............................................................................................86

6.1.2  Disconnecting clients from a gRPC server.....................................................................87

6.1.3  Displaying gRPC client information................................................................................ 87

6.1.4  Displaying the RPCs that clients are using.................................................................... 87

6.2  JSON-RPC  server..................................................................................................................... 88

6.2.1  Configuring a JSON-RPC server.................................................................................... 88

6.3  TLS  profiles............................................................................................................................... 89

6.3.1  Configuring a TLS profile................................................................................................89

6.3.2  Configuring a TLS profile with TPM Device Identity....................................................... 91

6.3.3  Generating a self-signed certificate................................................................................ 92

6.3.4  Generating a certificate signing request......................................................................... 92

6.3.5  SPIFFE............................................................................................................................ 93

6.3.5.1  Leveraging SPIFFE...............................................................................................93

6.3.5.2  Configuring SPIFFE-ID for users..........................................................................94

6.3.5.3  Using SPIFFE for client authentication (mTLS)....................................................94

7  Logging............................................................................................................................................... 96

7.1  Input sources for log messages................................................................................................96

7.2  Filters  for  log  messages............................................................................................................98

7.3  Output destinations for log messages...................................................................................... 99

7.4  Defining  filters..........................................................................................................................100

7.5  Logging destination configuration........................................................................................... 101

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

6

 
 
 
 
Configuration Basics Guide Release 24.7

Table of contents

7.5.1  Specifying a log file destination.................................................................................... 101

7.5.2  Specifying a buffer destination......................................................................................102

7.5.3  Specifying the console as destination.......................................................................... 103

7.5.4  Specifying a remote server destination........................................................................ 103

7.6  Specifying a Linux syslog facility for SR Linux subsystem messages.................................... 104

7.7  Specifying FQDN for logging hostnames................................................................................104

7.8  Rsyslog templates for local buffer, file, or console output...................................................... 105

7.9  Rsyslog templates for forwarding messages to remote servers............................................. 106

8  Network-instances........................................................................................................................... 108

8.1  Basic network-instance configuration......................................................................................108

8.2  Path  MTU  discovery................................................................................................................109

8.3  Static  routes.............................................................................................................................109

8.3.1  Configuring static routes............................................................................................... 110

8.3.2  Configuring failure detection for static routes............................................................... 114

8.4  Aggregate  routes..................................................................................................................... 114

8.4.1  Configuring aggregate routes....................................................................................... 115

8.5  Route  preferences................................................................................................................... 115

8.6  IP tunnel decapsulation groups...............................................................................................116

8.6.1  Configuring an IP tunnel decapsulation group..............................................................117

8.7  Displaying network-instance status.........................................................................................117

8.8  The mac-vrf network-instance.................................................................................................119

8.8.1  MAC  selection............................................................................................................... 119

8.8.2  MAC duplication detection and actions........................................................................ 120

8.8.2.1  MAC duplication detection.................................................................................. 120

8.8.2.2  MAC duplication actions..................................................................................... 120

8.8.2.3  MAC duplication process restarts.......................................................................120

8.8.2.4  Configurable hold-down-time.............................................................................. 120

8.8.3  Bridge table configuration............................................................................................. 121

8.8.3.1  Deleting entries from the bridge table................................................................ 121

8.8.4  The mac-vrf network-instance type...............................................................................122

8.9  Network-instance route leaking...............................................................................................123

8.9.1  Network-instance route leaking configuration example................................................ 124

8.10  Configuring interface references........................................................................................... 143

9  SR  Linux  applications.....................................................................................................................145

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

7

 
 
 
 
Configuration Basics Guide Release 24.7

Table of contents

9.1  Installing  an  application...........................................................................................................145

9.2  Starting  an  application.............................................................................................................146

9.3  Restarting  applications............................................................................................................ 146

9.3.1  Restarting an application.............................................................................................. 147

9.4  Terminating an application...................................................................................................... 148

9.5  Reloading application configuration........................................................................................ 148

9.6  Clearing application statistics..................................................................................................149

9.7  Restricted operations for applications.....................................................................................149

9.8  Configuring an application.......................................................................................................150

9.9  Removing an application from the system..............................................................................154

9.10  Partioning and isolating application resources..................................................................... 155

9.10.1  Cgroup  profiles............................................................................................................ 155

9.10.1.1  Default cgroup profile........................................................................................155

9.10.1.2  Customer-defined cgroup profile...................................................................... 158

9.10.2  Configuring a cgroup...................................................................................................158

9.10.2.1  Cgroup configuration example..........................................................................159

9.10.3  Kernel low-memory killer.............................................................................................160

9.10.3.1  SR Linux process kill strategy.......................................................................... 161

9.10.4  Application manager extensions for cgroups..............................................................163

9.10.5  Debugging cgroups..................................................................................................... 164

9.10.5.1  SR Linux cgroup debugging commands.......................................................... 164

9.10.5.2  Linux-provided cgroup debugging commands..................................................167

10  Datapath resource management..................................................................................................170

10.1  LPM  table  partitioning........................................................................................................... 170

10.2  Changing datapath resource management settings............................................................. 171

10.3  Displaying datapath resource management information.......................................................172

11  Maintenance  Mode.........................................................................................................................173

11.1  Configuring a maintenance group......................................................................................... 173

11.2  Configuring a maintenance profile........................................................................................ 174

11.3  Placing a maintenance group into maintenance mode......................................................... 175

11.4  Taking a maintenance group out of service.......................................................................... 175

11.5  Restoring the maintenance group to service........................................................................ 176

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

8

 
 
 
 
Configuration Basics Guide Release 24.7

About this guide

1 About this guide

This document describes basic configuration for the Nokia Service Router Linux (SR Linux). Examples of
commonly used commands are provided.

This document is intended for network technicians, administrators, operators, service providers, and others
who need to understand how the router is configured.

Note:
This manual covers the current release and may also contain some content that will be released
in later maintenance loads. See the SR Linux Release Notes for information on features
supported in each load.

Configuration and command outputs shown in this guide are examples only; actual displays may
differ depending on supported functionality and user configuration.

1.1 Precautionary and information messages

The following are information symbols used in the documentation.

DANGER: Danger warns that the described activity or situation may result in serious personal
injury or death. An electric shock hazard could exist. Before you begin work on this equipment,
be aware of hazards involving electrical circuitry, be familiar with networking environments, and
implement accident prevention procedures.

WARNING:  Warning indicates that the described activity or situation may, or will, cause
equipment damage, serious performance problems, or loss of data.

Caution: Caution indicates that the described activity or situation may reduce your component or
system performance.

Note: Note provides additional operational information.

Tip: Tip provides suggestions for use or best practices.

1.2 Conventions

Nokia SR Linux documentation uses the following command conventions.

• Bold type indicates a command that the user must enter.

•

Input and output examples are displayed in Courier text.

• An open right-angle bracket indicates a progression of menu choices or simple command sequence

(often selected from a user interface). Example: start > connect to.

• A vertical bar (|) indicates a mutually exclusive argument.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

9

 
 
 
 
Configuration Basics Guide Release 24.7

About this guide

• Square brackets ([ ]) indicate optional elements.

• Braces ({ }) indicate a required choice. When braces are contained within square brackets, they indicate

a required choice within an optional element.

•

Italic type indicates a variable.

Generic IP addresses are used in examples. Replace these with the appropriate IP addresses used in the
system.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

10

 
 
 
 
Configuration Basics Guide Release 24.7

What's new

2 What's new

Topic

Location

Source address for TACACS+

Source address for RADIUS

Configure TACACS+ and local server
groups for AAA functions

Configure RADIUS server group for AAA
functions

Configuring a TLS profile with TPM Device
Identity

Configuring a TLS profile with TPM
Device Identity

Static NHGs for GRE tunnel next-hops

Static routes

New hash-seed default for IP load-balancing

IP ECMP Load Balancing

GRE decapsulation subnets

IP tunnel decapsulation groups

Virtual Router Redundancy Protocol (VRRP)

VRRP

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

11

 
 
 
 
Configuration Basics Guide Release 24.7

System management

3 System management

This chapter contains procedures for setting up basic system management functions on SR Linux,
including the hostname, domain name, DNS settings, and management network-instance. It contains
examples of configuring an SSH server and FTP server, as well as NTP for the system clock, and enabling
an SNMP server.

3.1 Configuring a hostname

Procedure

The SR Linux device must have a hostname configured. The default hostname is srlinux. The hostname
typically appears on all CLI prompts on the device, although you can override this with the environment
prompt CLI command.

The hostname must be a unique name on the network, and it can be a fully qualified domain name (FQDN)
or an unqualified single-label name. If the hostname is a single-label name (for example, srlinux), the
system may use its domain name, if configured, to infer its own FQDN.

Example

The following example shows the configuration for a hostname on the SR Linux device.

--{ candidate shared default }--[  ]--
# info system name
    system {
        name {
            host-name 3-node_srlinux-A
        }
    }

3.2 Configuring a domain name

Procedure

The SR Linux device uses its hostname, combined with a domain name, to form its FQDN. It is expected
that the FQDN exists within the DNS servers used by SR Linux, though this is not a requirement.

Assuming the SR Linux FQDN is in the DNS server, you can use the FQDN to reach the SR Linux device
without knowing its management address. A domain name is not mandatory, but if specified, it is added to
the DNS search list by default.

Example

The following shows the configuration for a domain name on the SR Linux device. In this example,
the device FQDN is set to 3-node_srlinux-A.mv.usa.nokia.com.

--{ candidate shared default }--[  ]--
# info system name

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

12

 
 
 
 
Configuration Basics Guide Release 24.7

System management

    system {
        name {
            host-name 3-node_srlinux-A
            domain-name mv.usa.nokia.com
        }
    }

3.3 Configuring DNS settings

Procedure

The SR Linux device uses DNS to resolve hostnames within the configuration, or for operational
commands, such as ping. You can specify up to three DNS servers for the SR Linux device to use, with
either IPv4 or IPv6 addressing.

You can also specify a search list of DNS suffixes that the device can use to resolve single-label
names; for example, for a search list of nokia1.com and nokia2.com, a ping for host srlinux
performs a DNS lookup for srlinux.nokia1.com, and if unsuccessful, performs a DNS lookup for
srlinux.nokia2.com.

The SR Linux device supports configuration of static DNS entries. Static DNS entries allow resolution of
hostnames that may not be in the DNS servers used by the SR Linux device. Using a static DNS entry, you
can map multiple addresses (both IPv4 and IPv6) to one hostname. The SR Linux linux_mgr application
adds the static DNS entries to the /etc/hosts file in the underlying Linux OS.

Example

In the following example, the SR Linux device is configured to use two DNS servers to resolve
hostnames, a search list of DNS suffixes for resolving single-label names, and IPv4 and IPv6 static
DNS entries for a host.

DNS requests are sourced from the mgmt network-instance (see Configuring the management
network-instance).

--{ candidate shared default }--[  ]--
# info system dns
    system {
        dns {
            network-instance mgmt
            server-list [
                192.0.2.1
                192.0.2.2
            ]
            search-list [
                nokia1.com
                nokia2.com
            ]
            host-entry srlinux.nokia.com {
                ipv4-address 192.0.2.3
                ipv6-address 2001:db8:123:456::11:11
            }
        }
    }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

13

 
 
 
 
Configuration Basics Guide Release 24.7

System management

3.3.1 Configuring preferred source address for DNS requests

Procedure

SR Linux allows you to specify the preferred source address when acting as a DNS client in a network-
instance with multiple possible source addresses. The specified source IP address must belong to the
network instance where DNS is configured. You can configure the preferred source-address parameter
as either an IPv4 or IPv6 address under system.dns.

Example

In this example, DNS requests are sent to the configured DNS servers using the source address of
192.168.12.1.

--{ candidate shared default }--[  ]--
#info system dns
    system {
        dns {
            network-instance mgmt
            source-address 192.168.12.1
            server-list [
                192.0.2.1
                192.0.2.2
            ]
        }
    }

3.4 Configuring the management network-instance

Procedure

The SR Linux device is primarily managed via a management network-instance. The management
network-instance isolates management traffic from other network-instances configured on the device.

The out-of-band mgmt0 interface is automatically added to the management network-instance, and
management services run within the management network-instance.

Although the management network-instance is primarily intended to handle management traffic, you can
configure it in the same way as any other network-instance on the device, including protocols, policies,
and filters. The management network-instance is part of the default configuration, but may be deleted if
necessary.

Addressing within the management network-instance is available via DHCP and static IP addresses. Both
IPv4 and IPv6 addresses are supported.

Example

--{ candidate shared default }--[  ]--
# info network-instance mgmt
    network-instance mgmt {
        type ip-vrf
        admin-state enable
        description "Management network instance"
        interface mgmt0.0 {
        }
        protocols {

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

14

 
 
 
 
Configuration Basics Guide Release 24.7

System management

            linux {
                export-routes true
                export-neighbors true
            }
        }
    }

3.5 Access types

Access to the SR Linux device is available via a number of APIs and protocols. The SR Linux supports the
following ways to access the device:

• Secure Shell (SSH)

SSH is a standard method for accessing network devices. See Enabling an SSH server.

• File Transfer Protocol (FTP)

The FTP is a secure method for transferring files to and from network devices. See Configuring FTP.

• console

The console provides access to the SR Linux CLI via direct connection to a serial port on the device.

• gRPC Network Management Interface (gNMI)

gNMI is a gRPC-based protocol for the modification and retrieval of configuration from a target device,
as well as the control and generation of telemetry streams from a target device to a data collection
system. See gRPC server.

• JSON-RPC

JSON-RPC is a protocol with the ability to retrieve and set configuration and state using a JSON-RPC
API. See JSON-RPC server.

• Simple Network Management Protocol (SNMP)

SNMP is a commonly used network management protocol. The SR Linux device supports SNMPv2 with
a limited set of OIDs.

Regardless of the method of access, all sessions are authenticated (if authentication is enabled), whether
the session is entered via the console, SSH, or an API. Access to the device is controlled via the aaa_mgr
application. See Securing access.

3.5.1 Enabling an SSH server

Procedure

You can enable an SSH server for one or more network instances on the SR Linux device so that users
can log in to the CLI using an SSH client. The SR Linux device implements SSH via OpenSSH and
configures /etc/ssh/sshd_config in the underlying Linux OS. Only SSHv2 is supported.

Example

In the following example, an SSH server is enabled in the mgmt and default network-instances,
specifying the IP addresses where the device listens for SSH connections:

--{ candidate shared default }--[  ]--

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

15

 
 
 
 
Configuration Basics Guide Release 24.7

System management

# info system ssh-server
    system {
        ssh-server {
            network-instance mgmt {
                admin-state enable
                source-address [
                    192.0.2.1
                    192.0.2.2
                ]
            }
            network-instance default {
                admin-state enable
                source-address [
                    192.0.2.3
                    192.0.2.4
                ]
            }
        }
    }

3.5.1.1 Configuring SSH key-based authentication

Procedure

The SR Linux SSH server supports RSA public-private key and SSH certificate authentication, where an
SSH client provides either a signed message that has been encrypted by a private key or a valid certificate
that has been issued by a trusted authority. If the SSH client’s corresponding public key or certificate is
configured on the SR Linux, the SSH server can authenticate the client using either RSA public key or SSH
certificate method.

The SR Linux attempts to authenticate a user using public-key authentication first, then SSH certificates,
and finally password authentication if the previous methods fail.

To configure SSH key-based authentication, you generate a public-private key pair, then add the public key
to the SR Linux.

Example

The following is an example of using the ssh-keygen utility in Linux to generate an RSA key pair with
a length of 2048 bits:

# ssh-keygen -t rsa -b 2048
Generating public/private rsa key pair.
Enter file in which to save the key (/home/user/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/user/.ssh/id_rsa.
Your public key has been saved in /home/user/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:RNVV8/XRVK7PhY2OJxa7rjkSUFqyVoj4pUXL2PDs7mI user@linux
The key's randomart image is:
+---[RSA 2048]----+
| .o+o. ...oo*|
| o.oB*.. +=|
| . .o@* +|
| Fo = |
| . .M . + o|
| .. = o.|
| .. = o o|
| E.. .o + |

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

16

 
 
 
 
Configuration Basics Guide Release 24.7

System management

| . ...o+o |
+----[SHA256]-----+

Example

After generating the RSA key pair, you can add the public key to the SR Linux. The location for the
public key depends on the type of user for which SSH key-based authentication is being configured:

• For Linux users (see Linux users), you add the public key to the user’s $HOME/.ssh/

authorized_keys file.

• For users configured within the SR Linux CLI (see Local users), you add the public key to the SR

Linux configuration file with a CLI command.

For example, the following CLI command configures a public key and password for the SR Linux user
srlinux:

--{ candidate shared default }--[  ]--
# system aaa authentication user srlinux ssh-key 
[ <public-key> ] password <password> 

In the example, the <public-key> has the format ssh-rsa <key> <comment>. If multiple public
keys are configured for a user, they are tried in the order they were configured.

3.5.2 SSH host keys

An SSH host key is generated when an SSH server is enabled for a network instance on an SR Linux
device. This host key is the public key.

SSH clients store the public host keys of the servers to which they are connected.

A host key that is stored is referred to as a Known host key. The files /etc/ssh/known_hosts and
.ssh/known_hosts present in the user's home directory, contain the host public keys for all the known
hosts.

In SR Linux, the server-side keys are stored in /etc/ssh, and the filenames begin with ssh_host_
[dsa/ecdsa/ed25519/rsa]_key. For information about host key authentication and preservation, see
Host key authentication and preservation.

For information about SSH server host certificate configuration, see Configuring host certificate.

3.5.2.1 Host key authentication and preservation

When an SSH client connects to a server, the server offers its host key as identification. If this is the first
time the user has connected to the server, the client prompts the user to accept the host key. After the user
accepts the key, the host key and the host-name used to connect to the server gets appended to the list of
known hosts. In subsequent connections to the same server, the SSH client expects the server to return
the same host key.

If the host key presented by the server on a subsequent connection is different from the one saved on
the user’s local system, the SSH client refuses to proceed with the connection, and instead, displays the
following warning message:

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

17

 
 
 
 
Configuration Basics Guide Release 24.7

System management

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
Someone could be eavesdropping on you right now (man-in-the-middle attack)!
It is also possible that a host key has just been changed.
The fingerprint for the ED25519 key sent by the remote host is
SHA256:4xnagTqYdQyLGJl0XhvAvyBcrRL2nZ8vSRXTYfcIYe0.
Please contact your system administrator.
Add correct host key in /Users/test_user/.ssh/known_hosts to get rid of this message.
Offending ED25519 key in /Users/test_user/.ssh/known_hosts:74
Host key for 10.0.0.1 has changed and you have requested strict checking.
Host key verification failed.

The message suggests that the server may be pretending to be the intended server to intercept passwords
or there could be a change in the host key.

Without correct verification techniques, a periodic change in an SSH host key is indistinguishable from a
man-in-the-middle (MITM) attack. Users may be tempted to accept frequent warning messages without
verifying them, which can increase the vulnerability to MITM attacks instead of reducing it.

To overcome this, you can enable the preserve option for the SSH server host key. This ensures the SSH
server host keys in /etc/ssh are preserved and restored after a system reboot or SSH server restart.
When the preserve option is not enabled, the SSH server host key remains valid only until the node is
restarted or the SSH server is stopped and restarted.

Note:
This feature is non-backward compatible in releases before 23.7.

For information about enabling the preserve option to prevent SSH host key regeneration upon reboot,
see Preserving SSH host key.

3.5.2.1.1 Preserving SSH host key

Procedure

To prevent SSH server host key regeneration upon reboot, set the preserve option for SSH under
system ssh-server host-key.

Example

The following example sets the preserve option for SSH:

--{ * candidate shared default }--[ ]--
# info system ssh-server host-key
    system {
        ssh-server {
            host-key {
                preserve true
            }
        }
    }

• When preserve option is set to true, the SSH server host keys in /etc/ssh are saved and

restored after a system reboot or SSH server restart.

• When preserve option is set to false, the SSH server host keys in /etc/ssh are removed and

regenerated on each system reboot or SSH server restart .

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

18

 
 
 
 
Configuration Basics Guide Release 24.7

System management

3.5.3 SSH certificates

The SR Linux SSH server supports RSA public-private key and SSH certificate authentication.

When using public key cryptography for authentication, the public key from every client must be copied to
every server that the client intends to log into. This type of authentication method does not scale well and
requires significant administrative effort to maintain.

As an alternative, OpenSSH supports the creation of simple SSH certificates and associated CA
infrastructure. Using a public key from a certificate authority (CA) to authenticate client certificates removes
the need to copy keys between multiple systems.

The SSH certificates are signed with a standard SSH public key using the ssh-keygen utility. The utility
supports two types of certificates: user and host certificates. User certificates authenticate users to servers,
while the host certificates authenticate server hosts to users.

Note:
If a user has both an RSA public key and an SSH certificate set up for authentication, the SSH
client tries the public key first, and then the certificate.

The high-level steps for enabling SSH certificate authentication are,

• Create a CA key pair and configure the CA public key (trust-anchors) on the SSH server. See

Configuring CA public key (trust-anchors).

• Create a user SSH certificate, sign it with the CA private key and SSH principal, and configure an SSH

principal for each user. See Configuring SSH principals.

• Create a host SSH certificate, sign it with the CA private key, and configure the SSH host certificate on

the SSH server, see Configuring host certificate.

• Set up CA public key as the cert-authority for all client nodes. See Trusting CA public key.

• Configure a revoked public user key list. See Configuring revoked key list.

3.5.3.1 Configuring CA public key (trust-anchors)

Procedure

SR Linux allows the configuration of CA public keys, also known as trust-anchors, to verify SSH
certificates. The SSH certificates are used by the sshd service to authenticate clients (users) connecting
via SSH. The CA signing key pair (CA public and private key) is generated by running the ssh-keygen
command on a server designated as the CA machine.

Example: Generate CA

The following example generates CA signing key pair.

ssh-keygen -f ca
Generating public/private rsa key pair.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in ca
Your public key has been saved in ca.pub
The key fingerprint is:
SHA256:GjGiO2dJV2tKBcuCjC5skMn8cfJ/iToZ/4oR/F0hhAE user@node

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

19

 
 
 
 
Configuration Basics Guide Release 24.7

System management

The key's randomart image is:
+---[RSA 3072]----+
|     Eo.o.       |
|o= . . +.        |
|=oooo.= o. .     |
|+ ..*o = .. .    |
|.+...++ S  .     |
|o  o =+=o o      |
|  o +.*+ +       |
|   + o+..        |
|     o..o.       |
+----[SHA256]-----+

Example: Configure trust-anchors

The following example configures the trust-anchors that verifies the SSH certificates. The
trust-anchors configuration is a global-setting and is applicable to all SSH servers.

--{ candidate shared default }--[  ]--
# info system ssh-server trust-anchors
    system {
        ssh-server {
            trust-anchors [
                "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCujqWgz360aQ6y+7pp3oKjofkbQFvb
Pjr9g0jV2xyOCBjidFH8Czr9QaasfFRIHDFxeydNu/Jt2HtQhLekrUQ8oKjArytR72pLreMzc7tITGDdQuGNZDVNwEefeCbj
XrJ2LPi+fFwvZBoFM7BNYn/Hx4HEHeGyFKGZ5RStx/bMiMW2xVwyfhR/s5wKqXV/kUsxQlyWJEKdjLhRzBbDqDNr3alOJtg
EhOQcD6kG7nCMKdXspjie2Tjha1khs7Ecg/ff8t/Qgf43H4E/imP0v1HJHsiqBgtZxK3wE7TiGDNY8d2LQJblNspzh
Le4QOdqwficozk9QkIodQawWMgcf3UXiKz/akH0ZJVjIc7ETsbC9PgxM0JmXgHVkakq37ExPLkGXV2dEQ3lJhkcC8Kqa
+guHqyxF7ETw4SOnDxKfdROfUnouYgVLDpwhIHXRDzvBOPtu5OH9iK0adf2ceQu7wcQAmGuBzWAWKqZlNKb9JfNCp
AlvdTGpxGEGBmXEl46r3E= user@node"
            ]
        }
    }

3.5.3.2 Configuring SSH principals

Procedure

SR Linux allows configuration of SSH principals for users.

A client machine generates a user certificate using the ssh-keygen tool and signs it with the CA
certificate and SSH principal value.

Example

The following is an example of a signed user certificate (srl-user1-cert.pub) with SSH
principals.

--{ candidate shared default }--[  ]--
# ssh-keygen -L -f srl-user1-cert.pub
srl-user1-cert.pub:
        Type: ssh-rsa-cert-v01@openssh.com user certificate
        Public key: RSA-CERT SHA256:LBPq+l+ksZi++61XoVFGch5Sf3xrksQ5mY70TR3iai4
        Signing CA: RSA SHA256:GjGiO2dJV2tKBcuCjC5skMn8cfJ/iToZ/4oR/F0hhAE (using rsa-
sha2-512)
        Key ID: "srl-user1"
        Serial: 0
        Valid: forever
        Principals:

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

20

 
 
 
 
Configuration Basics Guide Release 24.7

System management

                admin
        Critical Options: (none)
        Extensions:
                permit-X11-forwarding
                permit-agent-forwarding
                permit-port-forwarding
                permit-pty
                permit-user-rc

When a user logs into the server over SSH, the user certificate is checked against a list of configured
principals. The server authenticates the client over SSH only if the following conditions are met: the
client’s certificate is verified, the client’s username matches, and the client’s certificate has a principal
that is configured on the server. A single user (client) certificate can match multiple principals, and
multiple principals can match a single user.

You can configure SSH principals under system.aaa.authentication.user{}.

Example

The following example configures user (srl-user1) with role admin, and ssh-principal allowing
admin.

--{ candidate shared default }--[  ]--
# info system aaa authentication user srl-user1
    system {
        aaa {
            authentication {
                user srl-user1 {
                    role [
                        admin
                    ]
                    ssh-principals [
                        admin
                    ]
                }
            }
        }
    }

3.5.3.3 Configuring host certificate

Procedure

SR Linux provides an option to configure the host certificates (certificate) under system.ssh-
server.host-key. The host certificate refers to the host key signed with a CA private key. For more
information about SSH host keys, see SSH host keys. In SR Linux, the server-side keys are stored
in /etc/ssh, and the filenames begin with ssh_host_[dsa/ecdsa/ed25519/rsa]_key. The
certificate configuration is a global setting and applicable to all SSH servers. You must configure the
host to present the certificate during user login.

Example

The following example configures host certificates with preserve option set to true. This ensures
the SSH server host keys in /etc/ssh are preserved and restored after a system reboot or SSH
server restart.

--{ candidate shared default }--[  ]--

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

21

 
 
 
 
Configuration Basics Guide Release 24.7

System management

# info system ssh-server host-key
    system {
        ssh-server {
            host-key {
                certificate ssh-rsa-cert-v01@openssh.com AAAAHHNzaC1yc2EtY2VydC12MDFAb3Blbn
NzaC5jb20AAAAgz2nzyiDaRws9fN3/p8iFd5iq40Twp4eVAQMAOSwkNAMAAAADAQABAAABgQC7UC4GHVIV/
2CY9fgxUizgN+jaFUgkT2jtaE6f/B7s885JbOiQYp19ltGhbqlrZQDcK+gtYjAnJ9wOSJKDg5dyY9HgTPWi
RbRzoy3oNp7QSVwEQds8HznOP8odIWWRrHzDl9GvbTTaH2Vy5qYkHubAmnW8XSkQS6jiP0nlcpfGVn/
x04FkZZQG8eofQ5RNwvd570YpaxAlKgR4xrDVbi7r65GVm3PCdfRBry9D/L9jAmc1Svc6WcqQG17ZOxo87IXb
BxLqEs3zcc44rN+UQ76Em0ictx1K0wgemDdJrevkNQ8YPTMuiPFYEfJWoE3DpSOdTfItgdafcJUfLtYrc
WksZNuUFmlFhgqb1wRIABPNgrwU9YbtldENJnOPxURaPgYkt6dDebsAWuIlCREf6XSQzbqVpBAo3YmkRAIRW8Ds/
8ZDd6TzmiEp8J00aD0/JlZJEZ53wxABO+rzZiLzO+BXOLJUblyW25Gi3G3AGEu+H8xLWu/MFXUAf+Lgx
TnjraMAAAAAAAAAAAAAAAIAAAARY2xhYi1zc2hfdGVzdC1zcmwAAAAVAAAAEWNsYWItc3NoX3Rlc3Qtc3JsAAAAAAAAAAD/
/////////wAAAAAAAAAAAAAAAAAAAZcAAAAHc3NoLXJzYQAAAAMBAAEAAAGBAK6OpaDPfrRpDrL7umnegq
Oh+RtAW9s+Ov2DSNXbHI4IGOJ0UfwLOv1Bpqx8VEgcMXF7J0278m3Ye1CEt6StRDygqMCvK1Hvakut4z
Nzu0hMYN1C4Y1kNU3AR594JuNesnYs+L58XC9kGgUzsE1if8fHgcQd4bIUoZnlFK3H9syIxbbFXDJ+FH+znAqpdX
+RSzFCXJYkQp2MuFHMFsOoM2vdqU4m2ASE5BwPqQbucIwp1eymOJ7ZOOFrWSGzsRyD99/y39CB/jcfgT+KY/S/Uckey
KoGC1nErfATtOIYM1jx3YtAluU2ynOEt7hA52rB+JyjOT1CQih1BrBYyBx/dReIrP9qQfRklWMhzsROxsL0+DEzQmZe
AdWRqSrfsTE8uQZdXZ0RDeUmGRwLwqpr6C4erLEXsRPDhI6cPEp91E59Sei5iBUsOnCEgddEPO8E4+27k4f2IrRp1/Zx5C7v
BxACYa4HNYBYqpmU0pv0l80KkCW91ManEYQYGZcSXjqvcQAAAZQAAAAMcnNhLXNoYTItNTEyAAABgFVR+2y3659XN7uTLL6i
+LFkcU76u8OTwZl2pKPZRurBqfQC9bLuQSmawfxmGAzg5emMzqcafGelwZeIuQjmUCSlNDyH+Yhsw6MMkadl2YIfuFFu/
zzIX3fF2reSfAPTPKkbZrijclYxo9H9gqWBGJF+A0f848gk3fCATwq6JM4F3q4J0lRibQBulOuvXVm3GZVWqHou9rpHOL0aGWhu
DjTaq5/oZ+tv4X+hfrCKmkacesNeX4wNn6k3JBFVLnNxdPDwAlOcSmvPqmZHa8R6e+qvu5B44YSVmlAHsaUyYHDbVjH6Hhz
KoXGTlv3iMoNl/bWNkiCS+u4Licleh0pqhinsIi8FtdVpEXQW+unqd93XQ/hAuvxZ9ia0gugkGMQixGlbPfFTaQqkZBbv0r
+S44NpsSVPOiYw6bJ/iHZM4zFHK6l2+eGgJ4p/kx/3TSO10fHK/NaoFiZLws4geYpl3YZfxmk/KKWBctv7tlv/ySzavQQJRg
+SvbH9FibEFiRHqQ== user@node
                preserve true
            }
        }
    }

3.5.3.4 Trusting CA public key

To prevent the warning about an unknown host, the user (client) system must trust the CA public key
that signed the host certificates. This is done by adding the CA public key to the known_hosts file. For
example,

echo "@cert-authority * $(cat ca.pub)" >> ~/.ssh/known_hosts

where,

• ca.pub: references the public key of the signing CA.

•

*: specify the server being connected to or a glob value ("*.example.com","*.mydomain.com"

CA keys can be marked as trusted globally in the /etc/ssh/known_hosts file or per-user in the ~/
.ssh/known_hosts file.

3.5.3.5 Configuring revoked key list

Procedure

SR Linux provides an option to configure revoke key (revoked-keys) list under .system.ssh-server.
A list of user public keys that must be invalidated is called a revoke list. Each line in the revoke list contains
one public key. If a user's public key is listed in the revoke list, the server rejects the connection when the
user tries to connect using SSH.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

22

 
 
 
 
Configuration Basics Guide Release 24.7

System management

Example

The following example configures the revoked key list.

--{ candidate shared default }--[  ]--
# info system ssh-server revoked-keys
    system {
        ssh-server {
            revoked-keys [
                "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDPlZ4/NVdfAgaUcA2Mepy/tOYvWWhiYOmPsc
WzvG8+aj9Ssj88pmJGb0r/e3FBYxEK8Bj1Mjar7GNbUXOt3NvCLjcPo6i/xxdouA+N8RmxpbPFLsLC6JwZq5IkNoxdJ9PLUNz
+cgLOY2XiLjgrUOsCT02SOn/mjcIAxzFkqmf9eLNW9CLqBW7hVCVwHpzj4Ep814MmJBXZX9llGVj1sule+ajfUxotlChyScF3Nbd+h
+YMvfAgngFRuCebMG6n2vr+zRlB/TRQibAO5fKoi/GEuntnv4f/iaNLhlRQitIDzXFNW7xx5yIer30FnYf6u5y1ijA5XJwHb9Eos
RjoM7PBYhdC6XESuyS7gOji3/l/wQfLZ7twMLB5MxUL4aB5SnaRlkYX14GyIdpsvtoe8mfsy011PqMWmQjZ8lm2eUHN+68UNBod
MmzGLS9I11a1YODydV9gLD3WwgHxGQ1vOrGvp401S4HF26gAXrAr2QblQ7tJtq+34Fvz8O0YnplvCoU= user@node"
            ]
        }
    }

3.5.3.6 Viewing an SSH certificate

Procedure

You can view an SSH certificate using the following command:

# ssh-keygen -L -f 

where,

• L: lists the content of the certificate

•

f: specifies the path to the signed certificate

The SSH certificate formats and semantics are as per the specification defined in PROTOCOL.certkeys.

Example: Viewing an user SSH certificate

The following command displays the user SSH certificate. User SSH certificate is used to
authenticate users to servers.

# ssh-keygen -L -f user1-cert.pub
user1-cert.pub:
        Type: ssh-rsa-cert-v01@openssh.com user certificate
        Public key: RSA-CERT SHA256:LBPq+l+ksZi++61XoVFGch5Sf3xrksQ5mY70TR3iai4
        Signing CA: RSA SHA256:GjGiO2dJV2tKBcuCjC5skMn8cfJ/iToZ/4oR/F0hhAE (using rsa-
sha2-512)
        Key ID: "user1"
        Serial: 0
        Valid: forever
        Principals:
                admin
        Critical Options: (none)
        Extensions:
                permit-X11-forwarding
                permit-agent-forwarding
                permit-port-forwarding
                permit-pty
                permit-user-rc

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

23

 
 
 
 
Configuration Basics Guide Release 24.7

System management

Example: Viewing a host SSH certificate

The following command displays the host SSH certificate. Host SSH certificate is used to
authenticate server hosts to users.

# ssh-keygen -L -f ssh_host_rsa_key-cert.pub
ssh_host_rsa_key-cert.pub:
        Type: ssh-rsa-cert-v01@openssh.com host certificate
        Public key: RSA-CERT SHA256:NgxyhWgpt4BX+eglv10JVZyweD7DAdjGs0ygBHzR7Ko
        Signing CA: RSA SHA256:GjGiO2dJV2tKBcuCjC5skMn8cfJ/iToZ/4oR/F0hhAE (using rsa-
sha2-512)
        Key ID: "srl"
        Serial: 0
        Valid: forever
        Principals:
                srl
                srl.local
        Critical Options: (none)
        Extensions: (none)

3.5.4 Configuring FTP

Procedure

You can enable an FTP server for one or more network-instances on the SR Linux device so that users can
transfer files to and from the device. The SR Linux uses the vsftpd (very secure FTP daemon) application
within the underlying Linux OS. The authenticated user's home directory returned by the aaa_mgr
application is set as the user's FTP root directory.

Example

In the following example, the FTP server is enabled in the mgmt and default network-instance,
specifying the IP addresses where the device listens for FTP connections:

--{ candidate shared default }--[  ]--
# info system ftp-server
    system {
        ftp-server {
            network-instance mgmt {
                admin-state enable
                source-address [
                    192.0.2.1 
                ]
            }
            network-instance default {
                admin-state enable
                source-address [
                   192.0.2.4 
                ]
            }
        }
    }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

24

 
 
 
 
Configuration Basics Guide Release 24.7

System management

3.6 Configuring banners

Procedure

You can specify banner text that appears when a user connects to the SR Linux device. The following
banners can be configured:

•

login banner – displayed before a user has been authenticated by the system (for example, at the SSH
login prompt)

• message of the day (motd) banner – displayed after the user has been authenticated by the system

The banners appear regardless of the method used to connect to the SR Linux, so they are displayed to
users connecting via SSH, console, and so on.

Example

In the following example, login and motd banners are configured. The login banner text appears at
the prompt when a user attempts to log into the system, and the motd banner text appears after the
user has been authenticated.

--{ candidate shared default }--[  ]--
# info system banner
    system {
        banner {
            login-banner "Enter your SR Linux login credentials."
            motd-banner "Welcome to the SR Linux CLI. Your activity may be monitored."
        }
    }

3.7 Synchronizing the system clock

Procedure

Network Time Protocol (NTP) is used to synchronize the system clock to a time reference. You can
configure NTP settings on the SR Linux device using the CLl, and the SR Linux linux_mgr application
provisions the settings in the underlying Linux OS.

NTP does not account for time zones, instead relying on the host to perform such computations. Time
zones on the SR Linux device are based on the IANA tz database, which is implemented by the underlying
Linux OS. You can specify the time zone of the SR Linux device using the CLI. The NTP server used in the
system NTP client configuration can be IP address-based or hostname-based.

Example: Enabling an NTP client with an IP address-based NTP server

The following example enables the NTP client on the SR Linux device and sets an IP address-based
NTP server for clock synchronization. The NTP client runs in the mgmt network-instance. The system
time zone is set to America/Los_Angeles.

The example uses an IP address for the NTP server.

--{ candidate shared default }--[  ]--
# info system ntp
    system {
        ntp {

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

25

 
 
 
 
Configuration Basics Guide Release 24.7

System management

            admin-state enable
            network-instance mgmt
            server 4.53.160.75 {
            }
        }
    }

Example: Enabling an NTP client with a hostname-based NTP server

The following example enables the NTP client on the SR Linux device and sets a hostname-based
NTP server for clock synchronization.

--{ candidate shared default }--[  ]--
# info system ntp
    system {
        ntp {
            admin-state enable
            network-instance mgmt
            server srlinux.nokia.com {
            }
        }
    }

For the hostname support to work,

• DNS configuration is mandatory for this to function correctly. A missing configuration does not

prevent configuration; however, the NTP session to that server can only become active when DNS
is functioning correctly.

• The network-instance of the NTP server and DNS must be the same.

3.8 Configuring preferred source address for NTP requests

Procedure

SR Linux allows you to specify the preferred source address when acting as an NTP client in a network-
instance with multiple possible source addresses. The specified source IP address must belong to the
network instance where NTP is configured. You can configure the preferred source-address parameter
as either an IPv4 or IPv6 address under system.ntp.

In this example, NTP requests are sent to the configured NTP servers using the source address of
4.53.160.75.

Example

In this example, NTP requests are sent to the configured NTP servers using the source address of
4.53.160.75.

--{ candidate shared default }--[  ]--
# info system ntp
    system {
        ntp {
            network-instance mgmt
            source-address 4.53.160.75
            server 129.6.15.28 {
            }
            server 216.239.35.0 {
            }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

26

 
 
 
 
Configuration Basics Guide Release 24.7

System management

        }
    }

3.9 Configuring SNMP

Procedure

To configure SNMP, enable an SNMP server on one or more network-instances. The SR Linux device
supports SNMPv2. The MIB file that covers these OIDs is packaged with each release.

See the SR Linux System Management Guide for the procedure for configuring an SNMP server.

3.10 IP ECMP Load Balancing

Equal-Cost Multipath Protocol (ECMP) refers to the distribution of packets over two or more outgoing links
that share the same routing cost. Static, IS-IS, OSPF, and BGP routes to IPv4 and IPv6 destinations can
be programmed into the datapath by their respective applications, with multiple IP ECMP next hops.

The SR Linux device load-balances traffic over multiple equal-cost links with a hashing algorithm that
uses header fields from incoming packets to calculate which link to use. When an IPv4 or IPv6 packet is
received on a subinterface, and it matches a route with a number of IP ECMP next hops, the next hop
that forwards the packet is selected based on a computation using this hashing algorithm. The goal of the
hash computation is to keep packets in the same flow on the same network path, while distributing traffic
proportionally across the ECMP next hops, so that each of the N ECMP next hops carries approximately
1/Nth of the load.

The hash computation takes various key and packet header field values as inputs and returns a value that
indicates the next hop. The key and field values that can be used by the hash computation depend on the
platform, packet type, and configuration options, as follows:

On 7250 IXR systems, the following can be used in the hash computation:

• Hash-seed (0 to 65535), which can be system-generated (the default) or user-specified. If the hash-
seed is system-generated, SR Linux generates a hash-seed using the least-significant 16 bits of the
base chassis MAC address.

• For IPv4 TCP/UDP non-fragmented packets: source IPv4 address, destination IPv4 address, IP

protocol, Layer 4 source port, Layer 4 destination port. The algorithm is asymmetric; that is, inverting
source and destination pairs does not produce the same result.

• For IPv6 TCP/UDP non-fragmented packets: source IPv6 address, destination IPv6 address, IPv6 flow
label (even if it is 0), IP protocol (IPv6 next-header value in the last extension header), Layer 4 source
port, Layer 4 destination port. The algorithm is symmetric; that is, inverting source and destination pairs
produces the same result.

• For all other packets: source IPv4 or IPv6 address, destination IPv4 or IPv6 address.

On 7220 IXR-D1, D2, D3 and 7220 IXR-H2 and H3 systems, the following can be used in the hash
computation:

• Hash-seed (0 to 65535), which can be system-generated (the default) or user-specified. If the hash-
seed is system-generated SR Linux generates a hash-seed using the least-significant 16 bits of the
base chassis MAC address.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

27

 
 
 
 
Configuration Basics Guide Release 24.7

System management

• For IPv4 TCP/UDP non-fragmented packets: VLAN ID, source IPv4 address, destination IPv4 address,

IP protocol, Layer 4 source port, Layer 4 destination port. The algorithm is asymmetric.

• For IPv6 TCP/UDP non-fragmented packets: VLAN ID, source IPv6 address, destination IPv6 address,

IPv6 flow label (even if it is 0), IP protocol (IPv6 next-header value in the last extension header), Layer 4
source port, Layer 4 destination port.

• For all other packets: source IPv4 or IPv6 address, destination IPv4 or IPv6 address.

Note:
To avoid polarization effects, ensure that directly connected nodes have unique hash-seeds. You
can do this by explicitly configuring the hash-seeds, or by checking the state value of system-
generated hash-seeds.

3.10.1 Configuring IP ECMP load balancing

Procedure

To configure IP ECMP load balancing, you specify hash-options that are used as input fields for the hash
calculation, which determines the next hop for packets matching routes with multiple ECMP hops.

Example

The following example configures hash options for IP ECMP load balancing, including a hash-seed
and packet header field values to be used in the hash computation.

--{ * candidate shared default }--[  ]--
# info system load-balancing
    system {
        load-balancing {
            hash-options {
                hash-seed 128
                ipv6-flow-label false
            }
        }
    }

If no value is configured for the hash-seed, the default is for the system to generate a hash-seed
using the least-significant 16 bits of the base chassis MAC address. If a hash-option is not specifically
configured either true or false, the default for the hash option is true.

On 7250 IXR systems, if source-address is configured as a hash option, the destination-address
must also be configured as a hash option. Similarly, if source-port is configured as a hash option, the
destination-port must also be configured as a hash option.

3.11 Powering down the system

About this task

The SR Linux device does not feature a power switch. If you need to power down the device, use the
following procedure.

Procedure

Step 1. Enter the CLI command to reboot the system.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

28

 
 
 
 
Configuration Basics Guide Release 24.7

System management

Example

# tools platform chassis reboot

Step 2. When the GRUB menu appears, remove the power cables from the PSUs.

3.12 Configuring reboot options

You can perform a reboot using the command .tools.platform.<component>{.slot} in CLI. The
reboot command is supported for all platform components, namely chassis, control (active/standby), fabric,
and linecard slots.

This command triggers an immediate reboot.

•

•

•

•

chassis: tools platform chassis reboot

control slot: tools platform control <slot> reboot

fabric slot: tools platform fabric <slot> reboot

linecard slot: tools platform linecard <slot> reboot

You can use the following options with the reboot command. These options are platform-specific.

• delay

•

•

cancel

force

• message

• warm

3.12.1 delay

You can use the delay option to set a wait time before rebooting. The delay period required is configured in
seconds. During this period, you can cancel any pending reboot operations.

Note: When a delayed reboot is pending for either a chassis or an active control component,
setting a wait time to delay the reboot of any other component (linecard, standby control, or fabric
slot) is not supported.

•

chassis: tools platform chassis reboot delay <value>

# tools platform chassis reboot delay 2
/platform:
 chassis will reboot in 2 seconds

•

•

•

control slot: tools platform control <slot> reboot delay <value>

fabric slot: tools platform fabric <slot> reboot delay <value>

linecard slot: tools platform linecard <slot> reboot delay <value>

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

29

 
 
 
 
Configuration Basics Guide Release 24.7

System management

When doing a warm redundancy CPM switchover, any pending delayed reboot of active or standby control
card is discarded. The command .tools.platform.redundancy.switchover is not impacted by any
pending delayed reboots.

3.12.2 cancel

You can use the cancel option to cancel any pending reboot on a platform component. When there are no
pending delayed reboots, the reboot cancel command execution fails.

•

chassis: tools platform chassis reboot delay cancel

# tools platform chassis reboot cancel
The chassis reboot has been canceled
/platform:
    chassis reboot has been canceled

•

•

•

control slot: tools platform control <slot> reboot cancel

fabric slot: tools platform fabric <slot> reboot cancel

linecard slot: tools platform linecard <slot> reboot cancel

Note: You cannot combine the cancel option with force or delay options.

3.12.3 force

You can use the force option to trigger a force reboot of a platform component. This option is supported
only for the chassis and control slots. The force option overrides all synchronization activities, and any soft
checks that prevent a reboot (for example, the unsaved configuration between running and startup) are
ignored.

Caution: Forcing a reboot immediately after an image change may result in a standby module
booting an older image.

•

•

chassis: tools platform chassis reboot force

control slot: tools platform control <slot> reboot force

3.12.4 message

You can use the message option to broadcast a user-defined message to other users before the reboot
occurs. The message option can be used with reboot types of immediate, cancel, or delay.

•

chassis: tools platform chassis reboot message <value>

#  tools platform chassis reboot message "This is a message" 
 chassis is rebooting now: "This is a message"

•

•

control slot: tools platform control <slot> reboot message <value>

fabric slot: tools platform fabric <slot> reboot message <value>

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

30

 
 
 
 
Configuration Basics Guide Release 24.7

System management

•

linecard slot: tools platform linecard <slot> reboot message <value>

The following examples demonstrate different reboot scenarios with the message option:

•

Immediate reboot with the message option.

# tools platform chassis reboot message "this is a message"
 chassis is rebooting now: "this is a message"

A message indicating the initiation of an immediate reboot is broadcast to all users only if the immediate
reboot command is executed with the message option.

• Delayed reboot with the message option.

# tools platform control A reboot delay 100 message "this is a message"
 control slot A is rebooting in 100 seconds (at 2023-01-24T01:45:20.556Z): "this is a
 message"
/platform/control[slot=A]:
    control slot A will reboot in 100 seconds

A message indicating the reboot delay is broadcast to all users only if the reboot delay command is
executed with the message option.

• When a pending delayed reboot is executed for an active control card or the chassis, the user-defined

message is broadcast, and the prompt is also updated accordingly.

# tools platform control A reboot delay 3600 message "control reboot message"
/platform/control[slot=A]:
 control slot A will reboot in 3600 seconds
 --{ [ACTIVE CONTROL REBOOT IN 3599 SECONDS (control reboot message)] running }--[ ]--

# tools platform chassis reboot delay 3600 message "reboot message"
/platform:
 chassis will reboot in 3600 seconds
 --{ [SYSTEM REBOOT IN 3599 SECONDS (reboot message)] running }--[ ]--

• Canceling a delayed reboot with the message option.

#tools platform linecard 1 reboot cancel message "this is a cancel message"
 linecard slot 1 reboot has been canceled: "this is a cancel message"
/platform/linecard[slot=1]:
 linecard slot 1 reboot has been canceled

The preceding command cancels all the pending delayed reboots and broadcasts the user-defined
message. A message indicating the reboot cancel is broadcast to all users only if the reboot cancel
command is executed with the message option.

• When a delayed reboot time expires and the reboot is about to happen, the following message is

broadcast:

chassis: chassis is rebooting now
control: control slot <A or B> is rebooting now
linecard: linecard slot <x> is rebooting now
fabric: fabric slot <x> is rebooting now

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

31

 
 
 
 
Configuration Basics Guide Release 24.7

System management

Note: This message is broadcast irrespective of executing the reboot delay command with or
without the message option.

• When a delayed reboot fails, the following message is broadcast:

chassis: chassis reboot failed: "<reason for failure>"
control: control slot <A or B> reboot failed: "<reason for failure>"
linecard: linecard slot <x> reboot failed: "<reason for failure>"
fabric: fabric slot <x> reboot failed: "<reason for failure>"

Note: This message is broadcast irrespective of executing the reboot delay command with or
without the message option.

• When a delayed reboot is pending for a component, and a reboot (delay or immediate) is attempted for

a chassis or active control, the reboot gets rejected with the following message:

chassis: disallowed, delayed reboot is pending for linecard slot 1
active control slot A: disallowed, delayed reboot is pending for linecard slot 1

This example shows a reboot attempted on a linecard when control A is active.

Note:  The error message lists only the first found component with a delayed reboot pending.
In this example, if all linecards <1 to 4> are pending delayed reboots, the error message
highlights only the pending reboot for linecard1.

• When a delayed reboot is pending for a chassis or active control, and a reboot (delay or immediate) is
attempted for any other platform component, the reboot gets rejected with the following error message.

This example shows a reboot attempted on a fabric slot when a reboot is pending for the active control
module A.

fabric slot <x>: disallowed, delayed reboot is pending for control slot A

This example shows a reboot attempted on a fabric slot when reboot is pending for chassis component.

fabric slot <x>: disallowed, delayed reboot is pending for chassis

• While a delayed reboot is pending for a component, and a reboot (delay or immediate) is attempted

for the same platform component, the reboot gets rejected with a message indicating that the pending
delayed reboot must first be cancelled.

• When the wait time specified for the reboot delay exceeds the maximum delay limit, the delayed reboot

command gets executed and the following message is displayed:

# tools platform linecard 1 reboot delay 18446744073709551615
/platform/linecard[slot=1]:
 delay has been limited to 16772217903 seconds
 /platform/linecard[slot=1]:
 linecard slot 1 will reboot in 16772217903 seconds

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

32

 
 
 
 
Configuration Basics Guide Release 24.7

System management

3.12.5 warm

When you execute the reboot command with the warm option, it validates the current configuration and
prompts reboot confirmation. On confirming, the system reboots without impacting the datapath. If a warm
reboot is performed after a new image is configured, the system upgrades to the new image.

Before performing a warm reboot, you must confirm if the current SR Linux configuration and state
supports warm reboot. Use the tools platform chassis reboot warm validate command.

--{ running }--[  ]--
A:# tools platform chassis reboot warm validate
/platform:
    Warm reboot validate requested
 /:
    Success

If the validation is successful, proceed with the warm reboot.

If the validation is unsuccessful, or if an attempt to perform a warm reboot fails, you can force the warm
reboot using the additional force option.

Caution: Forcing a warm reboot may result in a service outage. The force option overrides any
warnings, such as peers that are not configured or peers that do not support graceful restart.

--{ running }--[  ]--
A:# tools platform chassis reboot warm force
/platform:
    Warm reboot force requested

/:
    Success

See the “Configuration state support” section in the SR Linux Software Installation Guide for information
about how to use warm reboot during an ISSU.

3.13 Non-stop forwarding

Non-stop forwarding, or NSF, is the sequence of processes required to effectively switch control of a
running system between two supervisors or CPMs (active/standby), without disrupting the data forwarding.
It allows the router to continue forwarding data with previously known route/state information, while the
control plane restarts and re-converges.

Similar to system warm reboot, NSF depends on graceful restart helpers, but it is primarily used for
unplanned outage (for example, control plane failover) and cannot be used for upgrades.

During an NSF switchover, no control plane or management plane functions are available, including
refreshing of neighbors, and slow path functions like DHCP relay and responding to ARP/ND.

In SR Linux, NSF leverages application warm restart, with the fundamental design to synchronize the IDB
server (idb_server) with the standby CPM (supervisor), and to allow applications to leave their state
information in IDB during the restart, then recover it after the restart. For more information, see Triggering
redundancy switchover and Forcing redundancy synchronization.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

33

 
 
 
 
 
Configuration Basics Guide Release 24.7

System management

Note:
Currently, the NSF feature is supported only for 7250 IXR-6/10/6e/10e and 7250 IXR-X platforms.

NSF features and limitations

NSF is supported with the following feature set:

• Supports ACL, IPv4, and IPv6

• Supports complete QoS feature set including queue configuration, classifiers, ECN with counters

cleared.

• Supports IPv4/IPv6 routing.

• Supports BGP with IPv4/IPv6-unicast address families, where all neighboring devices support graceful

restart helper.

Note: Peers who do not support graceful restart withdraw routes during outages, impacting
the data path for traffic destined for the system undergoing NSF. However, NSF must be
attempted for any peers that support graceful restart helper.

• Supports IS-IS with IPv4/IPv6-unicast address families, where all neighboring devices support graceful

restart helper.

Note: Peers who do not support graceful restart withdraw routes during outages, impacting
the data path for traffic destined for the system undergoing NSF. However, NSF must be
attempted for any peers that support graceful restart helper.

• Supports LAG and LACP with both slow and fast timers.

• Supports P4RT

• Supports gRIBI. During NSF, though management plane functions are unavailable, gRIBI programmed

routes are persisted.

• Supports sFlow on slow path.

• Supports LLDP.

Note: In case of session time out, adjacency loss may occur.

3.13.1 Triggering redundancy switchover

Procedure

Use the command tools platform redundancy switchover to trigger a redundancy switchover
from active to the standby control module. The switchover happens in conjunction with a cold restart.

Example

To trigger redundancy switchover:

--{ running }--[  ]--
# tools platform redundancy switchover

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

34

 
 
 
 
Configuration Basics Guide Release 24.7

System management

The NSF implementation changes the default behavior of this command execution. Upon NSF
implementation, when a redundancy switch over is triggered, the system always attempts to perform
a NSF failover in conjunction with a warm restart.

Note: The command tools platform redundancy switchover is not impacted by
any pending delayed reboots.

3.13.2 Forcing redundancy synchronization

Procedure

You can use the tools platform redundancy synchronize overlay system to synchronize the overlay file
system or system-required data between the active and standby control modules. The NSF implementation
extends this behavior by including the synchronization of file system and IDB server info between the
modules.

Example

To synchronize, use the following command:

--{ running }--[  ]--
# tools platform redundancy synchronize overlay system

3.14 VRRP

Virtual Router Redundancy Protocol (VRRP) describes a method of implementing a redundant IP interface
shared between two or more routers on a common LAN segment, allowing a group of routers to function
as one virtual router. When this IP interface is specified as a default gateway on hosts directly attached to
a shared broadcast domain, the routers sharing the IP interface prevent a single point of failure by limiting
access to this gateway address.

The VRRP for IPv4 is defined in the IETF RFC 3768, Virtual Router Redundancy Protocol. VRRP version 3
for both IPv4 and IPv6 is defined in RFC 5798.

VRRP election process

VRRP routers use VRRP advertisement messages to communicate. These messages include a VRRP
priority value. The router with the highest configurable priority value becomes the active VRRP router and
assumes control of the virtual IP address for the VRRP instance. If multiple routers have the same value,
the router with the highest IP address becomes the active VRRP router.

If the active router fails to send advertisements within a certain time frame, a new election occurs, and the
highest priority backup router becomes the active router.

3.14.1 Configuring VRRP

About this task

To configure VRRP within an IP subinterface context, you must configure a virtual router ID using the vrrp-
group command. To specify the IP address for the associated virtual router, configure the virtual-address
parameter.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

35

 
 
 
 
Configuration Basics Guide Release 24.7

System management

The following list outlines key optional parameters:

• priority – configures VRRP router priority to a specific value

• advertise-interval – configures VRRP message frequency

• preempt – controls whether a new VRRP router with a preferred VRRP priority can assume the role of

the active VRRP

• authentication – configures authentication for VRRP messages

The following example shows a sample VRRP (V4 and V6) instance configuration.

Example

--{ + candidate shared default }--[ interface ethernet-1/4 ]--
#  info
    admin-state enable
    vlan-tagging true
    ethernet {
        port-speed 40G
    }
    subinterface 1 {
        admin-state enable
        ipv4 {
            admin-state enable
            address 10.1.1.1/24 {
                vrrp {
                    vrrp-group 1 {
                        admin-state enable
                        priority 110
                        preempt true
                        accept-mode true
                        virtual-address [
                            10.1.1.100
                        ]
                    }
                }
            }
            address 10.1.2.1/24 {
                vrrp {
                    vrrp-group 2 {
                        admin-state enable
                        priority 110
                        preempt true
                        accept-mode true
                        virtual-address [
                            10.1.2.100
                        ]
                    }
                }
            }
            address 10.1.3.1/24 {
                vrrp {
                    vrrp-group 3 {
                        admin-state enable
                        priority 110
                        preempt true
                        accept-mode true
                        virtual-address [
                            10.1.3.100
                        ]
                    }
                }
            }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

36

 
 
 
 
Configuration Basics Guide Release 24.7

System management

        }
        ipv6 {
            address 2001:db8:10:1:1::1/64 {
                vrrp {
                    vrrp-group 1 {
                        admin-state enable
                        priority 110
                        preempt true
                        accept-mode true
                        virtual-address [
                            2001:db8:10:1:1::100
                        ]
                    }
                }
            }
        }
        vlan {
            encap {
                single-tagged {
                    vlan-id 1
                }
            }
        }
    }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

37

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

4 Configuration management

This chapter describes concepts for managing the SR Linux configuration, including configuration
datastores, modes, and how to commit changes to the running configuration.

4.1 Default configuration

At startup, the SR Linux loads a JSON configuration file, located at /etc/opt/srlinux/config.json.
If this startup configuration does not exist, the system is started using a factory default configuration.

The factory default configuration brings the device into management, enables DHCP/v6 on the
management interface, adds it to the management network-instance, enables an SSH server, creates
various system logs, and applies a default set of CPM filters.

You can optionally create a rescue configuration, which is loaded if the startup configuration fails to load
(see Rescue configuration). If the startup configuration fails to load, and no rescue configuration exists, the
system is started using the factory default configuration.

4.2 Configuration datastores

Configuration and state information reside in datastores on the SR Linux device. The following datastores
are available:

•

running

The running datastore contains the currently active configuration.

• state

The state datastore contains the running configuration, plus dynamically added data such as the
operational state of interfaces or BGP peers added via auto-discovery, as well as session states and
routing tables.

• candidate

The candidate datastore contains a user-configurable version of the running datastore. After it has been
committed, the candidate datastore becomes the running datastore.

•

tools

The tools datastore contains executable commands that allow you to perform operations such as
restarting the device and clearing interface statistics.

In the CLI, you can use the info command to display information from a datastore. For example, entering
the info from state command (or entering the info command in state mode) displays configuration and
statistics from the state datastore for the current context, and entering the info from running command (or
the info command in running mode) displays the configuration from the running datastore for the current
context.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

38

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

4.3 Configuration modes

The candidate datastore corresponds to a configuration mode within the SR Linux CLI. In candidate mode,
you can modify the SR Linux configuration settings.

By default, candidate mode operates in shared mode, which allows multiple users to modify the candidate
configuration concurrently. When the configuration is committed in shared mode, all of the users’ changes
are applied.

You can optionally use candidate mode in exclusive mode, which locks out all other users from making
changes to the candidate configuration.

4.3.1 Configuration candidates

When a user enters candidate mode, the system creates two copies of the running datastore: one is
modifiable by the user and the other serves as a baseline. The modifiable datastore and the baseline
datastore are collectively known as a configuration candidate.

A configuration candidate can be either shared or private.

• shared

The shared configuration candidate is the default for CLI sessions. Multiple users can modify the shared
candidate concurrently. When the configuration is committed, the changes from all of the users are
applied.

• private

The private configuration candidate is the default when using JSON-RPC or gNMI clients, and can
optionally be used in the CLI. With a private candidate, each user modifies their own separate instance
of the configuration candidate. When a user commits their changes, only the changes from that user are
committed.

By default, there is a single unnamed global configuration candidate. You can optionally configure one or
more named configuration candidates, which function identically to the global configuration candidate. Both
shared and private configuration candidates support named versions.

4.3.2 Setting the configuration mode

Procedure

After logging in to the CLI, you are initially placed in running mode. From running mode, you can change
to a configuration mode. Table 1: Commands to change configuration mode describes the commands to
change between modes.

Table 1: Commands to change configuration mode

To enter this mode:

Type this command:

Candidate shared

enter candidate

Candidate mode for named shared
candidate

enter candidate name <name>

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

39

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

To enter this mode:

Type this command:

Candidate private

enter candidate private

Candidate mode for named private
candidate

enter candidate private name <name>

Candidate exclusive

enter candidate exclusive

Exclusive mode for named candidate

enter candidate exclusive name <name>

Running

State

Show

enter running

enter state

enter show

Example: Change from running to candidate mode

--{ running }--[  ]--
# enter candidate
--{ * candidate shared default }--[  ]--

The asterisk (*) next to the mode name indicates that the candidate configuration has changes that
have not yet been committed.

Example: Enter candidate mode for a named configuration candidate

--{ running }--[  ]--
# enter candidate name cand1
--{ candidate shared cand1}--[  ]--

4.4 Committing a configuration in candidate mode

About this task

Changes made during a configuration modification session do not take effect until a commit command is
issued. Only use the commit command in candidate mode.

Procedure

Step 1. Enter candidate mode:

Example

# enter candidate

Step 2. Enter configuration commands.

Step 3. Enter the commit command:

• To apply the changes and remain in candidate mode, enter commit stay.

• To apply the changes, exit candidate mode, and enter running mode, enter commit now.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

40

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

• To apply the changes, remain in candidate mode, and save the changes to the startup

configuration, enter commit stay save.

• To apply a comment to a commit stay or save  operation, use the comment keyword and

specify a comment.

Example

# enter candidate
--{ candidate shared default }--[  ]--
# interface ethernet-1/1 subinterface 1
--{ * candidate shared default }--[ interface ethernet-1/1 subinterface 1 ]--
# commit stay
All changes have been committed. Starting new transaction.
--{ + candidate shared default }--[ interface ethernet-1/1 subinterface 1 ]--
# save startup
/system:
    Saved current running configuration as initial (startup) configuration '/etc/
opt/srlinux/config.json'
--{ candidate shared default }--[ interface ethernet-1/1 subinterface 1 ]--
#

In this example, a user enters candidate mode and creates a subinterface for interface
ethernet-1/1. The asterisk (*) next to candidate shared default in the prompt
indicates that the candidate configuration has changes that have not yet been committed. After
committing the changes with the commit stay command, the new subinterface becomes part of
the running configuration.

The plus sign (+) in the prompt indicates that the currently running configuration differs from the
startup configuration. The save startup command saves the running configuration to the startup
configuration.

4.4.1 Confirming a commit operation

Procedure

You can optionally configure the SR Linux to require explicit confirmation via a tools command for the
configuration changes from a commit operation to become permanent. If the new configuration is not
confirmed after a timeout period, the running datastore reverts to the previous version.

Example: Commit the configuration and start the confirmation timer

After entering configuration commands in candidate mode, use the following command to commit the
configuration and start the confirmation timer:

--{ candidate shared default }--[  ]--
# commit confirmed

The commit confirmed command applies the changes to the running datastore and activates them.
If the configuration is committed successfully, the confirmation timer is started (default 10 minutes).
If you do not confirm the commit operation before the timer expires, the configuration reverts to the
previous version.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

41

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

Example: Confirm the commit operation and make the configuration changes permanent

To confirm the commit operation and make the configuration changes permanent, enter the following
command before the confirmation timer expires:

--{ candidate shared default }--[  ]--
# tools system configuration confirmed-accept

Example: Revert to the previous configuration

To revert to the previous configuration without waiting for the confirmation timer to expire, enter the
following command:

--{ candidate shared default }--[  ]--
# tools system configuration confirmed-reject

4.4.2 Validating a commit operation

Procedure

You can optionally validate the configuration changes made during a commit operation before they are
applied to the running datastore. The SR Linux management server checks the syntax of the changes in
the candidate configuration and displays messages if validation errors are found.

Example

Use the following command to perform a validation check for configuration changes.

Note: This command only validates the changes; it does not apply them to the running
datastore.

--{ candidate shared default }--[  ]--
# commit validate

If syntax errors are found in the configuration changes, SR Linux displays error messages; if
validation is successful, no output is displayed.

4.4.3 Updating the baseline datastore

Procedure

A configuration candidate consists of a modifiable candidate datastore and a baseline datastore, both of
which are snapshots of the then-current running datastore when a user enters candidate mode.

During the lifetime of the configuration candidate, the running datastore can be modified via commits
initiated from other configuration sessions. At that point, the baseline in the configuration candidate is out-
of-date.

Updating the baseline datastore takes a new snapshot of the running configuration, applies the changes
in the candidate datastore, and checks for configuration conflicts in the updated baseline datastore. If
conflicts are found, the user is informed with a warning or error for each conflict.

A baseline datastore is updated automatically when the user commits the changes to the configuration or
can be updated manually with the baseline update command.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

42

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

Example

In the following example, the baseline datastore in a configuration candidate is out of date, as
indicated by the exclamation mark (!) in the prompt. This indicates that another user has committed
changes to the running datastore.

Entering the baseline update command copies the current running datastore to the baseline
datastore, applies the changes in the candidate datastore, then displays any conflicts in the updated
baseline datastore. If there are no conflicts, no output is returned by the command.

--{!* candidate shared default }--[  ]--
# baseline update
--{* candidate shared default }--[  ]--
# 

4.5 Deleting a configuration

Procedure

Use the delete command to delete configurations while in candidate mode.

Example

The following example displays the system banner configuration, deletes the configured banner, then
displays the resulting system banner configuration:

--{ candidate shared default }--[  ]--
# info system banner
    system {
        banner {
            login-banner "Welcome to SR Linux!"
        }
    }
--{ candidate shared default }--[  ]--
# delete system banner
--{ candidate shared default }--[  ]--
# info system banner
    system {
        banner {
        }
    }

4.6 Annotating the configuration

Procedure

To aid in reading a configuration, you can add comments or descriptive annotations. The annotations are
indicated by three exclamation marks (!!!) in displayed output.

You can enter a comment either directly from the command line or by navigating to a CLI context and
entering the comment in annotate mode.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

43

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

Example: Add a comment to a configuration

The following example adds a comment to an ACL configuration. If there is already a comment in the
configuration, the new comment is appended to the existing comment.

--{ candidate shared default }--[  ]--
# acl acl-filter ip_tcp type ipv4 !! "Filter TCP traffic"

Example: Replace an existing comment

To replace the existing comment, use three exclamation marks (!!!) instead of two exclamation
marks (!!) in the command.

The following example adds the same comment to the ACL by navigating to the context for the ACL
and entering the comment in annotate mode:

--{ * candidate shared default }--[  ]--
# acl acl-filter ip_tcp type ipv4
--{ * candidate shared default }--[ acl acl-filter ip_tcp type ipv4 ]--
# annotate
Press [Meta+enter] or [Esc] followed by [Enter] to finish
-> Filter TCP traffic

You can enter multiple lines in annotate mode. To exit annotate mode, press Esc, then press Enter.

Example: Display a comment in context

In CLI output, the comment is displayed in the context it was entered. For example:

--{ running }--[  ]--
# info acl
    acl {
        acl-filter ip_tcp type ipv4 {
            !!! Filter TCP traffic
            entry 1000 {
                description "Match IP Address TCP Protocol Ports"
                match {
                    ipv4 {
                        protocol tcp
                        destination-ip {
                            prefix 10.1.3.1/32
                        }
                        source-ip {
                            prefix 10.1.5.1/32
                        }
                    }
                    transport {
                        destination-port {
                            value 6789
                        }
                        source-port {
                            value 6722
                        }
                    }
                }
                action {
                    log true
                    accept {
                    }
                }
            }
        }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

44

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

    }

To remove a comment, enter annotate mode for the context and press Esc then Enter without
entering any text.

4.7 Discarding a configuration in candidate mode

Procedure

You can discard previously applied configurations with the discard command. Only use the discard
command in candidate mode.

• To discard the changes and remain in candidate mode with a new candidate session, enter discard

stay.

• To discard the changes, exit candidate mode, and enter running mode, enter discard now.

Example

All changes have been committed. Starting new transaction.

--{ candidate shared default }--[ interface ethernet-1/1 subinterface 1 ]--
# discard stay
--{ candidate shared default }--[ interface ethernet-1/1 subinterface 1 ]--

4.8 Displaying configuration details

Procedure

The info command displays configuration and state information. Entering the info command from the
root context displays the entire configuration or the configuration for a specified context. Entering the
command from within a context limits the display to the configuration under that context. Use this command
in candidate or running mode.

Example: Display the entire configuration

To display the entire configuration, enter info from the root context:

--{ candidate shared default }--[  ]--
# info
<all the configuration is displayed>
--{ candidate }--[  ]--

Example: Display the configuration for a specific context

To display the configuration for a specific context, enter info and specify the context:

--{ candidate shared default }--[  ]--
# info system lldp
    system {
        lldp {
            admin-state enable
            hello-timer 600
            management-address mgmt0.0 {

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

45

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

                type [
                    IPv4
                ]
            }
            interface mgmt0 {
                admin-state disable
            }
        }
    }
--{ candidate }--[  ]--

Example: Display the configuration within a context

From a context, use the info command to display the configuration under that context:

--{ candidate shared default }--[  ]--
# system lldp
--{ candidate }--[ system lldp ]--
# info
    admin-state enable
    hello-timer 600
    management-address mgmt0.0 {
        type [
            IPv4
        ]
    }
    interface mgmt0 {
        admin-state disable
    }
--{ candidate }--[ system lldp ]--

Example: Display the configuration as JSON-formatted output

Use the as json option to display JSON-formatted output:

--{ candidate }--[ system lldp ]--
# info | as json
{
  "admin-state": "enable",
  "hello-timer": "600",
  "management-address": [
    {
      "subinterface": "mgmt0.0",
      "type": [
        "IPv4"
      ]
    }
  ],
  "interface": [
    {
      "name": "mgmt0",
      "admin-state": "disable"
    }
  ]
}

Example: Display values of all parameters in the configuration

Use the detail option to display values for all parameters, including those not specifically configured:

--{ candidate }--[ system lldp ]--
# info detail

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

46

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

    admin-state enable
    hello-timer 600
    hold-multiplier 4
    management-address mgmt0.0 {
        type [
            IPv4
        ]
    }
    interface mgmt0 {
        admin-state disable
    }

Example: Display the configuration as set statements

Use the flat option to display the output as a series of set statements, omitting indentation for any
sub-contexts:

--{ candidate }--[ system lldp ]--
# info flat
set / system lldp admin-state enable
set / system lldp hello-timer 600
set / system lldp management-address mgmt0.0
set / system lldp management-address mgmt0.0 type [ IPv4 ]
set / system lldp interface mgmt0
set / system lldp interface mgmt0 admin-state disable

Example: Display a specified number of sub-context levels

Use the depth option to display parameters with a specified number of sub-context levels:

--{ candidate }--[ system lldp ]--
# info depth 0
    admin-state enable
    hello-timer 600

--{ candidate }--[ system lldp ]--
# info depth 1
    admin-state enable
    hello-timer 600
    management-address mgmt0.0 {
        type [
            IPv4
        ]
    }
    interface mgmt0 {
        admin-state disable
    }

4.9 Displaying the configuration state

Procedure

To display information from the state datastore, enter the info from state command in candidate mode,
running mode, or the info command in state mode.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

47

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

Example: Display state information for a specified context from candidate or running
mode

--{ candidate shared default }--[  ]--
# info from state routing-policy policy bgp-export-policy
    routing-policy {
        policy bgp-export-policy {
            statement 999 {
                action {
                    accept {
                    }
                }
            }
        }
    }

Example: Display state information for a specified context from state mode

--{ candidate shared default }--[  ]--
# enter state
--{ state }--[  ]--
# info routing-policy policy bgp-export-policy
    routing-policy {
        policy bgp-export-policy {
            statement 999 {
                action {
                    accept {
                    }
                }
            }
        }
    }
--{ state }--[  ]--

Example: Change to a different mode while remaining in the previous context

You can change to a different mode (for example, from state mode to candidate mode) and remain in
the previous context. For example:

--{ candidate shared default }--[  ]--
# enter state
--{ state }--[  ]--
# routing-policy policy bgp-export-policy
--{ state }--[ routing-policy policy bgp-export-policy ]--
# info
    statement 999 {
        action {
            accept {
            }
        }
    }
--{ state }--[ routing-policy policy bgp-export-policy ]--
# enter candidate
--{ candidate shared default }--[ routing-policy policy bgp-export-policy ]--

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

48

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

4.10 Saving a configuration to a file

Procedure

Save the existing configuration to a file using the save command. Use this command in candidate or
running mode.

Example: Save the running configuration to a file

--{ running }--[  ]--
# save file running-config.txt text from running
/ running configuration has been stored in 'running-config.txt'
--{ running }--[  ]--

Example: Save the running configuration to a JSON-formatted file

--{ running }--[  ]--
# save file running-config.json from running
/ running configuration has been stored in 'running-config.json'
--{ running }--[  ]--

Example: Save the running configuration to the initial (startup) configuration

--{ + running }--[  ]--
# save startup
/ running configuration has been stored in '/etc/opt/srlinux/config.json'
--{ running }--[  ]--

The plus sign (+) in the prompt indicates that the running configuration differs from the startup
configuration. After you enter the save startup command, the running configuration is synchronized
with the startup configuration, and the plus sign is removed from the prompt.

4.11 Loading a configuration

Procedure

Use the load command to load a configuration. The configuration can be from a checkpoint (see
Configuration checkpoints), a JSON-formatted configuration file, the startup configuration, the factory
default configuration, a rescue configuration (see Rescue configuration), or from manually entered or
pasted JSON-formatted input.

Example: Load a configuration from a checkpoint

--{ * candidate shared default }--[  ]--
# load checkpoint id 0
/system/configuration/checkpoint[id=0]:
    Loaded checkpoint '/etc/opt/srlinux/checkpoint/checkpoint-0.json'

Example: Load a configuration from a file

--{ * candidate shared default }--[  ]--
# load file home/config.txt

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

49

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

Loading configuration from 'home/config.txt'

Example: Load a rescue JSON configuration from a checkpoint

--{ * candidate shared default }--[  ]--
# load rescue auto-commit
/system/configuration/checkpoint[id=__rescue__]:
    Reverting to rescue configuration

Example: Load a configuration from manually entered JSON-formatted input

--{ * candidate shared default }--[  ]--
# system banner
--{ * candidate shared default }--[ system banner ]--
# load json
Press [Meta+enter] or [Esc] followed by [Enter] to finish
<< {
<<   "login-banner": "Welcome to SR Linux!"
<< }

You can enter or paste multiple lines at the << prompt in JSON-input mode. To exit JSON-input
mode, press Esc, then press Enter.

4.12 Executing configuration statements from a file

Procedure

You can execute configuration statements from a source file consisting of set statements such as those
generated by the info flat command (see Displaying configuration details). SR Linux reads the file
and executes each configuration statement line-by-line. You can optionally commit the configuration
automatically after the file is read.

Example

The following example executes a configuration from a specified file:

--{ running }--[  ]--
# source config.cfg
Sourcing commands from 'config.cfg'
Executed 20 lines in 1.6541 seconds from file config.cfg

Use the auto-commit option to commit the configuration after the commands in the source file are
executed.

4.13 Configuration checkpoints

You can roll back the configuration to a previous state, known as a checkpoint. You can load a saved
checkpoint into the candidate configuration and revert the running configuration to a previously saved
checkpoint.

A checkpoint is saved as a JSON-formatted file containing the complete configuration for the system. If a
checkpoint file is larger than 1 Mb, it is compressed and saved in GZIP format. Checkpoint files are saved

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

50

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

in the /etc/opt/srlinux/checkpoint directory. They are named checkpoint-<number>.json (for
example, checkpoint-0.json) or checkpoint-<number>.json.gz, with the lowest number being
the most recently saved checkpoint.

By default, the 10 most recent checkpoints are saved; you can configure the maximum number of
checkpoint files that are kept by the system.

4.13.1 Generating a checkpoint

Procedure

You can generate a checkpoint with a tools command or with the save checkpoint command. You can
optionally configure the system to generate a checkpoint automatically when a configuration is committed.

Example: Generate a checkpoint from the current configuration

--{ !* candidate shared default }--[  ]--
# tools system configuration generate-checkpoint
/system:
    Generated checkpoint '/etc/opt/srlinux/checkpoint/checkpoint-
0.json' with name 'checkpoint-2020-10-20T23:14:12.703Z' and comment ''

You can optionally configure a name or comment for a checkpoint; for example:

--{ !* candidate shared default }--[  ]--
# save checkpoint comment My-checkpoint
/system:
    Generated checkpoint '/etc/opt/srlinux/checkpoint/checkpoint-
0.json' with name 'checkpoint-2020-10-20T23:23:25.891Z' and comment 'My-checkpoint'

Example: Generate a checkpoint automatically

The following example configures the system to generate a checkpoint automatically whenever a
configuration is committed:

--{ !* candidate shared default }--[  ]--
# info system configuration
    system {
        configuration {
            auto-checkpoint true
            }
        }
    }

For automatically generated checkpoints, the comment is set to automatic checkpoint after
commit <n>, where <n> is the ID of the commit that triggered the checkpoint.

4.13.2 Loading a checkpoint

Procedure

To load a checkpoint, enter candidate mode and specify the checkpoint to load.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

51

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

Example

The following example loads a checkpoint into the candidate configuration.

Note: You must be in candidate mode to load a checkpoint.

--{ * running }--[  ]--
# enter candidate
--{ * candidate shared default }--[  ]--
# tools system configuration checkpoint 0 load
/system/configuration/checkpoint[id=0]:
    Loaded checkpoint '/etc/opt/srlinux/checkpoint/checkpoint-0.json'

4.13.3 Reverting to a previous checkpoint

Procedure

You can revert the running configuration to a previous checkpoint. When used within a candidate session,
the revert operation loads the checkpoint, removing any present changes, then commits them and
establishes a new candidate session.

Example

The following example reverts the running configuration to a previously saved checkpoint:

--{ * running }--[  ]--
# enter candidate
--{ * candidate shared default }--[  ]--
# tools system configuration checkpoint 0 revert
/system/configuration/checkpoint[id=0]:
    Reverting to checkpoint 0 (name 'checkpoint-2019-10-14T18:47:30.282Z' 
comment 'Daily_checkpoint')
/:
    Successfully reverted configuration

4.13.4 Clearing a checkpoint

Procedure

You can clear checkpoints from the system manually with a tools command.

In addition, checkpoints can be cleared automatically when the number of saved checkpoints exceeds
the configured maximum. When the number of saved checkpoints exceeds the configured maximum, the
oldest checkpoint is removed, and the number of each remaining checkpoint is incremented by 1. If you
clear a checkpoint manually, the other checkpoints are not renumbered.

Example

The following example clears a previously saved checkpoint.

--{ * candidate shared default }--[  ]--
# tools system configuration checkpoint 2 clear
/system/configuration/checkpoint[id=2]:
    Cleared checkpoint '/etc/opt/srlinux/checkpoint/checkpoint-2.json'

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

52

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

4.13.5 Configuring maximum number of checkpoints

Procedure

By default, the 10 most recent checkpoints are saved; you can configure the maximum number of
checkpoint files that are kept by the system.

Example

The following example configures the system to keep a maximum of 15 checkpoint files.

--{ * candidate shared default }--[  ]--
# info system configuration
 system {
     configuration {
         max-checkpoints 15
         }
     }
 }

In this example, if 15 checkpoint files are being kept, adding a subsequent checkpoint file causes the
oldest checkpoint file to be deleted and the index for the remaining checkpoint files to be incremented
by 1.

4.13.6 Displaying checkpoint information

Procedure

Use the info from state command to display information about existing checkpoints.

Example

# info from state system configuration checkpoint 0
    system {
        configuration {
            checkpoint 0 {
                name checkpoint-2020-10-20T23:23:25.891Z
                comment cp002
                created 2020-10-20T23:23:25.894Z
                version v20.6.0
                username srlinux
                size 28494
            }
        }
    }

4.14 Rescue configuration

You can save a secondary rescue configuration to load in place of the default JSON configuration file.
The rescue configuration is a checkpoint file that is loaded automatically by the management server if the
default config.json file fails when the system starts.

If both the default configuration and rescue configuration files are missing or fail, a config.json file is
regenerated and committed from the factory config.json file that is compiled in the management server.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

53

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

4.14.1 Saving a rescue configuration

Procedure

You can save a rescue configuration to be loaded automatically if the default config.json file fails when
the system starts. Save the rescue configuration to a file with a tools command or using the save rescue
command. Use these commands in running mode. The system generates a rescue-config.json file
and saves it to the /etc/opt/srlinux/checkpoint directory.

Example: Save a rescue configuration

The following tools command saves a rescue configuration:

--{ running }--[ ]--
# tools system configuration rescue-save
/system:
    Saved current running configuration as rescue configuration '/etc/opt/srlinux/
checkpoint/rescue-config.json'

The following save rescue command also saves a rescue configuration:

--{ running }--[ ]--
# save rescue
/system:
  Saved current running configuration as rescue configuration '/etc/opt/srlinux/
checkpoint/rescue-config.json'

Example: List contents of the checkpoint directory

You can confirm the rescue configuration is saved by viewing the checkpoint directory. The following
example lists the checkpoint directory:

--{ running }--[ ]--
# file ls /etc/opt/srlinux/checkpoint
checkpoint-0.json
rescue-config.json

4.14.2 Clearing a rescue configuration

Procedure

To remove an existing rescue configuration, use the rescue-clear command to clear the configuration from
the /etc/opt/srlinux/checkpoint directory. Use this command in running mode. You can then save
a new rescue configuration to replace the cleared configuration.

Example

The following tools command clears a previously saved rescue configuration:

--{ running }--[ ]--
# tools system configuration rescue-clear
/system:
    Cleared rescue configuration '/etc/opt/srlinux/checkpoint/rescue-config.json'

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

54

 
 
 
 
Configuration Basics Guide Release 24.7

Configuration management

You can confirm the rescue configuration is cleared by viewing the checkpoint directory; for example:

--{ running }--[ ]--
# file ls /etc/opt/srlinux/checkpoint
checkpoint-0.json

4.15 Configuration upgrades

When the SR Linux is started following a software image upgrade, it reads the configuration in the startup
config.json file, makes any necessary changes to ensure compatibility with the new software image,
and places the upgraded configuration into the running configuration. This upgraded configuration is not
saved automatically; to save the contents of the running configuration, use the following commands:

• save startup – saves the running configuration to the startup configuration file, located at /etc/opt/

srlinux/config.json (or config.gz)

• save rescue – saves the running configuration to the rescue configuration file, located at /etc/opt/

srlinux/checkpoint/rescue-config.json (or rescue-config.gz)

• save checkpoint – saves the running configuration to a configuration checkpoint; for example, /etc/

opt/srlinux/checkpoint/checkpoint-0.json (or checkpoint-0.gz)

• save file <name> from running – saves the running configuration to the specified file in JSON format

4.15.1 Upgrading configuration files

Procedure

In addition to saving the upgraded running configuration to startup, rescue, and checkpoint configurations,
you can use tools commands to upgrade existing configuration files so they are compatible with the
current software version.

Example: Upgrade the startup configuration file

--{ running }--[ ]--
# tools system configuration upgrade startup

Example: Upgrade the rescue configuration file

--{ running }--[ ]--
# tools system configuration upgrade rescue

Example: Upgrade a configuration checkpoint file

--{ running }--[ ]--
# tools system configuration upgrade checkpoint 0

Example: Upgrade a specified JSON-formatted configuration file

--{ running }--[ ]--
# tools system configuration upgrade file /etc/opt/srlinux/configs/myconfig.json

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

55

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

5 Securing access

The SR Linux device is able to secure access to the device for users connecting via SSH or the console
port, as well as for applications and FTP access. Authentication can be performed for users configured
within the underlying Linux OS, and for administrative users configured within the SR Linux device itself.

Depending on the user type, users are authenticated locally on the device or through interaction with the
SR Linux aaa_mgr application and an authentication server group (for example, TACACS+ or RADIUS).

5.1 User types

The SR Linux supports three user types: Linux users, local users, and remote users. Each user type is
authenticated differently, as described in the following sections.

5.1.1 Linux users

Linux users are those configured in the underlying Linux OS, not in the SR Linux configuration. Information
about Linux users is stored in /etc/passwd in the underlying Linux OS.

By default, the SR Linux has a single Linux user, linuxadmin, who has access to sudo to root and can
run the SR Linux CLI with administrative permissions. The default password for the linuxadmin user
is NokiaSrl1!, which can be changed; see Configuring the password for the linuxadmin user. Nokia
recommends that you change this default user and password as soon as possible. Other Linux users can
be added with the useradd command in the underlying Linux OS.

Linux users with a UID less than 1500 are authenticated via the underlying Linux OS, not through the
SR Linux aaa_mgr application. This means that Linux users are not subject to authentication settings
configured within SR Linux, such as authentication by a TACACS+ server group, a RADIUS server group,
or password security for local users.

5.1.2 Local users

Local users are users configured within the SR Linux itself. By default, SR Linux supports a single local
user, named admin; other local users can be added as necessary.The default password for the admin
user is NokiaSrl1!, which you can change using the SR Linux CLI; see Configuring authentication for
local users. Nokia recommends that you change this default password as soon as possible.

Local users are authenticated via a gRPC interface to the aaa_mgr application. See Authentication for local
users for an example configuration.

5.1.3 Remote users

Remote users are users that are not configured either in /etc/passwd or within the SR Linux
configuration. Remote users are configured on a remote server, which is queried when the user attempts to
log in to the SR Linux device.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

56

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

5.2 AAA functions

The SR Linux performs authentication, authorization, and accounting (AAA) functions for each user type,
as described in the following sections.

5.2.1 Authentication

For Linux users, SR Linux authenticates via the authentication mechanism built into the underlying Linux
OS.

For local users, including the SR Linux admin user, the SR Linux uses its gRPC interface to the aaa_mgr
application for authentication. Authentication settings that apply to the local users, including a local
password and TACACS+ or RADIUS server group, can be configured. See Authentication for local users
for information about configuring local users.

For remote users, authentication is performed using the aaa_mgr application in coordination with the
remote system.

SR Linux supports yescrypt encryption in addition to the argon2 (ar2) and SHA512 (sha2) algorithms.
All local users who authenticate using plain text or hashed passwords, including the admin user, are
subject to these encryptions. By default, yescrypt encryption is used to secure clear-text passwords. See
Password hashing for local users.

For the linuxadmin user password, only the sha2 and yescrypt encryption options are supported. If
the ar2 encryption is selected, the password is hashed using yescrypt instead.

5.2.1.1 Superuser attribute for local users

SR Linux default admin user, and local users have a configurable superuser parameter setting under
.system.aaa.authentication.user. When configuring the superuser attribute, the local user
gains elevated permissions and is included in the /etc/sudoers file. The local user can now use the
bash plug-in and then sudo to run any command as the root user.

For information about configuring superuser attribute, see Configuring superuser attribute for local users.

5.2.1.2 Password security for local users

SR Linux supports password security features that apply to local users who authenticate using plain text or
hashed passwords. The settings are system-wide configurations that apply to all locally configured users
including, the admin and the linuxadmin user. The following password security features are supported:

• password complexity rules

Specifies rules that define the password requirements, including minimum and maximum length,
minimum lowercase and uppercase characters, minimum numeric and special characters, and whether
the password can include the user's full username or only the first three characters. The configuration
of password complexity rules applies only to new passwords entered as clear text, not to pre-existing or
pre-hashed ones.

• password aging

Specifies the number of days after which a password expires.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

57

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

Note:

– Users with aged out passwords are prompted to update their password at the next login to

the CLI. (This prompt only appears on the CLI.)

– SR Linux does not provide advanced warning to users that their password is about to

expire.

– Aged out passwords expire indefinitely. They are not controlled by the lockout policy

described below.

• password change on first login

Specifies whether local users must change their password on first login. The new password must match
the defined password complexity rules.

• password history

Specifies the number of previous user passwords SR Linux retains to prevent reuse of old passwords.

•

lockout policy

Specifies how many times a user can attempt a failed login within a defined period before they are
locked out (for example: three attempts within 1 minute). The policy also defines whether the user is
locked out indefinitely or only for a specified length of time.

5.2.1.3 Password hashing for local users

Password hashing is applied to all locally configured users, including the admin and the linuxadmin user.

SR Linux supports yescrypt encryption in addition to the argon2 (ar2) and SHA512 (sha2) algorithms.
You can choose to configure any of these supported methods.

The plain text user passwords are encrypted using the default hashing method yescrypt. When entering
a hashed password value, the system verifies whether the entered password is encrypted using one of
the supported algorithms. The system only commits changes if the password has been hashed using a
supported algorithm.

When you change the password, the system encrypts the password using the configured hash method.
See Configuring hash-method for local user passwords. The default hashing algorithm is yescrypt.

5.2.2 Authorization

The SR Linux implements authorization through role-based access control, where each authenticated
user is assigned one or more predefined roles that specify the functions the user is allowed to perform on
the system. If no role is configured for a user, then the user is assigned a role that allows access to CLI
plugins, but no other functions.

All user types, including the default local user admin, are authorized through role-based control on all
interfaces (CLI, gNMI, and JSON-RPC). However, the linuxadmin user is an exception and is granted
write access to all commands in the command tree. Role-based access control supports service and
CLI plug-in authorization. You can configure service authorization, which can limit the interface types for
which the functions in a role are authorized. CLI plug-in authorization gives you control over how operator-
provided plug-ins are loaded.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

58

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

You can configure the SR Linux to use information from a TACACS+ or RADIUS server to assign roles to
an authenticated user.

•

In TACACS+ authorization, the priv-lvl value in the Authorization REPLY packet received from the
TACACS+ server maps to a role configured on the SR Linux. The user is assigned the role that
corresponds to the priv-lvl value.

• RADIUS combines authentication and authorization. The RADIUS server authorizes the user by

applying a profile based on username and password configurations. The profiles are configured using
Vendor-Specific Attributes (VSAs) on the RADIUS server. The actions an authenticated user can
perform depend on the user profiles. Profiles consist of a suite of commands that the user is allowed or
not allowed to execute.

See Authorization using role-based access control for information about configuring roles for users.

5.2.2.1 Superuser role attribute for local users

Local users have a configurable superuser role setting under .system.aaa.authorization.role{}. You can
grant the sudo privileges to the individual users or groups, following the standard Linux semantics.

When a user has multiple roles with the superuser role setting enabled, the combined roles grant
superuser privileges.

A superuser inherits the following behaviors:

• When the superuser is a member of multiple roles, the superuser is authorized to access all services

specified in the assigned roles.

• When the superuser is not assigned any specific role, the superuser is authorized to access all

services.

Note: If a user has multiple roles and has no superuser role setting enabled, the user is
authorized only for the services specified in the assigned roles.

• A superuser can load all CLI plug-ins, provided the superuser is associated with a role that supports CLI

plug-in authorization.

• A superuser has an implicit role added that allows the user to write to the root directory (/).

• A superuser is added to the /etc/sudoers file and can use the bash plug-in and then sudo to run

any command as the root user.

For information about configuring the superuser role attribute, see Configuring superuser role for local
users.

5.2.3 Accounting

The SR Linux supports command accounting. Accounting records generated by the SR Linux include the
entire CLI string that a user enters on the command line, including any pipes or output redirects specified in
the command.

You can configure the SR Linux device to send accounting records to a destination specified in an
accounting-method list, such as a TACACS+ or RADIUS server group or the local system.

For each user type, the SR Linux device generates accounting records as follows:

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

59

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

• For local users, including the SR Linux admin user, command accounting records are sent to the

destination specified in the accounting-method list, both for commands entered in the SR Linux CLI
and for commands entered in the bash shell.

• For Linux users and remote users, command accounting records are sent for commands entered in

the SR Linux CLI (including Linux commands entered in the SR Linux CLI using the bash command),
although not for commands entered in the bash shell.

See Configuring TACACS+ accounting and Configuring RADIUS accounting for an example configurations.

5.3 AAA server group configuration

The SR Linux supports the following server group types for AAA functions:

•

local – uses local authentication, including /etc/passwd, /etc/group, and logging via syslog

• TACACS+ – performs AAA via interaction with servers in a TACACS+ server group

• RADIUS – performs AAA via interaction with servers in a RADIUS server group

The AAA type that is configured is used for all AAA functions and cannot use different types for different
functions. Users whose AAA functions are handled by the aaa_mgr application (that is, the SR Linux
admin user and local users) can use one of these server groups for authentication and accounting.

Each TACACS+ or RADIUS server group can have up to five servers. When authenticating a user or
writing an accounting record, the SR Linux tries each server in the group in a round-robin fashion until a
response is received. If no response is received within a specified timeout period, the SR Linux tries the
next server in the group.

If no response is received from any of the servers in the group, the SR Linux moves to the next specified
authentication or accounting method. If no other authentication method is specified, or the server group is
the last method in the list, then the authentication or accounting request is rejected.

5.3.1 Configuring an AAA server group

Procedure

You can configure authentication server groups for AAA functions. Configuring server groups provides a
way to group the AAA server hosts. Grouping server hosts allows you to select a subset of the configured
server hosts and use them for an AAA service. TACACS+ and RADIUS requests are sourced from the
mgmt network-instance.

Example: Configure TACACS+ and local server groups for AAA functions

Each server group consists of three servers. The timeout period specifies that the SR Linux wait 30
seconds for a response from a server before trying the next server in the group.

For the server group of type local, no external servers can be specified. The local server group uses
/etc/passwd and /etc/group for authentication, and syslog for accounting. The timeout period
specifies that the SR Linux wait a maximum of 60 seconds for an AAA function to complete.

SR Linux allows you to configure the source IP address of the packets sent from the router to
the TACACS+ server. You can configure the source-address parameter as either an IPv4 or
IPv6 address under .system.aaa.server-group{.name=="*"}.server{.address==

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

60

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

"*"}.tacacs. within a network instance. In the following example, the TACACS+ requests are sent
from the configured IPv4 or IPv6 source-address in the mgmt network instance.

--{ * candidate shared default }--[  ]--
# info system aaa
    system {
        aaa {
            server-group LOCAL-GROUP {
                type local
                timeout 60
            }
            server-group TACACS-GROUP {
                type tacacs
                timeout 30
                server 10.0.0.1 {
                    network-instance mgmt
                    tacacs {
                        secret-key $aes1$AWWxMe8CNxAZ/28=$tYLDBYE6boVHA1/4iKmpAg==
                        source-address 192.168.3.4
                    }
                }
                server 10.0.0.2 {
                    network-instance mgmt
                    tacacs {
                        secret-key $aes1$AWUxMTqSeZQVZG8=$lY73o0HeTwX8UMJiYiEnAQ==
                        source-address 192.168.3.4
                    }
                }
                server 10.0.0.3 {
                    network-instance mgmt
                    tacacs {
                        secret-key $aes1$AWUPUZthMjjSxG8=$No1xdN4/EE8Z1YCa7QBwCg==
                        source-address 192.168.3.4
                    }
                }
            }
        }
    }

Example: Configure RADIUS server group for AAA functions

Each server group consists of three servers. The timeout period specifies that the SR Linux wait 30
seconds for a response from a server before trying the next server in the group. The server host
entries are tried in the order in which they are configured. By default, the RADIUS protocol uses port
1812 for authentication and authorization, and port 1813 for accounting.
SR Linux allows you to configure the source IP address of the packets sent from the router to
the RADIUS server. You can configure the source-address parameter as either an IPv4 or
IPv6 address under .system.aaa.server-group{.name=="*"}.server{.address==
"*"}.radius. within a network instance. In the following example, the RADIUS requests are sent
from the configured IPv4 or IPv6 source-address in the mgmt network instance.

--{ * candidate shared default }--[  ]--
info system aaa
    system {
        aaa {
            server-group RADIUS-GROUP {
                type radius
                timeout 30
                server 10.0.0.1 {
                    network-instance mgmt

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

61

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

                    radius {
                        auth-port 1812
                        acct-port 1813
                        secret-key $aes1$AWWDbQ87riUVxm8=$a56muaolKX9QVgZbE/cW3g==
                        source-address 192.168.3.4
                    }
                }
                server 10.0.0.2 {
                    network-instance mgmt
                    radius {
                        auth-port 1812
                        acct-port 1813
                        secret-key $aes1$AWXDSbXVCfU/IG8=$3fzuwfPb3CO1ZvvYBKFD1Q==
                        source-address 192.168.3.4
                    }
                }
                server 10.0.0.3 {
                    network-instance mgmt
                    radius {
                        auth-port 1812
                        acct-port 1813
                        secret-key $aes1$AWWhVcwDAb4Gt28=$jfPzjxRa9KC82ZV1VR2wSA==
                        source-address 192.168.3.4
                    }
                }
            }
        }
    }

5.4 Authentication for the linuxadmin user

The SR Linux linuxadmin user is installed by default in /etc/passwd. The linuxadmin user has
access to sudo to root and can run the SR Linux CLI with admin permissions.

The default password for the linuxadmin user is NokiaSrl1!. You can change this password via the
SR Linux CLI or any other supported interface.

5.4.1 Configuring the password for the linuxadmin user

Procedure

You can set a password for the linuxadmin user.

Note:
For the linuxadmin user password, only the sha2 and yescrypt encryption options are
supported. If the ar2 encryption is selected, the password is hashed using yescrypt instead.

Example

--{ * candidate shared default }--[  ]--
# system aaa authentication linuxadmin-user password NewPass1234

When the user configuration is displayed, the password is hashed; for example:

--{ * candidate shared default }--[  ]--

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

62

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

# info system aaa authentication linuxadmin-user
    system {
        aaa {
            authentication {
                linuxadmin-user {
                    password $y$j9T$2502d6515df892cf$NZ4.Dj0H7u7zsCvRar3v0Fx
BiKe5xKL5nmUX3W5UVP/
                }
            }
        }
    }

5.5 Authentication for local users

Local users are those configured in the SR Linux CLI. For a local user, you can configure a password and
specify one or more authentication methods, including local authentication or remote authentication using a
TACACS+ or RADIUS server.

Note:
For authentication functionality such as password lockout and the failed-login-attempts counter,
the NTP server must be enabled and in synchronization.

5.5.1 Configuring authentication for local users

Procedure

By default, there is a single local user configured on the SR Linux, admin. The default password for the
admin user is NokiaSrl1!. You can configure additional local users.

Note:
When you change the password, the system encrypts the password as per the configured hash
method. See Configuring hash-method for local user passwords. Default is argon2 (ar2).

Example: Configure a password for the SR Linux admin user

--{ * candidate shared default }--[  ]--
# system aaa authentication admin-user password NewPass1234

Example: Configure a password for a local user srlinux

--{ * candidate shared default }--[  ]--
# system aaa authentication user srlinux password sr1l234

When the user configuration is displayed, the password is hashed ; for example:

--{ * candidate shared default }--[  ]--
# info system aaa
    system {
        aaa {
            authentication {
                user srlinux {
                    password $ar2$KGSITqfJu5g=$iZZ6XKXtXOZOGMbeXO2ypg==
                }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

63

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

            }
        }
    }

Example: Change an existing user's password

To change an existing user’s password, use the same command that created the user and configure
the new password; for example:

--{ * candidate shared default }--[  ]--
# system aaa authentication user srlinux password NewPasswordl234

Example: Authentication methods

The following example specifies authentication methods. When a user attempts to log in, the user
is authenticated using local authentication first. If local authentication fails, the SR Linux tries the
servers in TACACS+ server group TACACS-GROUP.

If the user cannot be authenticated through any of these methods, the authentication attempt is
rejected.

--{ * candidate shared default }--[  ]--
# info system aaa
    system {
        aaa {
            authentication {
                authentication-method [
                    LOCAL-GROUP
                    TACACS-GROUP
                ]
            }
        }
    }

5.5.2 Configuring superuser attribute for local users

Procedure

To configure the superuser attribute, set the superuser parameter under
.system.aaa.authentication.user to true. By default, the superuser attribute is disabled. This ensures
backward compatibility with the previous releases.

Example: Configuring the superuser attribute for a local user

In this example, the superuser attribute setting is enabled for the srl-test-useruser.

--{ * candidate shared default }--[  ]--
# info system aaa authentication user srl-test-user superuser
    system {
        aaa {
            authentication {
                user srl-test-user {
                    superuser true
                }
            }
        }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

64

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

    }

Example: Configuring the superuser attribute for SR Linux default admin user

The following example configures the superuser attribute setting for the SR Linux admin user.
By default, the superuser attribute is enabled, ensuring backward compatibility and making the
superuser status of the admin user more explicit.

--{ * candidate shared default }--[  ]--
# info system aaa authentication admin-user superuser
    system {
        aaa {
            authentication {
                admin-user {
                    superuser true
                }
            }
        }
    }

5.5.3 Configuring password security for local users

Procedure

All local users who authenticate using plain text or hashed value passwords, including the admin user, are
subject to password security and user lockout settings.

To configure password security and user lockout features, set the following parameters under system aaa
authentication:

• password aging <0 to 500>

Sets the number of days after which the user password expires and the user is prompted to update their
password. The default of 0 sets the password to never expire.

• password change-on-first-login [true | false]

When set to true, forces local users to change their password on the first login to the system. The
default is false.

• password history <0 to 20>

Specifies how many previous passwords SR Linux matches a new password against, such that the
new password cannot be one of the previous <0 to 20> passwords. The default is 0, which disables
password history.

• password complexity-rules

Sets the complexity rules that new passwords must match, using the following options:

– minimum-length <1 to 12>

Sets the minimum password length. The default is 1, which applies no minimum.

– maximum-length <1 to 1023>

Sets the maximum password length. The default is 1023.

– minimum-lowercase <0 to 10>

Sets the minimum required lowercase characters. The default is 0, which applies no minimum.

– minimum-uppercase <0 to 10>

Sets the minimum required uppercase characters. The default is 0, which applies no minimum.

– minimum-numeric <0 to 10>

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

65

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

Sets the minimum required numeric characters. The default is 0, which applies no minimum.

– minimum-special-character <0 to 10>

Sets the minimum required number of special characters, which can include the following: (!"#$
%&'()*+,-./:;<=>?@[\]^_`{|}~"). The default is 0, which applies no minimum.

Note: Users must enter the double quote as \" and the backslash as \\.

– allow-user-name [true | false]

Specifies whether the user can include their username as part of their password. If set to false, then
SR Linux allows only the first three consecutive characters of the username in the user password.
The default is true, which allows the password to contain the full username.

• password lockout-policy

Specifies the user lockout policy using the following parameters:

– attempts <0 to 64>

Sets the number of failed login attempts that trigger the lockout. The default is 0, which allows
unlimited failed login attempts.

– time <0 to 1440>

Sets the time period in minutes within which the failed login attempts must occur to trigger the
lockout. The timer starts at the first failure. The default is 1 minute.

– lockout <0 to 1440>

Sets the time period in minutes during which the user account remains locked out. A value of 0
means that the user account is locked out indefinitely. The default is 15 minutes.

•

require-ntp-sync [true | false]
When set to false, this option forces the NTP synchronization check to be ignored and use
only the system clock. The default is true. You can configure this setting in circumstances
where the configured NTP servers are unreachable or unreliable. The configurable
setting to ignore the NTP sync status is included in the password change-on-first-login
(.system.aaa.authentication.password.change-on-first-login), password
aging (.system.aaa.authentication.password.aging), and lockout policy mechanism
(.system.aaa.authentication.password.lockout-policy).

When included in the above features, the command require-ntp-sync disables NTP synchronization
check. However, this command does not prevent the operator from syncing the system clock to NTP. It
simply removes the dependency on NTP synchronization for those features.

Example: Configure password security and user lockout

The following example sets the following password security and user lockout settings:

• User passwords expire after 365 days.

• Users must change their password on first login.

• Users cannot reuse any of their 10 previous passwords.

• Forces the NTP synchronization check to be ignored and use only the system clock.

• Passwords must contain:

– a minimum of eight and a maximum of 16 characters

– one each of lowercase, uppercase, numeric, and special characters

• Usernames are not allowed in the passwords.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

66

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

• After five failed attempts within 2 minutes, users are locked out indefinitely.

--{ * candidate shared default }--[ ]--
# info aaa authentication password
    aaa {
        authentication {
            password {
                aging 365
                change-on-first-login true
                history 10
                require-ntp-sync false
                complexity-rules {
                    minimum-length 8
                    maximum-length 16
                    minimum-lowercase 1
                    minimum-uppercase 1
                    minimum-numeric 1
                    minimum-special-character 1
                    allow-username false
                }
                lockout-policy {
                    attempts 5
                    time 2
                    lockout 0
                }
            }
        }
    }

5.5.4 Configuring hash-method for local user passwords

Procedure

For local-user and admin-user passwords, you can choose the password hashing method by setting the
hash-method parameter under .system.aaa.authentication.password.

By default, the hash-method is set to yescrypt.

Example: Configuring the yescrypt hashing algorithm

--{ * candidate shared default }--[ ]--
# info system aaa authentication password hash-method
    system {
        aaa {
            authentication {
                password {
                    hash-method yescrypt
                }
            }
        }
    }

Example:  Configuring the ar2 hashing algorithm

--{ * candidate shared default }--[ ]--
# info system aaa authentication password hash-method
    system {
        aaa {
            authentication {

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

67

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

                password {
                    hash-method ar2
                }
            }
        }
    }

Example:  Configuring the sha2 hashing algorithm

--{ * candidate shared default }--[ ]--
# info system aaa authentication password hash-method
    system {
        aaa {
            authentication {
                password {
                    hash-method sha2
                }
            }
        }
    }

5.5.5 Clearing locked-out local users

Procedure

To display locked out users, use the info from state system aaa authentication command, which
displays a lockout state of active true when a user is locked out.

To clear a local user's lockout state, use the following tools command:

tools system aaa authentication user <username> unlock

Example: Display user lockout state

--{ * candidate shared default }--[ ]--
#info from state system aaa authentication  
    system {
        aaa {
            authentication {
                exit-on-reject false
                idle-timeout 600
                authentication-method [
                    local
                ]
                user srl-test-1 {
                    password $bt$Vbf0Zgg8MGP=$ihHklTQHi/+3VwVD04Z8gh==
                    failed-login-attempts 10
                    last-failed-login 2022-07-29T22:35:23.801Z
                    password-change-required true
                    role [
                        test
                    ]
                    lockout {
                        active true
                        start 2022-07-29T22:35:23.801Z
                        end "14 minutes from now"
                    }
                }
                user srl-test-2 {
                    password $bt2$jBZBL6WAuTr=$eXYWpivE5z10YxBIZ06hjQ==

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

68

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

                    password-change-required true
                    role [
                        test
                    ]
                }

Example: Clear user lockout state

--{ * candidate shared default }--[ ]--
#tools system aaa authentication user srl-test-1 unlock
/system/aaa/authentication/user[username=srl-test-1]:
    Unlocked user srl-test-1

5.6 Authorization using role-based access control

Authorization via role based access control is performed for all user types including the default local user
admin (admin), with the exception of the linuxadmin/root users, which are permitted write access to all
commands in the command tree. Users can be configured with a set of one or more roles that define the
privileges for which they are authorized in the system.

A role consists of one or more rules, which specify a schema path the role can have privileges for, and
a corresponding action, which can be read, write, or deny. After authentication, a user is authorized to
perform the specified action defined in the path for the role the user is assigned.

Role-based access control supports service and CLI plug-in authorization.

• Service authorization allows you to limit the actions a user is authorized to perform to specific access

types such as CLI and gNMI.

• CLI plug-in authorization gives you control over how operator-provided plug-ins are loaded. You can
choose to load them from the global plug-in directory or from the user's home directory. This feature
also allows you to control the execution of CLI plug-ins and the queries they make against the data
model. Additionally, you can manage the list of CLI commands that are allowed or not allowed to
execute.

5.6.1 Role configuration

Roles consist of a set of rules that define a schema path-reference and a corresponding action. The path-
reference specifies system functions that are subject to authorization, and the action specifies the privilege
type for users assigned the role: read, write, or deny.

The path-reference is specified relative to the root level. For example, the path-reference forward slash
‟/” indicates all CLI functions at the root level and below; the path-reference ‟/system” indicates all CLI
functions at the system level and below, and the path-reference ‟/system configuration” indicates all CLI
functions at the system configuration level and below.

If no role is assigned to a user at login, the user has access to all CLI plugins, but no access to CLI
commands at any level. This configuration is equivalent to a rule with the forward slash "/" as the path-
reference and deny as the action.

When no roles are configured, the admin retains its superuser privileges. This ensures backward
compatibility with previous releases that only allowed role configuration for all users except for the admin
and linuxadmin users.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

69

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

Up to 32 roles are supported; each role can have a list of up to 256 paths. The order of the path-references
in a role does not matter; the longest match is used when validating a command against a path-reference.

The syntax for the path-reference is SR Linux CLI format, with the forward slash ‟/” representing the root.
Wildcards and ranges can be used with path-references, in the same way they can in CLI syntax.

Each entry within the path-reference must use double quotes, unless the command string is a single word
with no spaces. If the path itself includes quotes, use backslash characters to indicate the quotes. For
example, to specify the following in a path-reference:

a "b" and c "d"

You can configure the following for the path-reference:

path-reference "a \"b\"" "c \"d\""

The roles control the service and CLI plug-in authorization .

5.6.1.1 Configuring a role

Procedure

To configure a role, you define one or more rules that specify a path indicating the command string that is
subject to authorization and a corresponding action such as read, write, or deny.

Example: Configure a role with multiple rules

The following is an example of creating a role named testrole that contains two rules: one rule
to limit access to network-instance red and another rule to give write access to the rest of the tree.
A user assigned this role on authentication is able to configure everything in the system except
network-instance red.

First, define the role under the system aaa authorization context:

--{ * candidate shared default }--[  ]--
# info system aaa
    system {
        aaa {
            authorization {
                role testrole {
                }
            }
        }
    }

Then specify the rules under the system configuration role context:

--{ * candidate shared default }--[  ]--
# info system configuration
    system {
        configuration {
            role testrole {
                rule / {
                    action write
                }
                rule "network-instance red" {
                    action read
                }
            }
        }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

70

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

    }

Example: Configure a role with view-only access permission

The following example configures a role named acl_app that allows a user to view the state of the
acl_mgr application, but no other information:

--{ * candidate shared default }--[  ]--
# info system aaa
    system {
        aaa {
            authorization {
                role acl_app {
                }
            }
        }
    }

--{ * candidate shared default }--[  ]--
# info system configuration
    system {
        configuration {
            role acl_app {
                rule system {
                    action deny
                }
                rule "system app-management application acl_mgr state" {
                    action read
                }
            }
        }
    }

When a user that is assigned the acl_app role attempts to read information from the system state
datastore, only the state of the acl_mgr application is displayed. For example:

--{ * candidate shared default }--[  ]--
# info from state system application acl_mgr
system {
    app-management {
        application acl_mgr {
            state running
        }
    }
}

5.6.1.2 Configuring superuser role for local users

Procedure

To configure the superuser role attribute, set the superuser role parameter under
.system.aaa.authorization.role{} to true. By default, the superuser role parameter is disabled. This
ensures backward compatibility with the previous releases.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

71

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

Example: Configuring the superuser role attribute

In this example, the test_role is configured with the superuser role setting..

--{ * candidate shared default }--[  ]--
#  system aaa authorization role test_role
    system {
        aaa {
            authorization {
                role test_role {
                    superuser true
                }
            }
        }
    }

Example: Assigning the superuser role to a local user

In the following example, the previously configured superuser role (test_role) is assigned to the
srl-test-user user.

--{ * candidate shared default }--[  ]--
# info system aaa authentication user srl-test-user
    system {
        aaa {
            authentication {
                user srl-test-user {
                    role [
                        test_role
                    ]
                }
            }
        }
    }

5.6.2 Assigning roles to users

Procedure

You can assign a user one or more roles. The rules configured in the user's role specify the commands the
user is authorized to issue.

Up to 32 roles can be assigned to a user. If a user has multiple roles assigned, all of the rules configured in
all of the roles apply to the user. If multiple roles reference the same path, the most specific rule is used.

For service authorization, the system merges all roles that have the service (CLI, gNMI, and so on) the
user has logged in with and excludes any roles that omit the service.

When it comes to CLI plug-in authorization, any user who has the necessary role to load the plug-in can do
so. The system follows an additive and permissive approach.

Example

In the following example, the default local user admin and user testuser are assigned the role
testrole.

After the testuser user is authenticated, the user is authorized to use the system according to the
rules configured in the role testrole. Using the example from Configuring a role, this assignment

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

72

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

authorizes the testuser user to configure everything in the system except for the network-instance
red.

--{ * candidate shared default }--[  ]--
# info system aaa
    system {
        aaa {
            authentication {
                idle-timeout 7200
                authentication-method [
                    local
                ]
                admin-user {
                    role [
                        testrole
                    ]
                }
                linuxadmin-user {
                    password $6$skWKUdwWyM/$muyCaWpqJyax
Yrs0J6nzb8tiM63W1HGKnsSOrb4JA7PiexF1q89PdualYQtyfl/q1qJJ9qyVE0CeTF0Csu87a/
                }
                user testuser {
                    role [
                        testrole
                    ]
                }
            }
        }
    }

5.6.3 Authorization using a TACACS+ server

You can configure the SR Linux to use a TACACS+ server to provide authorization for role-based access
control. When TACACS+ authorization is configured, the actions an authenticated user can perform
depend on the priv-lvl value configured for the user on a TACACS+ server. If priv-lvl-authorization is not
set to true, the authenticated user is authorized as an admin user.

TACACS+ authorization for SR Linux users works as follows:

1. After a user is authenticated, the SR Linux sends the TACACS+ server an authorization-request
message based on a shell (exec) session starting. This authorization-request is sent immediately
following user authentication, but before the shell is started.

2. The TACACS+ server returns an authorization-reply message that includes the priv-lvl value configured

for the user for shell access.

3. On the SR Linux, roles are configured which map to a priv-lvl value.

4.

In SR Linux, users perform actions specified in roles with a priv-lvl value equal or lower to the priv-lvl
value returned by the TACACS+ server.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

73

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

5.6.3.1 Configuring TACACS+ Authorization

Procedure

To configure TACACS+ authorization for SR Linux users, you enable priv-lvl authorization for the TACACS
+ server group and configure roles that specify the priv-lvl mapping for each role subject to authorization
using a TACACS+ server.

Example: Enable priv-lvl authorization for a TACACS+ server group

The following configuration enables priv-lvl authorization for the TACACS-GROUP server group:

--{ * candidate shared default }--[  ]--
# info system aaa server-group TACACS-GROUP
    system {
        aaa {
            server-group TACACS-GROUP {
                priv-lvl-authorization true
            }
        }
    }

Example: Configure roles with read access

The following configuration specifies two roles: interface oper-state and network-instance
oper-state. The interface oper-state role grants read access for all interface oper-states,
and the network-instance oper-state role grants read access for all network-instance oper-
states.

--{ * candidate shared default }--[  ]--
# info system configuration role *
    system {
        configuration {
            role "interface oper-state" {
                rule "interface * oper-state" {
                    action read
                }
            }
            role "network-instance oper-state" {
                rule "network-instance * oper-state" {
                    action read
                }
            }
        }

Example: Enable priv-lvl mapping for the configured roles

The following configuration specifies the priv-lvl mapping for both roles.

In this example, when a user is authenticated, the SR Linux sends an authorization-request based on
a shell (exec) session starting. The TACACS+ server returns an authorization-reply that specifies the
priv-lvl value for the shell.

If the priv-lvl value returned by the TACACS+ server is 14, the user is assigned both roles; that
is, read access to all interface oper-states and all network-instance oper-states, but no access to
anything else in the system.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

74

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

If the priv-lvl value returned by the TACACS+ server is 13, the user is assigned only the network-
instance oper-state role and can read the oper-state for network-instances, but has no access
to anything else in the system.

--{ * candidate shared default }--[  ]--
# info system aaa authorization
    system {
        aaa {
            authorization {
                role "interface oper-state" {
                    tacacs {
                        priv-lvl 14
                    }
                }
                role "network-instance oper-state" {
                    tacacs {
                        priv-lvl 13
                    }
                }
            }
        }
    }

Example: Configure service authorization for a role

The following example configures service authorization for a role that uses TACACS+ authorization.
See Configuring service authorization.

In this example, when a user is authenticated by a TACACS+ server in the server group TACACS-
GROUP, if the TACACS+ server returns priv-lvl 15 for the user, then role_1 is assigned to the user.

Service authorization is configured for the role so that all services except gNMI are authorized for
users assigned this role. This means users assigned role_1 are authorized for the functionality
defined in the rules of role_1 if they connect using the CLI, JSON-RPC, or FTP, but are not
authenticated if they connect using gNMI.

--{ * candidate shared default }--[  ]--
# info system aaa authorization role role_1
    system {
        aaa {
            authorization {
                role role_1 {
                    services [
                        cli
                        json-rpc
                        ftp
                    ]
                    tacacs {
                        priv-lvl 15
                    }
                }
            }
        }
    }

When a user is assigned multiple roles, the user is authorized for all services specified in the roles
they are assigned, according to the rules defined in the roles. For example, if a user is assigned
role_1, which allows access to the system via CLI, and also assigned role_2, which allows access
via gNMI, the user is authorized to use the CLI to perform the functions defined in the rules of role_
1, and is authorized to use the gNMI interface for the functions defined in the rules of role_2.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

75

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

5.6.4 Authorization using a RADIUS server

RADIUS combines authentication and authorization. The RADIUS server authorizes the user by applying
a profile based on username and password configurations. The profiles are configured using VSAs on
the RADIUS server. The actions an authenticated user can perform depend on the user profiles. Profiles
consist of a suite of commands that the user is allowed or not allowed to execute.

SR Linux supports the Timetra-Profile <string> VSA, which is mapped to authorization roles
configured on the router. The RADIUS dictionary file dictionary-freeradius.txt, in the support
directory of the SR Linux software distribution, includes the supported VSAs.

The Nokia-defined attributes are encapsulated in a RADIUS vendor-specific attribute with the vendor ID
field set to 6527, the vendor ID number.

RADIUS authorization for SR Linux users works as follows:

1. The SR Linux sends the username and password to the RADIUS server.

2.

If the username and password are recognized, the RADIUS server returns the user authorization
information (user profiles encoded into the VSA).

If the username and password are not recognized, access is denied and passed on to the next
configured authentication method. If no other authentication method is configured, or the RADIUS
server group is the last method in the list, then the authentication/authorization request is rejected.

Note: The user profiles downloaded from the RADIUS server are stored on the SR Linux
only for the user session. These profiles are considered temporary configurations and are not
saved when the user session terminates.

3. Users authenticated with RADIUS and a user profile use RADIUS authorization, and not local

authorization. When a user issues a command, SR Linux compares the command and the user
information against the information present in the downloaded RADIUS user profile. The profile provides
details about the command that the user is authorized and not authorized to execute. The user can
execute only the authorized commands. If a user profile is not received, the user can execute all
commands.

5.6.4.1 Configuring RADIUS Authorization

Procedure

To configure RADIUS authorization for SR Linux users, you enable authorization for the RADIUS
server group and configure the UDP port number. By default, the RADIUS protocol uses port 1812 for
authentication and authorization.

Example

The following example configures services authorization for a role that uses RADIUS authorization.

--{ * candidate shared default }--[  ]--
# info system aaa
    system {
        aaa {
            authorization {
                role role_1 {
                    services [

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

76

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

                        cli
                        gnmi
                        ftp
                    ]
                }
            }
        }
    }

5.6.5 Service authorization

Service authorization allows you to block or allow access to a user depending on the interface they use
to connect to the device. You can use service authorization to restrict access to a controller, allowing it to
speak through programmatic interfaces, but without credentials that can be used by someone logged into
the CLI.

You can configure the service and CLI plug-in authorization all user types including the default local user
admin (admin), with the exception of the linuxadmin/root users, which are permitted write access to all
commands in the command tree.

To configure service authorization, you assign roles to local users that authorize them to issue commands
using specified services such as the CLI, gNMI, or JSON-RPC interfaces. For example, you can define
a role that grants read access to subinterface statistics and limits access to that information to the gNMI
service. When you assign that role to a user, the user is allowed to read subinterface statistics only via the
gNMI interface.

The following interface types can be configured for service authorization:

• cli – access to the system via CLI

• gnmi – access to the system via gNMI

• json-rpc – access to the system via JSON-RPC

• ftp – access to the system via FTP

• p4rt – access to the system via P4Runtime RPCs

After a user is authenticated, the system checks whether the user is assigned a role that allows access
via the interface they used to connect to the device. For example, if a user connects using gNMI, the
system checks whether the user is assigned any roles that authorize access via the gNMI interface. If the
user is assigned a role that authorizes access via gNMI, the user receives access to the system via gNMI
according to the rules defined in the set of roles that includes gNMI. If the user connects via gNMI, but
is not assigned any role that authorizes access via gNMI, the authorization attempt is rejected and the
session is closed.

If a user is assigned multiple roles, the user is authorized for all services specified in the roles they are
assigned, according to the rules defined in the roles. For example, consider a user assigned role r1, which
allows access to the system via CLI, and also assigned role r2, which allows access via gNMI. The user is
authorized to use the CLI to perform the functions defined in the rules of role r1 and is authorized to use
the gNMI interface for the functions defined in the rules of role r2.

By default, a role has no services configured for authorization. When you configure a role, you must specify
the services that apply to the role. Users assigned the role are authorized to perform the functions defined
in the role using the specified services.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

77

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

5.6.5.1 Configuring service authorization

Procedure

To configure service authorization, you create a role that defines rules permitting or denying access to
system functionality, assign the role to one or more users, and specify the services over which users
assigned the role are authorized to perform the rules defined in the role.

Example: Create a role

The following example creates a role read-oper-state that allows reading subinterface oper-state
but nothing else:

--{ * candidate shared default }--[  ]--
# info system configuration role *
    system {
        configuration {
            role read-oper-state {
                rule / {
                    action deny
                }
                rule "interface * subinterface * oper-state" {
                    action read
                }
            }
        }
    }

Example: Assign the role to a user

The following example assigns read-oper-state role to the default local user admin. Additionally,
it creates a user gnmiuser that is assigned the read-oper-state role when authenticated.

--{ * candidate shared default }--[  ]--
# info system aaa authentication
    system {
        aaa {
            authentication {
                authentication-method [
                    local
                ]
                admin-user {
                    role [
                        read-oper-state
                    ]
                }
                user gnmiuser {
                    role [
                        read-oper-state
                    ]
                }
            }
        }
    }

Example: Configure service authorization for the role

The following example configures service authorization so that users assigned the read-oper-
state role, such as admin/gnmiuser, can perform the functionality defined in the role only if they

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

78

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

have connected to the system via gNMI. If the user connects via a different service, such as by
logging into the CLI, the user is not authorized for the functionality defined in the role.

--{ * candidate shared default }--[  ]--
# info system aaa authorization
    system {
        aaa {
            authorization {
                role read-oper-state {
                    services [
                        gnmi
                    ]
                }
            }
        }
    }

5.6.6 CLI plug-in authorization for local users

CLI plug-in authorization gives you control over how operator-provided plug-ins are loaded. You can
choose to load them from the global plug-in directory (/etc/opt/srlinux/cli/plugins/) or from the
user's home directory (~/cli/plugins/). This feature also allows you to control the execution of CLI
plug-ins and the queries they make against the data model. Additionally, you can manage the list of CLI
commands that are allowed or not allowed to execute.

You can configure the CLI plug-in authorization for all user types including the default local user admin
(admin), with the exception of the linuxadmin/root users, which are permitted write access to all
commands in the command tree.

To configure CLI plug-in authorization, you assign roles to users that authorize them to load plug-ins from
either the global or user plug-ins directory. Additionally, you can specify the list of CLI commands that users
assigned to the role are authorized to execute.

For example, you can define a role that grants permission to load plug-ins only from users home directory.
When you assign this role to a user, the user can only load plug-ins from the home directory.

After a user is authenticated, the system checks whether the user is assigned a role that allows loading
of plug-ins from the intended location and has permission to execute the intended CLI commands. If the
authorization is successful, the user can perform the functionality as defined in the role. If the authorization
fails, the user is denied access to the functionality defined in the role.

To configure the CLI plug-in authorization, set the following parameters under the following command:

system aaa authorization role role-name cli

:

• allow-command-list

Specify the list of CLI commands allowed to execute.

• deny-command-list

Specify the list of CLI commands not allowed to execute.

•

load-global-plugins [true | false]

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

79

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

Specifies whether CLI should load plug-ins from global plug-in directory ( /etc/opt/srlinux/cli/
plugins/). If set to false, no plug-ins are loaded from the global plug-in directory. The default is true,
which allows plug-ins to be loaded from the global plug-in directory.

•

load-user-plugins [true | false]
Specifies whether CLI should load plug-ins from user's home directory ( ~/cli/plugins/). If set to
false, no plug-ins are loaded from the user's home directory. The default is true, which allows plug-ins
to be loaded from the user's home directory.

5.6.6.1 Configuring CLI plug-in authorization

Procedure

To configure CLI plug-in authorization, you assign roles to users that authorize them to load plug-ins from
either the global or user plug-ins directory. Additionally, you can specify the list of CLI commands that users
assigned to the role are authorized to execute.

Example: Configure CLI plug-in authorization for the role

The following example configures CLI authorization so that users assigned to the loadglobal-
plugins role, such as cliuser, can load only the global plug-ins and execute only the info and
tools command without having access to the bash commands.

--{ * candidate shared default }--[  ]--
# info system aaa authorization role loadglobal-plugins cli
    system {
        aaa {
            authorization {
                role loadglobal-plugins {
                    cli {
                        load-global-plugins true
                        load-user-plugins false
                        deny-command-list [
                            bash
                        ]
                        allow-command-list [
                            info
                            tools
                        ]
                    }
                }
            }
        }
    }

--{ * candidate shared default }--[  ]--
# info system aaa authentication user cliuser
    system {
        aaa {
            authentication {
                user cliuser {
                    role [
                        loadglobal-plugins
                    ]
                }
            }
        }
    }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

80

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

5.7 Accounting configuration

When accounting is enabled, the SR Linux device generates command accounting records as described in
Accounting.

The following is an example of accounting records generated by the SR Linux device:

Aug 7 22:34:09
127.0.0.1 bob ssh 172.17.0.1 start task_id=2 timezone=UTC service=shell priv-lvl=15 
cmd=tail -f /var/log/tac_plus.acct
Aug 7 22:34:09
127.0.0.1 bob ssh 172.17.0.1 stop task_id=2 timezone=UTC service=shell priv-lvl=15 
cmd=tail -f /var/log/tac_plus.acct
Aug 7 22:34:14
127.0.0.1 bob ssh 172.17.0.1 start task_id=5 timezone=UTC service=shell priv-lvl=15 
cmd=help
Aug 7 22:34:14
127.0.0.1 bob ssh 172.17.0.1 stop task_id=5 timezone=UTC service=shell priv-lvl=15 
cmd=help

The following is an example of accounting records sent with the Timetra-Cmd VSA from the FreeRADIUS
server:

Wed Feb 15 08:13:05 2023
        Acct-Status-Type = Start
        NAS-IP-Address = 0.0.0.0
        User-Name = "user151"
        Acct-Session-Id = "0000332023-02-15T07:12:54.772Z"
        Calling-Station-Id = "172.18.0.1"
        NAS-Port-Type = Virtual
        Timetra-Cmd = "show system aaa authentication session 33"
        Event-Timestamp = "Feb 15 2023 08:13:05 CET"
        Timestamp = 1676445185

Wed Feb 15 08:13:05 2023
        Acct-Status-Type = Stop
        NAS-IP-Address = 0.0.0.0
        User-Name = "user151"
        Acct-Session-Id = "0000332023-02-15T07:12:54.772Z"
        Calling-Station-Id = "172.18.0.1"
        NAS-Port-Type = Virtual
        Timetra-Cmd = "show system aaa authentication session 33"
        Event-Timestamp = "Feb 15 2023 08:13:05 CET"
        Timestamp = 1676445185

5.7.1 Configuring TACACS+ accounting

Procedure

To configure TACACS+ accounting for SR Linux users, enable accounting for the TACACS+ server group.

The SR Linux generates an accounting record when a command is started and when it is stopped.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

81

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

Example

The following example configures accounting records to be sent to the TACACS-GROUP server group.

--{ * candidate shared default }--[  ]--
# info system aaa
system {
    aaa {
        accounting {
            accounting-method [
                TACACS-GROUP
            ]
            event commands {
                record start-stop
            }
        }
    }
}

5.7.2 Configuring RADIUS accounting

Procedure

To configure RADIUS accounting for SR Linux users, enable accounting for the RADIUS server group and
configure the accounting port.

The SR Linux generates an accounting record when a command is started and when it is stopped. The
accounting records are sent to the RADIUS server using UDP packets on port 1813.

Example

The following example configures the RADIUS server group for accounting.

--{ * candidate shared default }--[  ]--
# info system aaa
 system {
     aaa {
         accounting {
            accounting-method [
                RADIUS-GROUP
            ]
            event commands {
                record start-stop
            }
         }
     }
 } 

5.8 Displaying user session information

Procedure

To display information about users currently logged into the SR Linux device, use the show system aaa
authentication session command.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

82

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

Example

# show system aaa authentication session
+----+----------+---------+--------------+-------+-----+------------+----------+
| ID |   User   | Service | Authentica   | Priv- | TTY |  Remote    | Login    |
|    |   name   |   name  |   cation     |  lvl  |     |   host     | time     |
|    |          |         |   method     |       |     |            |          |
+====+==========+=========+==============+=======+=====+============+==========+
| 30 | admin    | sshd    | LOCAL-GROUP  |       | ssh | 172.18.0.1 | 2023-11- |
|    |          |         |              |       |     |            | 02T04:04 |
|    |          |         |              |       |     |            | :04.040Z |
| 31 | bob      | sshd    | TACACS-GROUP |  15   | ssh | 172.18.0.1 | 2023-11- |
|    |          |         |              |       |     |            | 02T04:05 |
|    |          |         |              |       |     |            | :36.854Z |
| 32 | user151* | sshd    | RADIUS-GROUP |       | ssh | 172.18.0.1 | 2023-11- |
|    |          |         |              |       |     |            | 02T04:05 |
|    |          |         |              |       |     |            | :36.854Z |
+----+----------+---------+--------------+-------+-----+------------+----------+

5.9 Disconnecting user sessions

Procedure

To disconnect a user currently logged in to the SR Linux device, use the tools system disconnect
session-id <session-id> command and specify the session ID of the user. To list the session IDs of active
users, enter the show system aaa authentication session command.

Example

# show system aaa authentication session
+----+----------+---------+--------------+-------+-----+------------+----------+
| ID |   User   | Service | Authentica   | Priv- | TTY |  Remote    | Login    |
|    |   name   |   name  |   cation     |  lvl  |     |   host     | time     |
|    |          |         |   method     |       |     |            |          |
+====+==========+=========+==============+=======+=====+============+==========+
| 30 | admin    | sshd    | LOCAL-GROUP  |       | ssh | 172.18.0.1 | 2023-11- |
|    |          |         |              |       |     |            | 02T04:04 |
|    |          |         |              |       |     |            | :04.040Z |
| 31 | bob      | sshd    | TACACS-GROUP |  15   | ssh | 172.18.0.1 | 2023-11- |
|    |          |         |              |       |     |            | 02T04:05 |
|    |          |         |              |       |     |            | :36.854Z |
| 32 | user151* | sshd    | RADIUS-GROUP |       | ssh | 172.18.0.1 | 2023-11- |
|    |          |         |              |       |     |            | 02T04:05 |
|    |          |         |              |       |     |            | :36.854Z |
+----+----------+---------+--------------+-------+-----+------------+----------+

# tools system disconnect session-id 31
Terminating cli session 31 owned by user 'bob' logged from ssh
/system/aaa/authentication/session[id=31]:
Disconnecting aaa cli session(s): 31

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

83

 
 
 
 
Configuration Basics Guide Release 24.7

Securing access

5.10 Configuring the idle-timeout period for user sessions

Procedure

You can configure the idle-timeout period for user sessions, which disconnects a user session after a
specified period of inactivity. By default, user sessions are disconnected after 10 minutes of inactivity.

The idle-timeout period setting applies to SR Linux users and remote users. It does not apply to Linux
users or to JSON-RPC or gNMI client sessions.

When a user session is inactive for one-half of the idle-timeout period, a notification is displayed indicating
that the user will be logged out if the session remains idle for the remainder of the idle-timeout period.

Example

The following example configures the idle-timeout period so that SR Linux user sessions and remote
user sessions are disconnected after 20 minutes of inactivity:

--{ * candidate shared default }--[  ]--
# info system aaa
    system {
        aaa {
            authentication {
                idle-timeout 1200
            }
        }
    }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

84

 
 
 
 
Configuration Basics Guide Release 24.7

Management servers

6 Management servers

You can configure the following management servers on the SR Linux:

• gRPC server – allows external gRPC clients to connect to the device and modify the configuration and

collect state information

•

JSON-RPC server – allows you to issue JSON-formatted requests to the device to retrieve and set
configuration and state

You can configure Transport Layer Security (TLS) profiles, which contain TLS settings that can be provided
to the gRPC and JSON-RPC management servers.

6.1 gRPC server

SR Linux can enable a gRPC server that allows external gRPC clients (gNMI, gNOI, gNSI P4Runtime, and
gRIBI) to connect to the device and modify the configuration and collect state information.

When the gRPC server is enabled, the SR Linux gRPC server functions as a target for gRPC clients. The
gRPC server validates gRPC clients and passes RPCs to the SR Linux mgmt_server application via the
gRPC interface.

Configuration changes made by gRPC clients are made within a private candidate configuration, using a
snapshot of the current running configuration as a baseline for the private candidate. As with other types of
candidate configurations, the private candidate can operate in exclusive mode, which locks out other users
from concurrently modifying the private candidate configuration.

Sessions between gRPC clients and the SR Linux device can be encrypted using TLS. You can specify
TLS settings within a TLS profile, and apply the TLS profile when configuring a gRPC server within a
network instance. When the gRPC server is enabled, gRPC clients connect and authenticate to the
SR Linux device using the settings specified in the TLS profile.

New connections between gRPC clients and the SR Linux device are mutually authenticated. By default,
the SR Linux device validates the X.509 certificate of the gRPC client, and the other way around; this
behavior can be disabled in the TLS profile. The SR Linux device, after validating the X.509 certificate of
the gRPC client, performs local authentication if the metadata-authentication parameter is set to true. In
this case, the gRPC client is required to provide a username and password in the metadata of the RPCs.
The supplied username and password are authenticated by the SR Linux aaa_mgr application.

In cases where the client's X.509 certificate contains a SPIFFE-ID, the SPIFFE- ID is checked for a match
with any user in the system. When a match is found, the client receives the permissions granted to that
user. The user is rejected if there is no match. For information about using SPIFFE for client authentication,
see Using SPIFFE for client authentication (mTLS).

For more information about supported gRPCs, see the following:

• SR Linux System Management Guide (for gNOI, gNMI, and gNSI)

• SR Linux gRIBI Guide

• SR Linux P4Runtime Guide

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

85

 
 
 
 
Configuration Basics Guide Release 24.7

Management servers

6.1.1 Configuring a gRPC server

Procedure

SR Linux supports configuring one or more gRPC servers for one or more network instances. Each gRPC
server is distinguished by a unique configurable name. For each server instance, you can specify the
services that the instance supports.

Note:

•

If no services are configured when the server instance is enabled, all services are enabled by
default.

• For upgrades from pre-24.3.1 releases, gRPC server instance mgmt is automatically created

and all existing configurations are moved to this path.

You can limit the number of simultaneous active gRPC client sessions, as well as the number of connection
attempts per minute by gRPC clients. You can also specify the IP address and port for gRPC client
connections, as well as the TLS profile used for authenticating gRPC clients. See TLS profiles.

Example

The following example shows a configuration that enables a gRPC server running gNMI on the SR
Linux device. The gRPC server is configured so that gNMI clients can connect to SR Linux via the
mgmt network instance on port 50052 (default: 57400). Connecting gNMI clients are authenticated
using the settings specified in the TLS profile tls-profile-1.

Note: 57400 is the default gRPC server port value, Any other value requires that you
configure an ACL CPM filter to accept traffic on the configured port value (in this case
50052).

--{ * candidate shared default }--[  ]--
# info system grpc-server mgmt
    system {
        grpc-server mgmt {
            admin-state enable
            timeout 7200
            rate-limit 60
            session-limit 20
            metadata-authentication true
            tls-profile tls-profile-1
            network-instance mgmt
            port 50052
            services [
                gnmi
            ]
            source-address [
                192.168.0.1
            ]
            gnmi {
                commit-confirmed-timeout 10
                commit-save false
                include-defaults-in-config-only-responses false
            unix-socket {
                admin-state enable
            }
        }
    }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

86

 
 
 
 
Configuration Basics Guide Release 24.7

Management servers

6.1.2 Disconnecting clients from a gRPC server

Procedure

You can use a tools command to manually disconnect gRPC clients from the server.

To do this, obtain the identifier for the P4Runtime client using the info from state system grpc-server
<name> command, then enter the following command to disconnect the client:

Example: Disconnect client from the gRPC server

-{ running }--[  ]--
# tools system grpc-server mgmt client 4053 disconnect

6.1.3 Displaying gRPC client information

Procedure

To display gRPC service information for a client, use the info from state system grpc-server mgmt
client <id> command, with the following optional parameters.

• election-id: election ID of the client

• gnmi: container for gNMI related session info

• gribi: container for gRIBI related session info

• p4rt: container for P4RT related session info

•

•

•

remote-host: remote host of the client

remote-port: remote port of the client

rpc: the called package, service, and RPC

• start-time: time of the subscription creation

•

type: client type

• user: authenticated username for the client

• user-agent: user agent used for the client

6.1.4 Displaying the RPCs that clients are using

Procedure

To display the RPCs that a client is using, get the identifier for the gRPC client from the info from state
system grpc-server <name> command, then enter the following command to display the RPCs for that
client:

Example

-{ running }--[  ]--
# info from state system grpc-server mgmt client 4053 rpc

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

87

 
 
 
 
Configuration Basics Guide Release 24.7

Management servers

6.2 JSON-RPC server

You can enable a JSON-RPC server on the SR Linux device, which allows you to issue JSON-formatted
requests to the device to retrieve and set configuration and state. You can use the JSON-RPC API to run
CLI commands and standard get and set methods. The SR Linux device returns responses in JSON-
format.

Configuration changes made using the JSON-RPC API are made within a private candidate configuration,
using a snapshot of the current running configuration as a baseline for the private candidate. As with other
types of candidate configurations, the private candidate can operate in exclusive mode, which locks out
other users from concurrently modifying the private candidate configuration.

When the JSON-RPC server is enabled, the application passes the requests to the SR Linux mgmt_svr
application via the gRPC interface. This JSON-RPC API uses HTTP and HTTPS for transport and users
are authenticated with the aaa_mgr application. HTTPS requests can be authenticated using TLS, using
settings specified in a TLS profile. See TLS profiles.

See the SR Linux System Management Guide for examples of using the get method to retrieve state
information from the SR Linux, the set method to modify the SR Linux configuration, and the cli method to
enter SR Linux CLI commands.

6.2.1 Configuring a JSON-RPC server

Procedure

The SR Linux supports configuring a JSON-RPC server under one or more network-instances. You can
specify limits for the number of simultaneous active HTTP or HTTPS connections and the TCP port used
for HTTP or HTTPS connections. If the TCP port is in use when the JSON-RPC server attempts to bind to
it, the commit operation fails.

Example

The following example shows a configuration that enables a JSON-RPC server within the mgmt
network-instance on the SR Linux device. The JSON-RPC server is configured so that HTTP
requests are accepted on TCP port 4000 and TCP port 443. HTTPS requests are authenticated using
the settings in the TLS profile tls-profile-1.

--{ * candidate shared default }--[  ]--
# info system json-rpc-server
    system {
        json-rpc-server {
            admin-state enable
            network-instance mgmt {
                http {
                    admin-state enable
                    use-authentication true
                    session-limit 1
                    port 4000
                }
                https {
                    admin-state enable
                    use-authentication true
                    session-limit 1
                    port 443
                    tls-profile tls-profile-1

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

88

 
 
 
 
Configuration Basics Guide Release 24.7

Management servers

                    source-address [
                        ::
                    ]
                }
            }
        }
    }

Note:
To connect to the configured JSON-RPC server, enter the <source-address> defined in the
system json-rpc-server configuration, followed by /jsonrpc:

https(s)://<source-address>/jsonrpc

6.3 TLS profiles

TLS is a protocol for enabling applications or devices to exchange information. The SR Linux supports
configuring TLS settings in TLS profiles, which can be provided to applications such as the gRPC server
and the JSON-RPC server, so that clients connecting to the SR Linux device via these applications are
authenticated using the settings in the TLS profile.

6.3.1 Configuring a TLS profile

Procedure

A TLS profile can specify whether authentication is performed for clients connecting to SR Linux
applications to which the profile is applied. Within a TLS profile, you can configure certificates, keys, and
ciphers to use when negotiating TLS connections with clients.

Example

--{ * candidate shared default }--[  ]--
# info system tls
    system {
        tls {

            server-profile clab-profile {
                key $aes1$ATMxOVggIuZnwW8=$c7pnl/gCx62+/gDmsIklg8cQW6RbdwxL2Lx
TsrxlMEAtdGupPrjL8wrqvhEWb0ET4Q1hAz4CnwwbcWDdJpOWcV/EzVeRvdR5Rkdt0DemjPXs
Ctbxjxtf/dxmXUOTSLkk80SWNGp97xUMojdhAJUMVDFloU7qpcIYyMrzlsvU3pMCG4VJAF+PPsi
XeUZUz4HnqahtxMcOmCBdLqVgt1iw7kTss/BVqTvpLftXGDyUvALOmgLvvSjPY8fvtC8V1rlpOvWfvXhb
YwrfkYU2pnbkxvLCDDbabgpPD1jUyvBQ4SQz0c3MqXfg8kiWUd0jKw1OM9R6EqcGt6RFuYHON4CRzRmsA/
gUZXbUhUwter8Dz1sJ9D1oU4SkaiJju4RzTIxzBcXtNpar31aBYn2mikCgotV4r+XgcQZsjHqxG2o2wt6e/
VNL+S8bG+1AVG8Tpne/HFmV7wMzWjLP4bWTe0HB3f4pzmN11r0Z87yLGwaCTyXSowy+IYFM1Ffpx8NLWcgH9n
OkvRdDA2xuKFqHYpWIU2UFujRolTe8PifrSeZkSIcwwQcjrs6qbG5qb4xT0gQS4ODGGXpsqeSyRm0FRsU0MRRc
KcGEVeyjDODYNU/PeBnLat598M3NQ8qRLdksN/MSJqehHl4hQCqXtLUiz00PfHy16xCsJX3eUTJ/sv
ByfNsOE//e6PtC5jVW4ATYiZnzIsY8wU0L2xy+hX0TLHz1G9OH5FYqy9lbujBRTFRw5/5Pno7euSB8c
Sub/QLMcbBubDUExSpifrmURP+BREDbsPDL2tFhYgwqal2iYuAQyFE8J3Nmly9iyyZEQZMl/ZqSEm0d5l
PaF6333YkdWW1Dzj85twbPT8Sy3bshhouhAIsnj5Wjk1ToztJZ2CLJdRQ/U8rukbldhdIF+O/6hHNwazheGI
+G2/cE8DpV4kBan80Ty9EZ/dxSoPoELWCTeDBqbr32ADYtF4lRcrgoNcN+jZLnDDBstdz7pKtPb5CO7Vamg
UmptQWDyGiUM/QCuCzpmNlHsT1hcDfORX01xmC0rqq+GX3Qoi4FsbAhYKQKe1wpEE4bvbf5Xdmfb8Y4FMAEDj
Rp98XneIlHIEvHYdlZu6MxB9pL9RMk/hSlsUiyviupvoAAhd0H51MjuRMwDl6K/g5BoZsKW2oZaw/
tcgHPqlopSMIlDV+d8LDax7Zumf2uGxYhRxN/z3IrctkRKUli13exJ9Vybd8NgXXhfyVlg5CR/
Bed9VdiSHTtAWcZxya8wdgeeaEGXgTC+zK9oh9DoT8D3fFAsymedwdmuHCPeWwFWf8xOaxCoZa/
qo3cJrKP2hpqPiFGJRBFxddIi7b5BlWNj4VSC4hof7sdflEEfNQ8jxLeurlGmKr2adLEeODLirgh
Sc2HtZ5i9qtaNLi08Lc30T+xz4SRZNCiX62E3XRkyRyOMMKvU+3u39+oo94PAzsUwwUMvYTQdHglu

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

89

 
 
 
 
Configuration Basics Guide Release 24.7

Management servers

ElqU/gEqybmZMqiXp+l6driapo1RlqvEYD7hPTXmNuIwSJOyZspr12eGzEg7DzfBrHNVgWgk2sXExmtW
+mS0nBPX/+k18LQnwgtskD//uamjwC/IKm6zKp8HIKpnTB4qd4nvyKjWiwoh3O9IQqvPrQ7Dn5ihQMM94Nx
ToAqxubIBMCpjcQSLfEOwy0cZVdgSiS/GRfA45UUViAutoSAE/BN+9FQ4UHZa/+3fc1tBtmLm/qs
KwcSn1QyUtaY5V6NVrHW6yiFysAKbnyAgdI5SlXX1oSXQBQvzptoSKRMu9RKGsP/9HaS+qDmuePIj/
UQdlkTU/tOQom2NsleOXBLZFWVUAF+uhq4Ef/ggQNEOaUE8PenAlfhkeaOlNN9XGbDIOEHs/
dQLONLMABgIVWs5E2mj8a2kC3BjyXIdLtGg2a1XDi57ZeT0eH88tra5hKN7+P8O3X8A1llGx/60Q1/
7GsTSYJHN+FQqmgASfvHnZRgcZNPKAutqjuwq4CVngZcoUxOummdM2aW/H5bsl6m8bgJpGPFFK+8REg61v/
cttv7CWc6syempQ16k56iCXmf6yvY6Mloyij9jBRt1fJLqDE67JBNyRr+rstcOpj0fLIsWld8gqtx19dD3h4GJve
TzGlMe3VZuAsnAv8v31SYwwDMFwypO+xacBjO3Pzht++TrVrwLG9R5HPUTnp2lxOQA33Ym3R
+2i65ktKWcnrUMcQInxAm6zwhMA+yQaCZmDIZAfRlZ54wE9mlaATGoI0N7/tw
                certificate "-----BEGIN CERTIFICATE-----
MIID2DCCAsCgAwIBAgICBnowDQYJKoZIhvcNAQELBQAwUzEJMAcGA1UEBhMAMQkw
BwYDVQQHEwAxFTATBgNVBAoTDGNvbnRhaW5lcmxhYjEJMAcGA1UECxMAMRkwFwYD
VQQDExBzcmxjZW9zMDEgbGFiIENBMB4XDTI0MDIxNjA1MDYwNFoXDTI1MDIxNjA1
MDYwNFowVDEJMAcGA1UEBhMAMQkwBwYDVQQHEwAxFTATBgNVBAoTDGNvbnRhaW5l
cmxhYjEJMAcGA1UECxMAMRowGAYDVQQDExFzcmwxLnNybGNlb3MwMS5pbzCCASIw
DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANKb/Um7TzljvC84vpHKt3FwA9/p
zo94Je1treFJDaH5sVIfHCkGFj0QUcuB9Xc/zEd+O18pY1Xt1/4GdXoYnWlPkXOV
NVJqXt8As/sZOoa4gGTizz0KLOwd/by/FEhMCfIXKOa+5FIC3NgA2LYMYHMTAFYq
EBYku6rcVM96yW4BFnDhatefJf8SFO3wh4AWAQok52H+DxME7rwnBK7B3ITPQKYG
seZZHMC8O65wIHjrUxn+D63Aea6PbJzFlAzT1MaUw3qfMKiErLLXETXg9ylLGugM
TwV9Jh4KwuJTLJch+adhLRIxwipQ+sHtsHG8vjuU8xe+EdgeA4DzMRXNYZsCAwEA
AaOBtDCBsTAOBgNVHQ8BAf8EBAMCB4AwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsG
AQUFBwMBMA4GA1UdDgQHBAUBAgMEBjAfBgNVHSMEGDAWgBSBDbZBxouhQI85egna
FbecTUl/2jBPBgNVHREESDBGggRzcmwxghNjbGFiLXNybGNlb3MwMS1zcmwxghFz
cmwxLnNybGNlb3MwMS5pb4cErBQUA4cQIAEBcgAgACAAAAAAAAAAAzANBgkqhkiG
9w0BAQsFAAOCAQEAaCAzkQkjxx32lvWa78pnUzIZmIUr6K1ZciMeslLuQb1PB4jn
GPiKNXghesVoiAmvUV2H7BBf6fLgVQvRqcSgJwyT50MAyRgaHW8L7XnSJVvXpjMU
uLKyvkUWeWZqWzfy6+nA/YhC1qr3FV3/v9s1BbdyBy/eluRcjpQZRrvNKG4+ZAsZ
JR8yWs3k8fTvybpFxcy7V5W7/oVdcw36N17fmA91X5NElk3reEQagmno7GwLOFfx
b8GpxIvu1JjIUDib0Ri8atZlsymwDlCvPPmhFgixlEwVlsAqmhNDBCfmSlmOvROC
eZT2SM6EUlZ4jOvcKFXtDptmMiGeNg9r0Fp3kA==
-----END CERTIFICATE-----"
                authenticate-client false
                cipher-list [
                    ecdhe-ecdsa-aes256-gcm-sha384
                    ecdhe-ecdsa-aes128-gcm-sha256
                    ecdhe-rsa-aes256-gcm-sha384
                    ecdhe-rsa-aes128-gcm-sha256
                ]
            }
        }
    }

Note:
The following TLS 1.3 ciphers are always enabled and are non-configurable.

• tls_aes_256_gcm_sha384

• tls_aes_128_gcm_sha256

• tls_chacha20_poly1305_sha256

By default, the following TLS 1.2 ciphers are used unless explicitly configured by a user.

• ecdhe-ecdsa-aes256-gcm-sha384

• ecdhe-ecdsa-aes128-gcm-sha256

• ecdhe-rsa-aes256-gcm-sha384

• ecdhe-rsa-aes128-gcm-sha256

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

90

 
 
 
 
Configuration Basics Guide Release 24.7

Management servers

6.3.2 Configuring a TLS profile with TPM Device Identity

Procedure

SR Linux supports configuring a TLS server-profile to use the TPM IDevID (Initial Device Identity) or
oIDevID (owner Issued Initial Device Identity) key and certificate, instead of configuring the private key and
certificate.

Use the command system.tls.server-profile.use-tpm-devid to configure the TLS server to
authenticate clients based on the TPM device IDs and certificates during TLS handshake and session
establishment.

Example:  Configure TLS profile to use IDevID key with IDevID certificate

In the following example, TLS connections are authenticated using the TPM IDevID key and
certificate. This profile affects any new TLS sessions that use it.

--{ * candidate shared default }--[  ]--
info system tls server-profile clab-profile
    system {
        tls {
            server-profile clab-profile {

                use-tpm-devid idevid

            }
        }
    }

Example:  Configure TLS profile to use IDevID key with oIDevID certificate

In the following example, TLS connections are authenticated using the TPM IDevID key and the
operator's device ID certificate (oIDevID). This profile affects any new TLS sessions that use it.

info system tls server-profile clab-profile
    system {
        tls {
            server-profile clab-profile {

                use-tpm-devid oidevid

            }
        }
    }

Note: When the use-tpm-devid parameter is set to oIDevID, and oIDevID is not present,
the system does not revert to IDevID . This ensures that the TLS server is operational only if
oIDevID is present on the CPM.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

91

 
 
 
 
                
                
                
                
Configuration Basics Guide Release 24.7

Management servers

6.3.3 Generating a self-signed certificate

Procedure

From the SR Linux CLI, you can create a self-signed certificate and key. By default, SHA-256 hash
functions with RSA encryption are used for the signature algorithm. Private keys are not encrypted using
DES/3 and are 4096 bits in length.

Example

The following example generates a private key, followed by the self signed certificate:

# tools system tls generate-self-signed email info@nokia.com country us organization nokia
/system/tls:
-----BEGIN PRIVATE KEY-----
MIIJRAIBADANBgkqhkiG9w0BAQEFAASCCS4wggkqAgEAAoICAQC3Q7PnCWjevlFn
--snip--
1ecXRjvpRvIEDUWYqVOioMfCaWxJoTJUX6HgjIY0Z9ktfWiceX1Ka4e3ZxIpEC4p
SvzKsoCTqpQcIk5pCsALhznOO6ArtPc4
-----END PRIVATE KEY-----
-----BEGIN CERTIFICATE-----
MIIE/TCCAuWgAwIBAgIJAKzAUREbPIV1MA0GCSqGSIb3DQEBCwUAMBQxEjAQBgNV
--snip-
BTTcAiQnIIkdJ0niqE+ZcOneSgxP3dKEovWQ+Bh3ES2QLsqbDvBYjz4eBoDigaAZ
KDnK207h3hiKLAaxMbAQeWGiu2ZKoKKdd4QE6OphOw6T
-----END CERTIFICATE-----

This tools command example is equivalent to the following openssl command:

# openssl req -x509 -newkey rsa:4096 -days 365

6.3.4 Generating a certificate signing request

Procedure

You can issue a CLI command that returns a private key and certificate signing request (CSR). This CSR
can be passed to a certificate authority (the same one that the client/server uses to validate certificates on
either side) for the certificate authority to sign the request; the CSR cannot be used as-is.

Example

The following command returns the private key, followed by the CSR:

# tools system tls generate-csr email info@nokia.com country us organization nokia
/system/tls:
-----BEGIN PRIVATE KEY-----
MIIJRAIBADANBgkqhkiG9w0BAQEFAASCCS4wggkqAgEAAoICAQC3Q7PnCWjevlFn
--snip--
1ecXRjvpRvIEDUWYqVOioMfCaWxJoTJUX6HgjIY0Z9ktfWiceX1Ka4e3ZxIpEC4p
SvzKsoCTqpQcIk5pCsALhznOO6ArtPc4
-----END PRIVATE KEY-----
-----BEGIN CERTIFICATE REQUEST-----
MIIC5TCCAc0CAQAwgZ8xCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlh
vy3MjE7rJtmWTg0pTfiuU4BFoAzLhHRN1hl1mXuE2m6XJ8gvBPp2sN7SvieUCy/L
RVTs+/Fmcc4vMjx3t/0hAewIsd7DNe+kVQ==
-----END CERTIFICATE REQUEST-----

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

92

 
 
 
 
Configuration Basics Guide Release 24.7

Management servers

This tools command example is equivalent to the following openssl command:

# openssl req -newkey rsa:4096

6.3.5 SPIFFE

SPIFFE (Secure Production Identity Framework for Everyone) is a framework that enables services to
bootstrap and obtain identity. SPIFFE enables a central authority (CA) to issue signed certificates for
identifying clients and servers, establishing mutual trust among them based on their trust in the CA.

SPIFFE is applicable only for TLS sessions and is not used when system is accessed over SSH/CLI or any
other non-TLS interfaces.

SPIFFE defines an identity document known as the SPIFFE Verifiable Identity Document (SVID). This is a
cryptographically-verifiable document that contains a SPIFFE ID, which represents the identity of a service.
SVIDs can be encoded in two formats: X.509 certificates or JWT tokens1.

Note: SR Linux supports X.509 certificates as SVIDs only.

In an X.509 SVID, the corresponding SPIFFE ID is set as a URI type in the Subject Alternative Name
(SAN) extension (subjectAltName) field. The SVID only supports one URI field in the SAN extension.
You can add multiple IP or DNS fields to the SAN, but there must be only one URI in the SAN.

A SPIFFE-ID is a URI that starts with spiffe scheme, followed by a FQDN and a path that identifies the
user. For example,

spiffe://nokia.com/sa/alice

where, nokia.com refers to the domain name, and alice refers to the user.

SPIFFE is used for authentication only. Authorization is performed by the role assigned to the user referred
by the SPIFFE-ID.

6.3.5.1 Leveraging SPIFFE

The high-level steps for leveraging SPIFFE are as follows:

1. Create two sets of certificates, one for the server and one for the client. These certificates should be

signed by a Certificate Authority (CA).

2. Configure a TLS profile on the system with authenticate-client parameter set to true and the
trust-anchor parameter set to the public certificate of the CA that was used to sign the client and
server certificates. For more information, see Configuring a TLS profile.

3. Reference the TLS profile to use on a TLS supporting server. For configuration examples, see the

sections that correspond to the TLS server you are using:

• For gRPC server configurations, see Configuring a gRPC server.

• For gRIBI server configurations, see the section "Enabling the gRIBI server for a network-instance"

in SR Linux gRIBI Guide.

• For P4Runtime server configurations, see the section "Configuring the P4Runtime server for a

network-instance" in SR Linux P4RT Guide.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

93

 
 
 
 
Configuration Basics Guide Release 24.7

Management servers

Note: SPIFFE is not supported for JSON-RPC servers.

4. Configure a SPIFFE-ID for a user. For instructions, see Configuring SPIFFE-ID for users.

Note:
The TLS supporting server does not check the SPIFFE-ID in the client’s X.509 certificate unless
you enable mTLS (set .system.tls.server-profile[].authenticate.client to
true). Additionally, the presence of a SPIFFE-ID in the client's X.509 certificate does not
necessarily indicate support for mTLS.

6.3.5.2 Configuring SPIFFE-ID for users

Procedure

The SPIFFE-ID list is configured under .system.aaa.authentication.user. The format of SPIFFE-
ID is spiffe://<domain-name>/<user>.

Example: Configure SPIFFE-ID for a local user

--{ * candidate shared default }--[  ]--
# info system aaa authentication user srl-test-user spiffe-ids
    system {
        aaa {
            authentication {
                user srl-test-user {
                    spiffe-ids [
                        spiffe://nokia.com/srl-test-user
                    ]
                }
            }
        }
    }

Example: Configure SPIFFE-ID for a admin user

--{ * candidate shared default }--[  ]--
# info system aaa authentication admin-user spiffe-ids
    system {
        aaa {
            authentication {
                user admin-user {
                    spiffe-ids [
                        spiffe://nokia.com/admin-user
                    ]
                }
            }
        }
    }

6.3.5.3 Using SPIFFE for client authentication (mTLS)

In a handshake with TLS client authentication (authenticate-client enabled), the server expects the
client to present its X.509 certificate.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

94

 
 
 
 
Configuration Basics Guide Release 24.7

Management servers

In cases where the client's X.509 certificate contains a SPIFFE-ID, the SPIFFE-ID is checked for a match
with any SPIFFE-ID configured within the spiffe-ids field in the user configuration. When a match is
found, the client receives the permissions granted to that user. The user is rejected if there is no match.

If the X.509 certificate provided by the client does not contain a SPIFFE-ID, the behavior depends on
whether the TLS supporting server has enabled the use-authentication or not. When enabled, the
HTTP metadata is checked for the username and password. To proceed with authentication, both the
username and password must be provided. When the use-authentication is not enabled, the client is
rejected.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

95

 
 
 
 
Configuration Basics Guide Release 24.7

Logging

7 Logging

SR Linux implements logging via the standard Linux rsyslogd package. With dynamic configuration, log
filters can be defined and passed to remote servers or other specified destinations.

SR Linux log_mgr application supports the standard RFC5424 message format when relaying syslog
messages to remote servers.

RFC 5424 introduces a more structured and extensible syslog message format designed to overcome the
limitations of the earlier syslog formats, such as RFC 3164. RFC 5424 includes features like high-precision
time-stamping with timezone information and support for embedding structured log data.

The main configuration file for rsyslogd is /etc/rsyslog.conf. SR Linux installs a minimal version
of the /etc/rsyslog.conf file and maintains an SR Linux-specific configuration under the /etc/
rsyslog.d/ directory.

You can configure SR Linux logging using the CLI or a northbound API. Although you can add *.conf files
manually in the /etc/rsyslog.d directory, it is not recommended.

SR Linux .conf files under /etc/rsyslog.d use standard rsyslog syntax for configuring filters and
actions within rules.

SR Linux supports configuration of Linux facilities and SR Linux subsystems as sources for log messages
to filter. See the SR Linux Log Events Guide for properties and descriptions of the log messages that can
be generated by SR Linux subsystems.

Logging configuration consists of specifying a source for input log messages, possibly filtering messages
by some pattern, and specifying an output destination.

Templates are easy-to-reuse message formats. rsyslog contains pre-defined templates identified by the
RSYSLOG_ prefix. For information about the supported rsyslog templates, see sections Rsyslog templates
for local buffer, file, or console output and Rsyslog templates for forwarding messages to remote servers.

7.1 Input sources for log messages

SR Linux supports using messages logged to Linux syslog facilities and messages generated by SR Linux
subsystems as input sources for log messages.

Table 2: Linux syslog facilities  describes the Linux syslog facilities that can be used as input sources for
log messages.

Table 2: Linux syslog facilities

Facility

Description

all

audit

auth

All supported Linux syslog facilities

Audit messages

Security/authorization messages that do not contain secret information

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

96

 
 
 
 
Configuration Basics Guide Release 24.7

Logging

Facility

authpriv

console

cron

Description

Security/authorization messages that may contain secret information

Alert messages

Messages generated by cron

daemon

Messages generated by system daemons without their own facility

ftp

kern

local0

local1

local2

local3

local4

local5

local6

local7

lpr

mail

news

ntp

Messages generated by an FTP daemon

Messages generated by the kernel

Local use 0

Local use 1

Local use 2

Local use 3

Local use 4

Local use 5

Local use 6

Local use 7

Messages generated by the line printer subsystem

Messages generated by a mail client or server

Messages generated by the network news subsystem

Messages generated by NTP subsystem

syslog

Messages generated internally by syslog

user

uucp

Messages generated by a user

Messages generated by the UUCP (UNIX-to-UNIX copy) subsystem

Table 3: SR Linux logging subsystem names lists the SR Linux subsystems that produce messages that
can serve as input sources for log messages. By default, SR Linux subsystem messages are logged to
Linux syslog facility local6.

Table 3: SR Linux logging subsystem names

Subsystem

Description

aaa

Messages generated by the aaa_mgr application (not including
accounting messages)

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

97

 
 
 
 
Configuration Basics Guide Release 24.7

Logging

Subsystem

Description

accounting

Accounting messages generated by the aaa_mgr application

acl

app

Messages generated through an ACL log action

Messages generated by the app_mgr application

arpnd

Messages generated by the arp_nd_mgr application

bfd

bgp

Messages generated by the bfd_mgr application

Messages generated by the bgp_mgr application

chassis

Messages generated by the chassis_mgr application

fib

gnmi

json

linux

lldp

mgmt

mpls

netinst

policy

sdk

Messages generated by the fib_mgr application

Messages generated by the grpc_server application

Messages generated by the json_rpc_server application

Messages generated by the linux_mgr application

Messages generated by the lldp_mgr application

Messages generated by the mgmt_svr application

Messages generated by the mpls_mgr application

Messages generated by the net_inst_mgr application

Messages generated by the policy_mgr application

Messages generated by the sdk_mgr application

staticroute

Messages generated by the static_route_mgr application

xdp

Messages generated by the xdp_mgr application

7.2 Filters for log messages

You can configure filters to target specific messages or groups of log messages captured within the input
message source.

A filter can specify the set of messages generated by a Linux facility at a specified priority. For example,
messages generated by the kernel that have a priority of warning or higher, or mail facility messages that
have a priority of critical.

Filtering can be performed for messages generated by a specific SR Linux subsystem. For example,
messages generated by the aaa_mgr application or messages generated by the chassis_mgr application.
SR Linux subsystem messages go to a specified Linux facility (by default it is local6), and you can create
filters for subsystem-specific messages from this facility.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

98

 
 
 
 
Configuration Basics Guide Release 24.7

Logging

Table 4: Logging priorities  describes the logging priorities in order of severity.

Table 4: Logging priorities

Code

Priority name

Description

0

1

2

3

4

5

6

7

emergency

System is unusable

alert

critical

error

warning

notice

Action must be taken immediately

Critical conditions

Error conditions

Warning conditions

Normal but significant conditions

informational

Informational messages

debug

Debug-level messages

7.3 Output destinations for log messages

You can set the action that the SR Linux takes for input messages that meet the criteria specified in a filter.
This action can include sending the messages to a destination such as a log file, the console, or a remote
host.

For example, you can configure the SR Linux to send messages generated by the kernel that have priority
warning to a file called /var/log/srlinux/file/kernel-warning.

Messages generated by an SR Linux subsystem, such as the bgp_mgr or grpc_server application, can be
sent to specified destinations.

Actions for messages matching a filter can include the following:

• Send the messages to a specified file in the /var/log/srlinux/file/ directory.

• Send the messages to a buffer. A buffer is similar to a file, but uses memory as storage and is not

persistent across system reboots. Messages sent to a buffer are stored in the /var/log/srlinux/
buffer/ directory.

• Send the messages to the console; that is, the Linux device /dev/console, which may be assigned to

a serial device in hardware.

• Send the messages to one or more remote servers. You can specify a network-instance where rsyslogd

is run and which serves as the source for the messages.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

99

 
 
 
 
Configuration Basics Guide Release 24.7

Logging

7.4 Defining filters

Procedure

Filters target specific messages or groups of log messages in the input message source. You can define
the following filter criteria for log messages:

•

specific text in a message

• prefix text at the beginning of a message

• Linux facility that generated the message

•

•

regular expression matching text in the message

syslog tag of the message

Example: Match kernel messages with warning or higher priority

The following example shows a configuration that creates a filter that matches messages from the
Linux facility kernel that have a priority of warning or higher. See Table 4: Logging priorities  for a list
of logging priorities.

--{ * candidate shared default }--[  ]--
# info system logging
    system {
        logging {
            filter fl {
                facility kern {
                    priority {
                        match-above warning
                    }
                }
            }
        }
    }

Example: Match informational or higher accounting messages

The following example creates a filter that matches messages from the Linux facility local6 (where
SR Linux subsystem messages are logged by default) that have a priority of informational or higher
and contain the text accounting. This filter can be used to match messages from the SR Linux
accounting subsystem.

--{ * candidate shared default }--[  ]--
# info system logging
    system {
        logging {
            filter f2 {
                contains accounting
                facility local6 {
                    priority {
                        match-above informational
                    }
                }
            }
        }
    }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

100

 
 
 
 
Configuration Basics Guide Release 24.7

Logging

7.5 Logging destination configuration

You can configure the SR Linux to send logging information to the following destinations:

•

log file

• memory buffer storage

•

console (/dev/console)

• one or more remote servers

7.5.1 Specifying a log file destination

Procedure

The SR Linux can send log messages to a specified log file. By default, the log file resides in the /var/
log/srlinux/file directory. You can specify the retention policy for the file, including the maximum size
(default 10 Mb), as well as the number of files to keep in the rotation (default four files).

Example: Send critical cron messages to a file

The following example uses messages from Linux facility cron as input, filters the messages for those
that have critical priority, and sends the filtered messages to the file /var/log/srlinux/file/
cron-critical:

--{ * candidate shared default }--[  ]--
# info system logging
    system {
        logging {
            file cron-critical {
                facility cron {
                    priority {
                        match-exact [
                            critical
                        ]
                    }
                }
            }
        }
    }

Example: Send messages matching a filter to a file

The following example sends messages matching criteria specified in filter f1 to the file /var/log/
srlinux/file/f1-match:

--{ * candidate shared default }--[  ]--
# info system logging
    system {
        logging {
            file fl-match {
                filter [
                    f1
                ]
            }
        }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

101

 
 
 
 
Configuration Basics Guide Release 24.7

Logging

    }

Example: Send specific message types to a file

The following example uses messages generated by the SR Linux AAA subsystem (that is,
messages generated by the aaa_mgr application, but not including accounting messages) as input.
The messages are filtered for those that have warning or informational priority, and the filtered
messages are sent to the file /var/log/srlinux/file/aaa-warn-info.

--{ * candidate shared default }--[  ]--
# info system logging
    system {
        logging {
            file aaa-warn-info {
                subsystem aaa {
                    priority {
                        match-exact [
                            warning
                            informational
                        ]
                    }
                }
            }
        }
    }

7.5.2 Specifying a buffer destination

Procedure

You can configure SR Linux to send log messages to a buffer. A buffer is similar to a file, except that a
buffer uses memory as storage and is not persistent across system reboots.

When the SR Linux device boots, it creates a non-swappable tmpfs virtual filesystem at /var/log/
srlinux/buffer. This tmpfs filesystem has a fixed size of 512 Mb, which is reserved for buffer usage.

When a buffer is created through a commit transaction, the SR Linux verifies that there is enough buffer
space available to contain all configured buffers based on their retention policies. If sufficient space is not
available, the commit transaction fails.

Example

The following example sends messages matching criteria specified in filter f1 to the buffer /var/
log/srlinux/buffer/f1-match. A retention policy is specified so that when the buffer reaches
5,000,000 bytes, messages are written to a new buffer. After five buffers are filled, the oldest one is
overwritten.

--{ * candidate shared default }--[  ]--
# info system logging
    system {
        logging {
            buffer f1-match {
                rotate 5
                size 5000000
                filter [
                    f1
                ]
            }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

102

 
 
 
 
Configuration Basics Guide Release 24.7

Logging

        }
    }

7.5.3 Specifying the console as destination

Procedure

You can specify the console as a destination for log messages. The console refers to Linux device /dev/
console, The console may be assigned to a serial device in hardware.

Example

The following example uses messages generated by the SR Linux accounting subsystem as input,
filters the messages for those that have informational priority or higher, and sends the filtered
messages to /dev/console:

--{ * candidate shared default }--[  ]--
# info system logging
    system {
        logging {
            console {
                subsystem accounting {
                    priority {
                        match-above informational
                    }
                }
            }
        }
    }

7.5.4 Specifying a remote server destination

Procedure

The SR Linux can send log messages to one or more remote servers. You can specify the network-
instance that the SR Linux uses to contact the remote servers. The rsyslogd process is run within the
specified network-instance.

Example

The following example uses messages generated by the SR Linux BGP subsystem (that is,
messages generated by the bgp_mgr application) as input, filters the messages for those that have
alert priority or higher, and sends the filtered messages to a remote server. The messages are
sourced from the mgmt network-instance.

--{ * candidate shared default }--[  ]--
# info system logging
    system {
        logging {
            network-instance mgmt
            remote-server 192.168.0.3 {
                   subsystem bgp {
                       priority {
                           match-above alert
                       }
                   }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

103

 
 
 
 
Configuration Basics Guide Release 24.7

Logging

               }
           }
       }   
   }

7.6 Specifying a Linux syslog facility for SR Linux subsystem messages

Procedure

All of the messages generated by SR Linux subsystems (see Table 3: SR Linux logging subsystem names)
are logged to the same Linux syslog facility. This behavior allows you to filter messages from all SR Linux
subsystems by capturing logs from this facility.

By default, SR Linux subsystem messages are logged to the Linux syslog facility local6. You can optionally
specify a different syslog facility. See Table 2: Linux syslog facilities  for the syslog facilities.

Example

The following example changes the Linux syslog facility where messages generated by SR Linux
subsystems are logged from the default of local6 to local7:

--{ * candidate shared default }--[  ]--
# info system logging
    system {
        logging {
            subsystem-facility local7
        }
    }

7.7 Specifying FQDN for logging hostnames

Procedure

SR Linux allows you to configure the logging system to use either the system hostname or the system
FQDN in the hostname field of the message

Example

The following example configures SR Linux to use the system FQDN for logging messages.

--{ * candidate shared default }--[  ]--
# info system logging
    system {
        logging {
            use-fqdn true
        }
    }

When the use-fqdn option is set to true, the system FQDN is used in the syslog server hostname
field. The default is false. This ensures backward compatibility with previous releases that only
supported using the system hostname for logging messages. The domain name must be configured
for the FQDN to take effect. See Configuring a domain name.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

104

 
 
 
 
Configuration Basics Guide Release 24.7

Logging

7.8 Rsyslog templates for local buffer, file, or console output

Procedure

SR Linux log_mgr application supports the following rsyslog templates for local buffer, file, or console
output.

• RSYSLOG_DebugFormat

• RSYSLOG_TraditionalFileFormat

• RSYSLOG_FileFormat

Example: Using RSYSLOG_DebugFormat

The RSYSLOG_DebugFormat template is mainly meant for debugging and diagnostic purposes and
must not be used for remote forwarding or production environment.

--{ * candidate shared default }--[  ]--
# info system logging file messages
    system {
        logging {
            file messages {
                format RSYSLOG_DebugFormat
                rotate 3
                size 10000000
                facility local6 {
                    priority {
                        match-above warning
                    }
                }
            }
        }
    }

Example:  Using RSYSLOG_TraditionalFileFormat

The message formatRSYSLOG_TraditionalFileFormat has low-precision timestamps.

--{ * candidate shared default }--[  ]--
# info system logging file messages
    system {
        logging {
            file messages {
                format RSYSLOG_TraditionalFileFormat
                rotate 3
                size 10000000
                facility local6 {
                    priority {
                        match-above warning
                    }
                }
            }
        }
    }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

105

 
 
 
 
Configuration Basics Guide Release 24.7

Logging

Example: Using RSYSLOG_FileFormat

The default message format RSYSLOG_FileFormat supports high-precision timestamps and
timezone information, as described in RFC 3339.

--{ * candidate shared default }--[  ]--
# info system logging file messages
    system {
        logging {
            file messages {
                format RSYSLOG_FileFormat
                rotate 3
                size 10000000
                facility local6 {
                    priority {
                        match-above warning
                    }
                }
            }
        }
    }

7.9 Rsyslog templates for forwarding messages to remote servers

Procedure

SR Linux log_mgr application supports the following rsyslog templates for forwarding messages to remote
servers.

• RSYSLOG_ForwardFormat

• RSYSLOG_SyslogProtocol23Format

• RSYSLOG_TraditionalForwardFormat

Example: Using RSYSLOG_ForwardFormat

The message format RSYSLOG_ForwardFormat forwards logs with high-precision timestamps.

--{ * candidate shared default }--[  ]--
# info system logging remote-server 192.0.2.1 format
    system {
        logging {
            remote-server 192.0.2.1 {
                format RSYSLOG_ForwardFormat
            }
        }
    }

Example: Using RSYSLOG_SyslogProtocol23Format

The message format RSYSLOG_SyslogProtocol23Format guarantees reliable and efficient
logging of important system events. This default message format is defined in IETF internet-draft ietf-
syslog-protocol-23 and closely adheres to the syslog standard RFC5424.

--{ * candidate shared default }--[  ]--
# info system logging remote-server 192.0.2.1 format
    system {

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

106

 
 
 
 
Configuration Basics Guide Release 24.7

Logging

        logging {
            remote-server 192.0.2.1 {
                format RSYSLOG_SyslogProtocol23Format
            }
        }
    }

Example: Using RSYSLOG_TraditionalForwardFormat

The message format RSYSLOG_TraditionalForwardFormat forwards logs with low-precision
timestamps.

--{ * candidate shared default }--[  ]--
# info system logging remote-server 192.0.2.1 format    system {
        logging {
            remote-server 192.0.2.1 {
                format RSYSLOG_TraditionalForwardFormat
            }
        }
    }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

107

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

8 Network-instances

On the SR Linux device, you can configure one or more virtual routing instances, known as ‟network-
instances”. Each network-instance has its own interfaces, its own protocol instances, its own route table,
and its own FIB.

When a packet arrives on a subinterface associated with a network-instance, it is forwarded according to
the FIB of that network-instance. Transit packets are typically forwarded out another subinterface of the
network-instance.

The SR Linux supports three types of network-instances: default, ip-vrf, and mac-vrf. Type default is the
default network-instance and only one of this type is supported. Type ip-vrf is the regular network-instance;
you can create multiple network-instances of this type.

Type mac-vrf functions as a broadcast domain and is associated with an ip-vrf network-instance via an
Integrated Routing and Bridging (IRB) to support tunneling of Layer 2 traffic across an IP network. See The
mac-vrf network-instance.

Initially, the SR Linux has a default network-instance and no ip-vrf or mac-vrf network-instances.

A management network-instance, which isolates management network traffic from other network-instances
configured on the device, is created by default, with the mgmt0 port automatically added to it. See
Configuring the management network-instance and the SR Linux Interfaces Guide.

8.1 Basic network-instance configuration

The following example creates network-instance ‟black” and associates two network subinterfaces and one
loopback subinterface with it.

The configuration administratively enables the network-instance, specifies a description, and assigns it a
router ID. The router ID is optional and is used as a default router identifier for protocols running within the
network-instance.

The network-instance is configured to export routes and neighbors to the Linux routing table.

--{ candidate shared default }--[  ]--
# info network-instance black
    network-instance black {
        type ip-vrf
        admin-state enable
        description "Sample network instance"
        router-id 192.168.2.1
        ip-forwarding {
            receive-ipv4-check true
        }
        interface ethernet-1/1.1 {
        }
        interface ethernet-1/2.1 {
        }
        interface lo0.1 {
        }
        protocols {
            linux {
                export-routes true

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

108

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

                export-neighbors true
            }
        }
    }

In the preceding example, the receive-ipv4-check parameter is set to true; if an IPv4 packet is received
on a subinterface of this network-instance, and the IPv4 operational status of the subinterface is down,
then the packet is discarded. When the receive-ipv4-check parameter is set to false, IPv4 packets are
received on all subinterfaces of this network-instance that are up, even if they do not have IPv4 addresses.

8.2 Path MTU discovery

Path MTU discovery is the technique for determining the MTU size on the network path between hosts.
On the SR Linux, path MTU discovery is enabled by default for all network-instances and can be manually
enabled or disabled per network-instance.

If path MTU discovery is disabled, the system drops the MTU for the session to the number of bytes
specified by the system-level min-path-mtu parameter when an ICMP fragmentation-needed message is
received; by default, the min-path-mtu setting is 552 bytes.

--{ * candidate shared default }--[ ]--
# info network-instance default 
    network-instance default {
        mtu {
            path-mtu-discovery true
        }
    } 

--{ * candidate shared default }--[ ]--
# info system mtu 
    system {
        mtu {
            min-path-mtu 552
        }
    }

8.3 Static routes

Within a network-instance, you can configure static routes. Each static route is associated with an IPv4
prefix or an IPv6 prefix, which represents the packet destinations matched by the static route. Each static
route belongs to a specific network-instance. Different network-instances can have overlapping routes
(static or otherwise) because each network-instance installs its own routes into its own set of route tables
and FIBs.

Each static route must be associated with a statically configured next-hop group, which determines how
matching packets are handled: either perform a blackhole discard action or a forwarding action. The next-
hop group can specify a list of one or more nexthops (up to 128). SR Linux supports the following types of
next-hops in a next-hop group:

• Regular IP-numbered next-hops

Matching IP packets are forwarded, without encapsulation, towards the next-hop, with one or more
resolution steps deciding the outbound interface and MAC address to use for forwarding. If the resolve

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

109

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

flag is set to false, only a direct route can be used to resolve the IPv4 or IPv6 next-hop address; if
the resolve flag is set to true, any route in the FIB can be used to resolve the IPv4 or IPv6 next-hop
address.

• MPLS next-hops (7250 IXR-6/10/6e/10e systems only)

Matching IP packets are forwarded, with an added MPLS label stack, towards the next-hop, with one
resolution step deciding the outbound interface and MAC address to use for forwarding. The resolve
flag must be set to false, because only a direct route can be used to resolve the IPv4 or IPv6 next-hop
address.

• GRE tunnel next-hops (7250 IXR-6/10/6e/10e systems only)

Matching IP packets are forwarded, with added IP/GRE encapsulation, towards a remote GRE tunnel
endpoint. A GRE tunnel next-hop can be configured with an IPv4 or IPv6 address of the remote GRE
tunnel endpoint; this is the destination address in the outer IP header of the IP/GRE packet.

A next-hop group can have up to 128 GRE tunnel next-hops; more than one next-hop implies
ECMP. An ECMP hash calculation using header fields of the payload packet (before IP/GRE
encapsulation) selects one of these next-hops and in so doing, selects an outer IP destination for the
GRE encapsulation.

A GRE tunnel next-hop is resolved if the destination address is reachable (using any route type) in the
route table. If a GRE tunnel endpoint is unresolved, it is removed from the next-hop-group ECMP set.
If a next-hop group has no resolved GRE tunnel next-hops, it is not usable and all referencing static
routes are removed from the route table and FIB.

Each static route has a specified metric and preference. The metric is the IGP cost to reach the
destination. The preference specifies the relative degree this static route is preferred compared to other
static and non-static routes available for the same IP prefix in the same network-instance.

A static route is installed in the FIB for the network-instance if the following conditions are met:

• The route has the lowest preference value among all routes (static and non-static) for the IP prefix.

• The route has the lowest metric value among all static routes for the IP prefix.

If BGP is running in a network-instance, all static routes of that same network-instance are automatically
imported into the BGP local RIB so that they can be redistributed as BGP routes, subject to BGP export
policies.

You can use Bidirectional Forwarding Detection (BFD) to monitor reachability between the router and the
configured next hops for a static route, making BFD sessions between the local router and the defined next
hops a condition for an associated static route and next hops to be operationally active. See Configuring
failure detection for static routes.

8.3.1 Configuring static routes

Procedure

To configure static routes, you specify route prefixes to point to next-hop groups, along with the metric and
preference.

Example: Configure IPv4 and IPv6 static routes

The following example configures IPv4 and IPv6 static route prefixes to point to next-hop groups and
specifies a preference and metric for each one:

--{ * candidate shared default }--[ network-instance black ]--

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

110

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

# info static-routes
    static-routes {
        route 192.168.18.0/24 {
            admin-state enable
            metric 1
            preference 5
            next-hop-group static-ipv4-grp
        }
        route 2001:1::192:168:18:0/64 {
            admin-state enable
            metric 1
            preference 6
            next-hop-group static-ipv6-grp
        }
    }

Example: Configure IP-numbered next-hop groups

The following example configures the next-hop groups for the static routes:

--{ * candidate shared default }--[ network-instance black ]--
# info next-hop-groups
    next-hop-groups {
        group static-ipv4-grp {
            admin-state enable
            nexthop 1 {
                ip-address 192.0.2.22
            }
            nexthop 2 {
                ip-address 192.0.2.45
                resolve true
            }
        }
        group static-ipv6-grp {
            admin-state enable
            blackhole {
            }
        }
    }
}

In this example, an IPv4 next-hop group is configured with two next-hops. The resolve true
setting allows any route in the FIB to be used to resolve the IPv4 next-hop address, provided the
resolution depth is not more than 2.

The IPv6 next-hop group is configured to perform a blackhole discard action for matching packets.

Example: Configure a MPLS next-hop group

The following example specifies a MPLS next-hop for nhop_group_1. Only one MPLS next-hop
is supported per next-hop group. In this example, the label for outgoing traffic to MPLS next-hop
192.35.1.5 is swapped to 1001.

--{ * candidate shared default }--[  ]--
# info network-instance default next-hop-groups group nhop_group_1
    network-instance default {
        next-hop-groups {
            group nhop_group_1 {
                nexthop 0 {
                    ip-address 192.35.1.5
                    resolve false
                    pushed-mpls-label-stack [

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

111

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

                        1001
                    ]
                }
            }
        }
    }

Example: GRE tunnel next-hop group

The following example specifies a GRE tunnel next-hop group. Packets are forwarded, with added IP/
GRE encapsulation, towards a remote GRE tunnel endpoint specified by the destination-ip.

--{ * candidate shared default }--[  ]--
# info network-instance default next-hop-groups group NHG1
    network-instance default {
        next-hop-groups {
            group NHG1 {
                nexthop 1 {
                    encapsulate-header gre
                    gre {
                        destination-ip 20.20.20.1
                    }
                }
                nexthop 2 {
                    encapsulate-header gre
                    gre {
                        destination-ip 20.20.20.2
                    }
                }
                nexthop 3 {
                    encapsulate-header gre
                    gre {
                        destination-ip 20.20.20.3
                    }
                }
            }
        }
    }

You can optionally specify the source-ip for a next-hop in a GRE next-hop group. If the source-
ip is not specified, the lowest-numbered loopback address of the associated network-instance is
used.

Example: Configure a link-local address in an IPv6 next-hop group

IPv6 next-hop addresses in a static next-hop group can be global unicast IPv6 addresses or IPv6 link
local addresses. If you configure an IPv6 LLA, you specify it with a zone, as a string in the following
format:

<link-local-ipv6-address>%<subinterface-name>

where <subinterface-name> has the format <interface-name>.<subinterface-index> and corresponds
to a configured interface.subinterface object in the interface configuration hierarchy on
the SR Linux device.

The following example configures an IPv6 LLA for a subinterface and specifies it as a next-hop in a
next-hop group.

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/10 subinterface 1 ipv6
    interface ethernet-1/10 {

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

112

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

        subinterface 1 {
            ipv6 {
                admin-state enable
                address fe80::24:1/64 {
                    type link-local-unicast
                }
            }
        }
    }

--{ * candidate shared default }--[  ]--
# info network-instance default next-hop-groups group ecmp nexthop 1
    network-instance default {
        next-hop-groups {
            group g1 {
                nexthop 1 {
                    ip-address fe80::25:1:2%ethernet-1/10.1
                    resolve false
                    failure-detection {
                        enable-bfd {
                            local-address fe80::25:1:1
                        }
                    }
                }
            }
        }
    }

Example: Associate a static route with a tag-set

You can associate a static route with a tag-set, which is defined under routing-policy. The following
example defines a tag-set, then associates it with a static route.

--{ * candidate shared default }--[  ]--
# info routing-policy
    routing-policy {
        tag-set ts1 {
            tag-value [
                2
                4
            ]
        }
    }

--{ * candidate shared default }--[  ]--
# info network-instance default static-routes
    network-instance default {
        static-routes {
            route 1.1.1.1/32 {
                tag-set ts1
            }
        }
    }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

113

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

8.3.2 Configuring failure detection for static routes

Procedure

You can use BFD as a failure detection mechanism for monitoring the reachability of next hops for static
routes. When BFD is enabled for a static route, it makes an active BFD session between the local router
and the defined next hops required as a condition for a static route to be operationally active.

You enable BFD for specific next-hop groups; as a result, BFD is enabled for any static route that refers
to the next-hop group. If multiple next hops are defined within the next-hop group, a BFD session is
established between the local address and each next hop in the next-hop group.

A static route is considered operationally up if at least one of the configured next-hop addresses can
establish a BFD session. If the BFD session fails, the associated next hop is removed from the FIB as an
active next hop.

Example

The following example enables BFD for a static route next hop:

--{ * candidate shared default }--[ network-instance black ]--
# info next-hop-groups
    next-hop-groups {
        group static-ipv4-grp {
            admin-state enable
            nexthop 1 {
                failure-detection {
                    enable-bfd {
                        local-address 192.0.2.1
                    }
                }
            }
        }
    }

A BFD session is established between the address configured with the local-address parameter and
each next-hop address before that next-hop address is installed in the forwarding table.

All next-hop BFD sessions share the same timer settings, which are taken from the BFD
configuration for the subinterface where the address in local-address parameter is configured. See
"Bidirectional Forwarding Detection" in the SR Linux OAM and Diagnostics Guide.

8.4 Aggregate routes

You can specify aggregate routes for a network-instance. Each aggregate route is associated with an IPv4
prefix or an IPv6 prefix, which represents the packet destinations matched by the aggregate route. As
with static routes, each aggregate route belongs to a specific network-instance, though different network-
instances can have overlapping routes because each network-instance installs its own routes into its own
set of route tables and FIBs.

An aggregate route can become active when it has one or more contributing routes. A route contributes to
an aggregate route if all of the following conditions are met:

• The prefix length of the contributing route is greater than the prefix length of the aggregate route.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

114

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

• The prefix bits of the contributing route match the prefix bits of the aggregate route up to the prefix

length of the aggregate route.

• There is no other aggregate route that has a longer prefix length that meets the previous two conditions.

• The contributing route is actively used for forwarding and is not an aggregate route itself.

That is, a route can only contribute to a single aggregate route, and that aggregate route cannot recursively
contribute to a less-specific aggregate route.

Aggregate routes have a fixed preference value of 130. If there is no route to the aggregate route prefix
with a numerically lower preference value, then the aggregate route, when activated by a contributing
route, is installed into the FIB with a blackhole next hop. It is not possible to install an aggregate route into
the route-table or as a BGP route without also installing it in the FIB.

The aggregate routes are commonly advertised by BGP or another routing protocol so that the individual
contributing routes no longer need to be advertised.

This process can speed up routing convergence and reduce RIB and FIB sizes throughout the network.
If BGP is running in a network-instance, all active aggregate routes of that network-instance are
automatically imported into the BGP local RIB so they can be redistributed as BGP routes, subject to BGP
export policies.

8.4.1 Configuring aggregate routes

Procedure

To specify an aggregate route, you configure the aggregator address setting, which identifies the
aggregating router. By default, this is the configured router ID of the BGP instance, or 0 if BGP is not
enabled.

Example

--{ * candidate shared default }--[ network-instance black ]--
# info aggregate-routes
    aggregate-routes {
        route 192.0.2.0/24 {
            aggregator {
                address 192.168.0.1
            }
            summary-only true
            generate-icmp true
        }
    }

When the summary-only parameter is set to true, activation of an aggregate route automatically
blocks the advertisement of all of its contributing routes by BGP.

The generate-icmp true setting causes the router to generate ICMP unreachable messages for the
dropped packets.

8.5 Route preferences

A route can be learned by the router from different protocols, in which case, the costs are not comparable.
When a route is learned from different protocols, the preference value is used to decide which route is

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

115

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

installed in the forwarding table if several protocols calculate routes to the same destination. The route with
the lowest preference value is selected.

Different protocols must not be configured with the same preference. If protocols are configured with the
same preference, the tiebreaker is per the default preference table as defined in Table 5: Route preference
defaults by route type. If multiple routes are learned with an identical preference using the same protocol,
the lowest cost route is used.

Table 5: Route preference defaults by route type

Route Type

Preference

Configurable

Direct attached

Static routes

OSPF internal

IS-IS level 1 internal

IS-IS level 2 internal

OSPF external

IS-IS level 1 external

IS-IS level 2 external

BGP

Aggregate routes

Note:

0

5

10

15

18

150

160

165

170

130

No

Yes

Yes1

Yes

Yes

Yes

Yes

Yes

Yes

No

1. Preference for OSPF internal routes is configured with the preference command.

8.6 IP tunnel decapsulation groups

Within the default network-instance, you can configure IP tunnel decapsulation groups. In an IP tunnel
decapsulation group, you specify a termination-subnet and an allowed-payload type. An IP/GRE packet
received on any routed subinterface of the default network instance that matches the termination-subnet
is decapsulated. If the inner header of the decapsulated packet indicates the packet is an allowed-payload
type, it is forwarded according to the packet's inner header. If the decapsulated packet is not an allowed-
payload type, it is dropped and not forwarded further.

A received IP/GRE packet that does not match the termination subnet in an IP tunnel decapsulation group
is forwarded based on IP route lookup. If the longest matching route is a host route, then the packet is
dropped unless it is explicitly allowed by a non-default CPM-filter policy.

Note:

•

IP tunnel decapsulation groups are supported only on the default network instance.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

116

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

• The termination-subnet lookup for a IP/GRE packet is done before IP longest prefix match
lookup, so decapsulation occurs for a packet matching the termination-subnet even if the
packet's outer IP address matches a local interface IP address or IP route in the FIB.

• Decapsulation occurs regardless of whether the GRE header specifies version 0 or 1.

• Decapsulation does not occur if the GRE version 0 header includes a key or sequence

number. In this case, the packet is forwarded based on IP route lookup on the outer IP DA. If
the longest matching route is a host route, the packet is dropped unless it is explicitly allowed
by a non-default CPM-filter policy.

8.6.1 Configuring an IP tunnel decapsulation group

Procedure

To configure an IP tunnel decapsulation group, specify a termination-subnet and an allowed-payload type.

Example

The following example configures an IP tunnel decapsulation group in the default network instance.
The termination-subnet is 192.168.1.0/24, and the allowed-payload type is MPLS. IP/GRE packets
that match this subnet are decapsulated. If the payload of the decapsulated packet is MPLS, it is
forwarded based on its inner header; otherwise, the decapsulated packet is dropped.

--{ * candidate shared default }--[  ]--
# info network-instance default ip-tunnel-decapsulation
    network-instance default {
        ip-tunnel-decapsulation {
            group dcgrp1 {
                allowed-payloads [
                    mpls
                ]
                termination-subnet 192.168.1.0/24 {
                }
            }
        }
    }

8.7 Displaying network-instance status

Procedure

Use the show network-instance command to display status information about network-instances
configured on the device.

Example: Display information about all network-instances

To display information about all configured network-instances, including the router ID, description,
administrative, and operational state:

--{ show }--
# show network-instance summary
+---------+---------+--------+-------+------------+--------------------------------+
|  Name   |  Type   | Admin  | Oper  | Router id  |   Description                  |
|         |         | state  | state |            |                                |

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

117

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

+=========+=========+========+=======+============+================================+
| default | default | enable | up    | 5.5.5.5    | Sample network instance        |
| mgmt    | ip-vrf  | enable | up    |            | Management network instance    |
| red     | ip-vrf  | enable | up    |55.55.55.55 | Network instance for bgp tests |
+---------+---------+--------+-------+------------+--------------------------------+

Example: Display information about one network-instance

To limit the display to a single network-instance:

--{ show }--
# show network-instance default summary
+---------+---------+--------+-------+---------+----------------------------+
|  Name   |  Type   | Admin  | Oper  | Router  |         Description        |
|         |         | state  | state |   id    |                            |
+=========+=========+========+=======+=========+============================+
| default | default | enable | up    | 5.5.5.5 | "Sample network instance"  |
+---------+---------+--------+-------+---------+----------------------------+

Example: Display information about attached interfaces

To display information about the interfaces attached to a network-instance:

--{ show }--
# show network-instance default interfaces
===================================================================
Net instance    : default
Interface       : ethernet-1/1.1
Oper state      : up
Ip mtu          : 1500
                  Prefix                      Origin        Status
  =================================================================
  192.35.1.0/31                             static
  2001:192:35:1::/127                       static       preferred
  fe80::201:5ff:feff:0/64                   link-layer   preferred
===================================================================
Net instance    : default
Interface       : lo0.1
Oper state      : up
                  Prefix                      Origin        Status
  =================================================================
  5.5.5.5/32                                static
  2001:5:5:5::5/128                         static       preferred
===================================================================

The command displays the operational state, IP MTU, and assigned IPv4/IPv6 prefix for each
interface. If the operational state for an interface is down, the reason for the interface being down is
shown.

Example: Display interface information using an interface reference

If you configure an interface reference for an interface (see Configuring interface references) in the
network-instance configuration, you can display information about the interface using the interface
reference name.

The following example configures network-instance "black" to use the interface reference "red" to
refer to interface ethernet-1/10, subinterface 1.

--{ + candidate shared default }--[  ]--
# info network-instance black
    network-instance black {

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

118

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

        interface red {
            interface-ref {
                interface ethernet-1/10
                subinterface 1
            }
        }
    }

In the context of network instance black, you can use the name red to refer to interface ethernet-1/10,
subinterface 1. For example:

--{ + running }--[ network-instance black ]--
# show interfaces red
===========================================================================
Net instance    : black
Interface       : ethernet-1/10.1 (red)
Type            : routed
Oper state      : down
Oper down reason: subif-down
Ip mtu          : 1500
===========================================================================

8.8 The mac-vrf network-instance

The network-instance type mac-vrf is associated with a network-instance of type default or ip-vrf via an
IRB interface.

The mac-vrf network-instance type functions as a broadcast domain. Each mac-vrf network-instance
builds a bridge table composed of MAC addresses that can be learned via the data path on network-
instance interfaces or via static configuration. You can configure the size of the bridge table for each mac-
vrf network instance, as well as the aging for dynamically learned MAC addresses and other parameters
related to the bridge table.

The mac-vrf network-instance type features a mac duplication mechanism that monitors MAC address
moves across network-instance interfaces and across interfaces.

8.8.1 MAC selection

Each mac-vrf network-instance builds a bridge table to forward Layer 2 frames based on a MAC address
lookup. The SR Linux selects the MAC addresses to be sent for installation to the line card (eXtensible
Data Path (XDP)), based on the following priority:

1. Local application MACs

2. Local static MACs

3. EVPN static (MACs coming from a MAC/IP route with the static bit set)

4. Local duplicate MACs

5. Learned or EVPN-learned MACs

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

119

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

8.8.2 MAC duplication detection and actions

MAC duplication is the mechanism used by SR Linux for loop prevention. MAC duplication monitors MAC
addresses that move between subinterfaces. It consists of detection, actions, and process restarts.

8.8.2.1 MAC duplication detection

Detection of duplicate MAC addresses is necessary when extending broadcast domains to multiple leaf
nodes. SR Linux supports a MAC duplication mechanism that monitors MAC address moves across
network-instance interfaces.

A MAC address is considered a duplicate when its number of detected moves is greater than a configured
threshold within a configured time frame where the moves are observed. When exceeding the threshold,
the system holds on to the prior local destination of the MAC and executes an action.

8.8.2.2 MAC duplication actions

The action taken when detecting one or more MAC addresses as duplicate on a subinterface can be
configured for the mac-vrf network instance or for the subinterface. The following are the configurable
actions:

• oper-down

When one or more duplicate MAC addresses are detected on the subinterface, the subinterface is
brought operationally down.

• blackhole

On detection of a duplicate mac on the subinterface, the mac is blackholed.

• stop-learning

On detection of a duplicate mac on the subinterface, the MAC address is no longer relearned on this or
any subinterface. This is the default action for a mac-vrf network instance.

• use-net-instance-action

(Only available for subinterfaces) Use the action specified for the mac-vrf network instance. This is the
default action for a subinterface.

8.8.2.3 MAC duplication process restarts

When at least one duplicate MAC address is detected, the duplicate MAC addresses are visible in the state
datastore and can be displayed with the info from state network-instance bridge-table mac-duplication
duplicate-entries CLI command.

8.8.2.4 Configurable hold-down-time

The info from state network-instance bridge-table mac-duplication duplicate-entries command also
displays the hold-down-time for each duplicate MAC address. When the hold-down-time expires for all of
the duplicate MAC addresses for the subinterface, the oper-down or stop-learning action is cleared, and
the subinterface is brought operationally up or starts learning again.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

120

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

The hold-down-time is configurable from between 2 and 60 minutes. You can optionally specify indefinite
for the hold-down-time, which prevents the oper-down or stop-learning action from being cleared after a
duplicate MAC address is detected; in this case, you can manually clear the oper-down or stop-learning
action by changing the mac-duplication configuration or using the tools network-instance bridge-table
mac-duplication command.

8.8.3 Bridge table configuration

The bridge table, its MAC address limit, and maximum number of entries can be configured on a per mac-
vrf or per-subinterface basis.

When the size of the bridge table exceeds its maximum number of entries, the MAC addresses are
removed in reverse order of the priority listed in MAC selection.

You can also configure aging for dynamically learned MAC addresses and other parameters related to the
bridge table.

8.8.3.1 Deleting entries from the bridge table

Procedure

The SR Linux features commands to delete duplicate or learned MAC entries from the bridge table. For
a mac-vrf or subinterface, you can delete all MAC entries, MAC entries with a blackhole destination, or a
specific MAC entry.

Example: Clear MAC entries with a blackhole destination

The following example clears MAC entries in the bridge table for a mac-vrf network instance that
have a blackhole destination:

--{ candidate shared default }--[  ]-- 
# tools network-instance mac-vrf-1 bridge-table mac-duplication delete-macs-type
 blackhole-only

Example: Clear a specified MAC entry

The following example deletes a specified learned MAC address from the bridge table for a mac-vrf
network instance:

--{ candidate shared default }--[  ]-- 
# tools network-instance mac-vrf-1 bridge-table mac-learning learnt-entries mac
 00:00:5e:00:53:01 delete-mac

Example: Clear duplicate MAC entries for a subinterface

The following example clears all duplicate MAC entries in the bridge table for a subinterface:

--{ candidate shared default }--[  ]-- 
# tools interface ethernet-1/1.1 bridge-table mac-duplication delete-all-macs

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

121

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

8.8.4 The mac-vrf network-instance type

The following example configures a mac-vrf network instance and settings for the bridge table. The bridge
table is set to a maximum of 500 entries. Learned MAC addresses are aged out of the bridge table after
600 seconds.

MAC duplication detection is configured so that a MAC address is considered a duplicate when its number
of detected moves across network instance interfaces is greater than three over a 5-minute interval. In
this example, the MAC address is blackholed. After the hold-down-time of 3 minutes, the MAC address is
flushed from the bridge table, and the monitoring process for the MAC address is restarted.

The example includes configuration for a static MAC address in the bridge table.

The mac-vrf network-instance type is associated with a bridged interface and an IRB interface.

--{ candidate shared default }--[  ]--
# info network-instance mac-vrf-1
    network-instance mac-vrf-1 {
        description "Sample mac-vrf network instance" 
        type mac-vrf
        admin-state enable
        interface ethernet-1/1.1 {
            interface-ref {
                interface ethernet-1/1
                subinterface 1
            }
        }
        interface irb1.1 {
            interface-ref {
                interface irb1
                subinterface 1
            }
        }
        bridge-table {
            mac-limit {
                maximum-entries 500
            }
            mac-learning {
                admin-state enable
                aging {
                    admin-state enable
                    age-time 600
                }
            }
            mac-duplication {
                admin-state enable
                monitoring-window 5
                num-moves 3
                hold-down-time 3
                action blackhole
            static-mac {
                address [mac1
                }
            }
        }
    }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

122

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

8.9 Network-instance route leaking

SR Linux supports route leaking from one network-instance to another. An active/best IP route from an
origin network-instance can be leaked into any number of destination network-instances.

The routes are leaked from an origin network-instance to destination network-instances based on import
and export policies. The policies specify which routes are leaked from the origin network-instance to
destination network-instances, as well as which routes can be accepted by a network-instance from other
network instances. Import policy matching can be based on prefix, family, and protocol. The leaked routes
are published with full forwarding information (next hop).

Network-instance route leaking is typically used to allow leafs attached to multiple tenants to share
services (for example, DNS or NTP servers, common software repositories) and support leafs that provide
hub functionality to spoke leafs. Figure 1: Network-instance route leaking shows an example configuration.

Figure 1: Network-instance route leaking

In this example, Leaf-4 has two customer IP-VRF network-instances: IP-VRF20 and IP-VRF30. Network-
instance IP-VRF40 is used to connect the shared DNS server with IP address 40.0.0.1. An inter-instance
export policy makes the shared DNS server leakable, and an inter-instance import policy imports 40.0.0.0
into IP-VRF20 and IP-VRF30. At this point, the prefix 40.0.0.0/24 can be advertised via EVPN and
imported into Leaf-1 and Leaf-2, so that Host 1 and Host 2 have reachability to the DNS server. In the
reverse direction, for traffic from the hosts to the DNS server, inter-instance import and export policies are
configured so that the IP-VRF20 and IP-VRF30 prefixes are imported into IP-VRF40.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

123

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

The hub-and-spoke functionality is shown on Leaf-3, where prefixes of IP-VRF20 and IP-VRF30 are leaked
between each other, allowing connectivity between Host 1 and Host 2.

Configuration considerations for originating and terminating traffic

This feature does not prevent leaking of host routes. However, packets matching a local host route leaked
from another network-instance are dropped by XDP CPM. For example, if a router is leaking a local
loopback address from IP-VRF-A into IP-VRF-B, an ICMP request packet from IP-VRF-B with a destination
of the loopback address in IP-VRF-A is discarded.

Packets matching a non-local host address belonging to a local subnet leaked from another network-
instance are dropped. For example, if a router is leaking local subnet 10.10.10.0/24 on subinterface-1
from IP-VRF-A into IP-VRF-B and 10.10.10.10 is a server connected to subinterface-1 in IP-VRF-A, an
ICMP request packet coming from IP-VRF-B with destination 10.10.10.10 is discarded. As a workaround,
subinterface-1 can be configured with host-route populate dynamic datapath-programming true so that
10.10.10.10 creates and programs an ARP/ND host route in IP-VRF-A. If the ARP/ND host route is leaked
into IP-VRF-B, traffic to 10.10.10.10 is forwarded from IP-VRF-B to IP-VRF-A.

Another workaround is to configure a static-route for 10.10.10.10 with next hop 10.10.10.10, and leak it into
IP-VRF-B. Overall, any route that creates an entry in the host table for IP-VRF-B provides a way to forward
packets to a local subnet.

XDP CPM uses (and does not ignore) leaked routes when forwarding originated control/management
traffic. If a leaked route is the best route to the destination, then traffic egresses via a subinterface of the
origin-network-instance.

On 7220 IXR-D1/D2/D3 and 7220 IXR-D4/D5 switches, VXLAN traffic received in a non-default VRF is
not terminated, even if the destination IP address matches a leaked host route from the default network-
instance.

If the next hop of any non-leaked route can only be resolved by a leaked route, the non-leaked route
is considered unresolved. For example, if the BGP next hop of an EVPN-VXLAN route received by the
default network-instance can only be resolved by a leaked route from another network-instance, the BGP
route is considered unresolved. This process ensures VXLAN traffic is not originated from a non-default
VRF.

In the current release, no leaked route is advertised in a routing protocol. The only exception to this rule is
leaked local routes and their advertisement into BGP (ipv4/ipv6/evpn-ifl families).

8.9.1 Network-instance route leaking configuration example

Figure 2: Network-instance route leaking example shows a configuration for a hosting provider that uses
route leaking on EVPN-VXLAN leaf switches.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

124

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

Figure 2: Network-instance route leaking example

The data center network in this example uses SR Linux leaf switches and 7750 SR devices as data center
(DC) gateways. Each customer is assigned an IP-VRF and a MAC-VRF on the leaf where their server is
connected. For example, Customer-1 has a server connected to Leaf1 (10.10.10.1) and another server
connected to Leaf3 (10.10.10.3). Both servers are attached to a bridged subinterface (no VLAN tagging)
that is associated with MAC-VRF BD1. Regular EVPN-VXLAN connectivity happens for each customer
with servers attached to multiple leaf switches.

Route leaking is necessary in this example because each customer also requires connectivity to
some hosts that are connected to an IP-VPN network in the WAN, and this connectivity is not directly
programmed in the IP-VRF of the customer.

The route-leaking example shown in Figure 2: Network-instance route leaking example shows the
following:

• Customer-1, Customer-2, and Customer-3 hosts and prefixes are learned on the IP-VRF VRF-GLOBAL

on PE1.

• PE1 advertises the three prefixes using IP-VPN control plane; DCGW1 and DCGW2 import those

prefixes in VRF-GLOBAL as well.

•

In addition to supporting IP-VPN, the VPRN service on the 7750 DCGWs is configured with an EVPN-
VXLAN instance that is used to advertise the customer legacy WAN prefixes to the leaf switches, and to
import the customer prefixes of all customers attached to the leaf nodes.

• A network-instance of type IP-VRF called VRF-GLOBAL is also configured on the three leaf switches.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

125

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

Note: Some IXR platforms have an issue where leaked packets sent to a local leaked
subnet are blackholed, as described in Configuration considerations for originating and
terminating traffic. In the preceding Figure 2: Network-instance route leaking example, this
means traffic from VRF-GLOBAL to VRF-1, with the destination of a local subnet in VRF-1,
is blackholed. As a workaround, the VRF-1 IRB subinterface can be configured with host-
route.populate[dynamic] and host-route.populate[dynamic].datapath-
programming true, so that active hosts create ARP/ND host routes, and they are leaked into
VRF-GLOBAL. The commands create a host in the VRF-GLOBAL host table, and traffic can
successfully be forwarded to the ARP/ND learned hosts in VRF-1.

The following sections show the relevant configuration and state information for the PE and Leaf devices in
the route leaking example shown in Figure 2: Network-instance route leaking example.

• PE1 configuration and route table

• DCGW1 configuration and route table

• Leaf1 customer VRF configuration

• Leaf1 VRF-GLOBAL configuration

• Leaf1 routing policy configuration

• Leaf1 IP-VRF route-tables

• Leaf1 route-tables state

PE1 configuration and route table

In the route leaking example shown in Figure 2: Network-instance route leaking example, PE1 is a 7750
SR WAN PE device attached to VRF-GLOBAL, where the three hosts are connected. The following
example shows the configuration and route table for PE1.

// VRF-GLOBAL config on PE1

[ex:/configure service vprn "IP-VRF-GLOBAL"]
A:admin@pe1# info
    admin-state enable
    service-id 1000
    customer "1"
    bgp-ipvpn {
        mpls {
            admin-state enable
            route-distinguisher "10.0.0.5:1000"
            vrf-target {
                community "target:64500:1000"
            }
            auto-bind-tunnel {
                resolution any
            }
        }
    }
    interface "local-100" {
        ipv4 {
            admin-state enable
            primary {
                address 100.100.100.254
                prefix-length 24
            }
        }
        sap 1/1/c1/1:0.* {
        }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

126

 
 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

    }
    interface "local-200" {
        ipv4 {
            admin-state enable
            primary {
                address 200.200.200.254
                prefix-length 24
            }
        }
        sap 1/1/c2/1:0.* {
        }
    }
    interface "local-300" {
        ipv4 {
            admin-state enable
            primary {
                address 130.130.130.254
                prefix-length 24
            }
        }
        sap 1/1/c3/1:3.0 {
        }
    }

// The IP-VRF-GLOBAL route-table shows the routes 100.100.100.0/24 (customer-1), 200.200.200.0/
24 (customer-2) and 130.130.130.0/24 (customer-3)
// PE1 also receives via IPVPN the corresponding prefixes from Leaf-1 so that each customer can
 have communication to/from the legacy hosts

[ex:/configure service vprn "IP-VRF-GLOBAL"]
A:admin@pe1# /show router "1000" route-table

===============================================================================
Route Table (Service: 1000)
===============================================================================
Dest Prefix[Flags]                            Type    Proto     Age        Pref
      Next Hop[Interface Name]                                    Metric
-------------------------------------------------------------------------------
10.10.10.0/24                                 Remote  BGP VPN   01h20m56s  170
       10.0.0.4 (tunneled:SR-ISIS:524290)                           10
20.20.20.0/24                                 Remote  BGP VPN   01h18m59s  170
       10.0.0.4 (tunneled:SR-ISIS:524290)                           10
100.100.100.0/24                              Local   Local     07h55m03s  0
       local-100                                                    0
130.130.130.0/24                              Local   Local     07h55m03s  0
       local-300                                                    0
200.200.200.0/24                              Local   Local     07h55m03s  0
       local-200                                                    0
-------------------------------------------------------------------------------
No. of Routes: 5
Flags: n = Number of times nexthop is repeated
       B = BGP backup route available
       L = LFA nexthop available
       S = Sticky ECMP requested
===============================================================================

DCGW1 configuration and route table

DCGW1 is also attached to VRF-GLOBAL and provides a gateway between IP-VPN and EVPN-VXLAN.
The following example shows the configuration and route table for DCGW1.

// VRF-GLOBAL config on DCGW1

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

127

 
 
 
 
 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

[ex:/configure service vprn "IP-VRF-GLOBAL"]
A:admin@dcgw1# info
    admin-state enable
    service-id 1000
    customer "1"
    bgp-ipvpn {
        mpls {
            admin-state enable
            route-distinguisher "10.0.0.4:1000"
            vrf-target {
                community "target:64500:1000"
            }
            auto-bind-tunnel {
                resolution any
            }
        }
    }
    interface "sdb-1001" {
        vpls "sdb-1001" {
            evpn-tunnel {
                ipv6-gateway-address mac
            }
        }
        ipv6 {
        }
    }

// DCGW1 learns the legacy prefixes via IPVPN and the leaf prefixes from EVPN IFF (EVPN VXLAN)

A:admin@dcgw1# /show router "1000" route-table  
===============================================================================
Route Table (Service: 1000)
===============================================================================
Dest Prefix[Flags]                            Type    Proto     Age        Pref
      Next Hop[Interface Name]                                    Metric
-------------------------------------------------------------------------------
10.10.10.0/24                                 Remote  EVPN-IFF  00h00m13s  169
       sdb-1001 (ET-1a:8b:08:ff:00:00)                              0
20.20.20.0/24                                 Remote  EVPN-IFF  00h00m13s  169
       sdb-1001 (ET-1a:8b:08:ff:00:00)                              0
30.30.30.0/24                                 Remote  EVPN-IFF  00h00m13s  169
       sdb-1001 (ET-1a:b2:09:ff:00:00)                              0
100.100.100.0/24                              Remote  BGP VPN   00h00m13s  170
       10.0.0.5 (tunneled:SR-ISIS:524290)                           10
130.130.130.0/24                              Remote  BGP VPN   00h00m13s  170
       10.0.0.5 (tunneled:SR-ISIS:524290)                           10
200.200.200.0/24                              Remote  BGP VPN   00h00m13s  170
       10.0.0.5 (tunneled:SR-ISIS:524290)                           10
-------------------------------------------------------------------------------
No. of Routes: 6
Flags: n = Number of times nexthop is repeated
       B = BGP backup route available
       L = LFA nexthop available
       S = Sticky ECMP requested
===============================================================================

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

128

 
 
 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

Leaf1 customer VRF configuration

Leaf1 in the route leaking example shown in Figure 2: Network-instance route leaking example is an SR
Linux device attached to customer IP-VRFs VRF-1 and VRF-2 and their corresponding MAC-VRFs. The
following is a configuration on Leaf1 for the IP-VRFs and MAC-VRFs.

// Relevant config for VRF-1  

--{ + candidate shared default }--[ network-instance * ]--
A:leaf1# info
    network-instance BD1 {
        type mac-vrf

        interface ethernet-1/1.1 {
            interface-ref {
                interface ethernet-1/1
                subinterface 1
            }
        }
        interface irb0.1 {
            interface-ref {
                interface irb0
                subinterface 1
            }
        }
        vxlan-interface vxlan1.11 {
        }
        protocols {
            bgp-evpn {
                bgp-instance 1 {
                    admin-state enable
                    vxlan-interface vxlan1.11
                    evi 11
                    ecmp 8
                    routes {
                        bridge-table {
                            mac-ip {
                                advertise-arp-nd-only-with-mac-table-entry true
                            }
                        }
                    }
                }
            }
            bgp-vpn {
                bgp-instance 1 {
                    route-target {
                        export-rt target:100:11
                        import-rt target:100:11
                    }
                }
            }
        }
    }
    network-instance IP-VRF-1 {
        type ip-vrf
        inter-instance-policies {
            apply-policy {            
                import-policy IP-VRF-1-import-cust-1
                export-policy IP-VRF-export-local            
            }
        }
        interface irb0.1 {
        }
        interface lo1.11 {

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

129

 
 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

        }
        vxlan-interface vxlan1.1 {
        }
        protocols {
            bgp-evpn {
                bgp-instance 1 {
                    admin-state enable
                    vxlan-interface vxlan1.1
                    evi 1
                    ecmp 8
                }
            }
            bgp-vpn {
                bgp-instance 1 {
                    route-target {
                        export-rt target:100:1
                        import-rt target:100:1
                    }
                }
            }
        }
    }
// ARP/ND - host-route datapath-programming under subinterface  

--{ + candidate shared default }--[ interface ethernet-1/3 subinterface 1 ]--
A:Dut-B# info 
    admin-state enable
    ipv4 {
        admin-state enable
        address 2.3.0.1/30 {
        }
        arp {
            host-route {
                populate dynamic {
                    datapath-programming true
                }
            }
        }
    }
    ipv6 {
        admin-state enable
        address 3ffe:2:3::1/124 {
        }
        neighbor-discovery {
            host-route {
                populate dynamic {
                    datapath-programming true
                }
            }
        }
    }
// Relevant config for VRF-2

--{ + candidate shared default }--[ network-instance * ]--
A:leaf1# info
    network-instance BD2 {
        type mac-vrf
        interface irb0.2 {
        }
        interface lag1.1 {
        }
        vxlan-interface vxlan1.22 {
        }
        protocols {

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

130

 
 
 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

            bgp-evpn {
                bgp-instance 1 {
                    admin-state enable
                    vxlan-interface vxlan1.22
                    evi 22
                    ecmp 8
                    routes {
                        bridge-table {
                            mac-ip {
                                advertise-arp-nd-only-with-mac-table-entry true
                            }
                        }
                    }
                }
            }
            bgp-vpn {
                bgp-instance 1 {
                    route-target {
                        export-rt target:100:22
                        import-rt target:100:22
                    }
                }
            }
        }
    }
    network-instance IP-VRF-2 {
        type ip-vrf
        inter-instance-policies {
            apply-policy {            
                import-policy IP-VRF-2-import-cust-2
                export-policy IP-VRF-export-local            
            }
        }
        interface irb0.2 {
        }
        interface lo1.12 {
        }
        vxlan-interface vxlan1.2 {
        }
        protocols {
            bgp-evpn {
                bgp-instance 1 {
                    admin-state enable
                    vxlan-interface vxlan1.2
                    evi 2
                    ecmp 8
                }
            }
            bgp-vpn {
                bgp-instance 1 {
                    route-target {
                        export-rt target:100:2
                        import-rt target:100:2
                    }
                }
            }
        }
    }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

131

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

Leaf1 VRF-GLOBAL configuration

SR Linux Leaf1, as well as the other leaf switches, must be configured with VRF-GLOBAL so that the
legacy prefixes for all customers are imported. The following is a configuration for VRF-GLOBAL on Leaf1.

--{ + candidate shared default }--[ network-instance IP-VRF-GLOBAL ]--
A:leaf1# info
    type ip-vrf
    admin-state enable
    inter-instance-policies {        
        apply-policy {
            import-policy IP-VRF-GLOBAL-import-cust-prefixes
            export-policy IP-VRF-GLOBAL-make-cust-prefixes-leakable
        }    
    }
    vxlan-interface vxlan1.1000 {
    }
    protocols {
        bgp-evpn {
            bgp-instance 1 {
                admin-state enable
                vxlan-interface vxlan1.1000
                evi 1000
                ecmp 8
            }
        }
        bgp-vpn {
            bgp-instance 1 {
                route-target {
                    export-rt target:100:1000
                    import-rt target:100:1000
                }
            }
        }
    }

Leaf1 routing policy configuration

In the route leaking example shown in Figure 2: Network-instance route leaking example, route leaking
policies are required to guarantee communication between servers in the DC and hosts in the legacy IP-
VPN network.

VRF-GLOBAL requires the following inter-instance policies:

• export policy IP-VRF-GLOBAL-make-cust-prefixes-leakable

This policy makes the legacy prefixes 100.100.100.0/24, 200.200.200.0/24 and 130.130.130.0/24 in the
VRF-GLOBAL route-table leakable. The policy matches on and accepts protocol bgp-evpn and prefix-
set routes and rejects everything else to ensure no other routes are made available for leaking. Leaked
routes are ignored by the policy.

• import policy IP-VRF-GLOBAL-import-cust-prefixes

This policy imports all prefixes that are made leakable into the VRF-GLOBAL route-table.

VRF-1 requires the following inter-instance policies:

• export policy IP-VRF-export-local

This policy matches on protocol local and protocol arp-nd so that the local/arp-nd routes of VRF-1 are
made available for leaking.

• import policy IP-VRF-1-import-cust-1

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

132

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

This policy matches on prefix-set customer-1 (which comprises all prefixes in 100.100.100.0/24) to
accept only the routes of customer-1 and reject the rest.

The policies for VRF-2 are similar to those for VRF-1, only replacing the prefix-set with prefix-set
customer-2, which covers all prefixes in 200.200.200.0/24.

The following are the policies configured on SR Linux Leaf1. Similar policies are configured on the other
leaf devices.

--{ + candidate shared default }--[ routing-policy ]--
A:leaf1# info
// prefix sets defined:
    prefix-set cust-1 {
        prefix 100.100.0.0/16 mask-length-range 16..24 {
        }
    }
    prefix-set cust-2 {
        prefix 200.200.0.0/16 mask-length-range 16..24 {
        }
    }
    prefix-set cust-3 {
        prefix 130.130.0.0/16 mask-length-range 16..24 {
        }
    }
    community-set target:100:1000 {
        member [
            target:100:1000
        ]
    }
    policy IP-VRF-1-import-cust-1 {  // leaks into IP-VRF-1 only the prefix-set of customer 1
        default-action {
            policy-result reject
        }
        statement 1 {
            match {
                prefix-set cust-1
            }
            action {
                policy-result accept
            }
        }
    }
    policy IP-VRF-2-import-cust-2 { // leaks into IP-VRF-2 only the prefix-set of customer 1
        default-action {
            policy-result reject
        }
        statement 1 {
            match {
                prefix-set cust-2
            }
            action {
                policy-result accept
            }
        }
    }
    policy IP-VRF-GLOBAL-import-cust-prefixes {  // leaks into IP-VRF-GLOBAL all the prefixes
 made leakable
        default-action {
            policy-result accept
        }
    }
    policy IP-VRF-GLOBAL-make-cust-prefixes-leakable {
        default-action {

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

133

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

            policy-result reject
        }
        statement 10 {
            match {
                protocol bgp-evpn
            }
            action {
                policy-result accept
            }
        }
    }
    policy IP-VRF-export-local { // applied to IP-VRF-1 and IP-VRF-2, makes leakable the routes
 that are either local or arp-nd
        default-action {
            policy-result reject
        }
        statement 10 {
            match {
                protocol local
            }
            action {
                policy-result accept
            }
        }
        statement 20 {
            match {
                protocol arp-nd
            }
            action {
                policy-result accept
            }
        }
    }
    policy import-local-cust {  // applied as import on the IP-VRF-GLOBAL, imports only the
 legacy prefixes of the local customers
        default-action {
            policy-result reject
        }
        statement 10 {
            match {
                prefix-set cust-1
                bgp {
                    community-set target:100:1000
                }
            }
            action {
                policy-result accept
            }
        }
        statement 20 {
            match {
                prefix-set cust-2
                bgp {
                    community-set target:100:1000
                }
            }
            action {
                policy-result accept
            }
        }
    }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

134

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

Leaf1 IP-VRF route-tables

Based on the preceding policies, the route tables in Leaf1 shows the leaked routes as follows:

-{ + candidate shared default }--[  ]--
A:leaf1# show network-instance IP-VRF-* route-table
------------------------------------------------------------------------------------------------------
IPv4 unicast route table of network instance IP-VRF-1
------------------------------------------------------------------------------------------------------
+------------------+---+---------+-------------+-------+------+----+----------------------+----------+
|      Prefix      | ID| Route   |     Route   | Active|Metric|Pref|   Next-hop           | Next-hop |
|                  |   |  Type   |     Owner   |       |      |    |    (Type)            |Interface |
+==================+===+=========+=============+=======+======+====+======================+==========+
| 10.10.10.0/      | 0 | bgp-evpn| bgp_evpn_mgr| False | 0    | 170| 10.0.0.3/32          |          |
|                  |   |         |             |       |      |    |  (indirect/vxlan)    |          |
| 10.10.10.0/24    | 4 | local   | net_inst_mgr| True  | 0    | 0  | 10.10.10.254 (direct)| irb0.1   |
| 10.10.10.1/32    | 4 | arp-nd  | arp_nd_mgr  | True  | 0    | 1  | 10.10.10.1 (direct)  | irb0.1   |
| 10.10.10.254/32  | 4 | host    | net_inst_mgr| True  | 0    | 0  | None (extract)       | None     |
| 10.10.10.255/32  | 4 | host    | net_inst_mgr| True  | 0    | 0  | None (broadcast)     |          |
| 11.11.11.11/32   | 7 | host    | net_inst_mgr| True  | 0    | 0  | None (extract)       | None     |
| 31.31.31.31/32   | 0 | bgp-evpn| bgp_evpn_mgr| True  | 0    | 170| 10.0.0.3/32          |          |
|                  |   |         |             |       |      |    | (indirect/vxlan)     |          |
| 100.100.100.0/24 | 0 | bgp-evpn| bgp_evpn_mgr| True  | 0    | 170|                      |          |
+------------------+---+---------+-------------+-------+------+----+----------------------+----------+
------------------------------------------------------------------------------------------------------
IPv4 routes total        
IPv4 prefixes with active routes     : 7
IPv4 prefixes with active ECMP routes: 0
------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
IPv4 unicast route table of network instance IP-VRF-2
------------------------------------------------------------------------------------------------------
+------------------+---+---------+-------------+-------+------+----+----------------------+----------+
|      Prefix      | ID| Route   |     Route   | Active|Metric|Pref|   Next-hop           | Next-hop |
|                  |   |  Type   |     Owner   |       |      |    |    (Type)            |Interface |
+==================+===+=========+=============+=======+======+====+======================+==========+
| 12.12.12.12/32   | 8 | host    | net_inst_mgr| True  | 0    | 0  | None (extract)       | None     |
| 20.20.20.0/24    | 0 | bgp-evpn| bgp_evpn_mgr| False | 0    | 170| 10.0.0.2/32          |          |
|                  |   |         |             |       |      |    | (indirect/vxlan)     |          |
| 20.20.20.0/24    | 5 | local   | net_inst_mgr| True  | 0    | 0  | 20.20.20.254 (direct)| irb0.2   |
| 20.20.20.12/32   | 0 | bgp-evpn| bgp_evpn_mgr| True  | 0    | 170| 10.0.0.2/32          |          |
|                  |   |         |             |       |      |    | (indirect/vxlan)     |          |
| 20.20.20.254/32  | 5 | host    | net_inst_mgr|       | 0    | 0  | None (extract)       | None     |
| 20.20.20.255/32  | 5 | host    | net_inst_mgr| True  | 0    | 0  | None (broadcast)     |          |
| 22.22.22.22/32   | 0 | bgp-evpn| bgp_evpn_mgr| True  | 0    | 170| 10.0.0.2/32          |          |
|                  |   |         |             |       |      |    | (indirect/vxlan)     |          |
| 200.200.200.0/24 | 0 | bgp-evpn| bgp_evpn_mgr| True  | 0    | 170|                      |          |
+------------------+---+---------+-------------+-------+------+----+----------------------+----------+
-----------------------------------------------------------------------------------------------------
IPv4 routes total                    : 8
IPv4 prefixes with active routes     : 7
IPv4 prefixes with active ECMP routes: 0
------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
IPv4 unicast route table of network instan
--------------------------------------------------------------------------------------------------
+------------------+---+---------+-------------+-------+------+----+------------------+----------+
|      Prefix      | ID| Route   |     Route   | Active|Metric|Pref|   Next-hop       | Next-hop |
|                  |   |  Type   |     Owner   |       |      |    |    (Type)        |Interface |
+==================+===+=========+=============+=======+======+====+==================+==========+
| 10.10.10.0/24    | 4 | local   | net_inst_mgr| True  | 0    | 0  |                  |          |
| 10.10.10.1/32    | 4 | arp-nd  | arp_nd_mgr  | True  | 0    | 1  |                  |          |
| 20.20.20.0/24    | 5 | local   | net_inst_mgr| True  | 0    | 0  |                  |          |
| 100.100.100.0/24 | 0 | bgp-evpn| bgp_evpn_mgr| True  | 0    | 170| 10.0.0.4/32      |          |

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

135

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

|                  |   |         |             |       |      |    | (indirect/vxlan) |          |
| 200.200.200.0/24 | 0 | bgp-evpn| bgp_evpn_mgr| True  | 0    | 170| 10.0.0.4/32      |          |
|                  |   |         |             |       |      |    | (indirect/vxlan) |          |
+------------------+---+---------+-------------+-------+------+----+------------------+----------+
-------------------------------------------------------------------------------------------------
IPv4 routes total                    : 5
IPv4 prefixes with active routes     : 5
IPv4 prefixes with active ECMP routes: 0
-------------------------------------------------------------------------------------------------
--{ + candidate shared default }--[  ]--

Leaf1 route-tables state

The info from state information shows the origin of the leaked routes:

-{ + candidate shared default }--[ network-instance IP-VRF-* ]--
A:leaf1# info from state route-table
    network-instance IP-VRF-1 {
        route-table {
            ipv4-unicast {
                route 10.10.10.0/24 id 0 route-type bgp-evpn route-owner bgp_evpn_mgr origin-
network-instance IP-VRF-1 {
                    leakable false
                    metric 0
                    preference 170
                    active false
                    last-app-update 2023-01-26T14:59:31.386Z
                    next-hop-group 538392877111
                    next-hop-group-network-instance IP-VRF-1
                    resilient-hash false
                    fib-programming {
                        suppressed false
                        last-successful-operation-type modify
                        last-successful-operation-timestamp 2023-01-26T14:59:31.387Z
                        pending-operation-type none
                        last-failed-operation-type none
                    }
                }
<snip>
                route 100.100.100.0/24 id 0 route-type bgp-evpn route-owner bgp_evpn_mgr
 origin-network-instance IP-VRF-GLOBAL {
                    leakable true
                    metric 0
                    preference 170
                    active true
                    last-app-update 2023-01-26T14:59:31.386Z
                    next-hop-group 538392877123
                    next-hop-group-network-instance IP-VRF-GLOBAL
                    resilient-hash false
                    target-network-instances [
                        IP-VRF-1
                    ]
                    fib-programming {
                        suppressed false
                        last-successful-operation-type modify
                        last-successful-operation-timestamp 2023-01-26T14:59:31.397Z
                        pending-operation-type none
                        last-failed-operation-type none
                    }
                }
                statistics {
                    active-routes 7
                    active-routes-with-ecmp 0

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

136

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

                    resilient-hash-routes 0
                    fib-failed-routes 0
                    total-routes 8
                }
                route-summary {
                    route-type arp-nd {
                        active-routes 1
                    }
                    route-type bgp-evpn {
                        active-routes 3
                    }
                    route-type host {
                        active-routes 3
                    }
                    route-type local {
                        active-routes 1
                    }
                }
            }
            ipv6-unicast {
            }
            next-hop-group 538392877076 {
                backup-next-hop-group 0
                fib-programming {
                    last-successful-operation-type add
                    last-successful-operation-timestamp 2023-01-26T14:59:31.393Z
                    pending-operation-type none
                    last-failed-operation-type none
                }
                next-hop 0 {
                    next-hop 538392877074
                    resolved not-applicable
                }
            }
            next-hop-group 538392877085 {
                backup-next-hop-group 0
                fib-programming {
                    last-successful-operation-type add
                    last-successful-operation-timestamp 2023-01-26T14:59:31.393Z
                    pending-operation-type none
                    last-failed-operation-type none
                }
                next-hop 0 {
                    next-hop 538392877081
                    resolved not-applicable
                }
            }
            next-hop-group 538392877086 {
                backup-next-hop-group 0
                fib-programming {
                    last-successful-operation-type add
                    last-successful-operation-timestamp 2023-01-26T14:59:31.393Z
                    pending-operation-type none
                    last-failed-operation-type none
                }
                next-hop 0 {
                    next-hop 538392877082
                    resolved not-applicable
                }
            }
            next-hop-group 538392877087 {
                backup-next-hop-group 0
                fib-programming {
                    last-successful-operation-type add

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

137

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

                    last-successful-operation-timestamp 2023-01-26T14:59:31.393Z
                    pending-operation-type none
                    last-failed-operation-type none
                }
                next-hop 0 {
                    next-hop 3
                    resolved not-applicable
                }
            }
            next-hop-group 538392877111 {
                backup-next-hop-group 0
                fib-programming {
                    last-successful-operation-type add
                    last-successful-operation-timestamp 2023-01-26T14:59:31.393Z
                    pending-operation-type none
                    last-failed-operation-type none
                }
                next-hop 0 {
                    next-hop 538392877104
                    resolved true
                }
            }
            next-hop-group 538392877120 {
                backup-next-hop-group 0
                fib-programming {
                    last-successful-operation-type add
                    last-successful-operation-timestamp 2023-01-26T14:59:31.393Z
                    pending-operation-type none
                    last-failed-operation-type none
                }
                next-hop 0 {
                    next-hop 538392877111
                    resolved not-applicable
                }
            }
            next-hop 3 {
                type broadcast
            }
            next-hop 538392877074 {
                type extract
            }
            next-hop 538392877081 {
                type direct
                ip-address 10.10.10.254
                subinterface irb0.1
            }
            next-hop 538392877082 {
                type extract
            }
            next-hop 538392877104 {
                type indirect
                ip-address 10.0.0.3
                resolving-tunnel {
                    ip-prefix 10.0.0.3/32
                    tunnel-type vxlan
                    tunnel-owner vxlan_mgr
                }
                vxlan {
                    vni 1
                    source-mac 1A:8B:08:FF:00:00
                    destination-mac 1A:4D:0A:FF:00:00
                }
            }
            next-hop 538392877111 {

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

138

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

                type direct
                ip-address 10.10.10.1
                subinterface irb0.1
            }
        }
    }
    network-instance IP-VRF-2 {
        route-table {
            ipv4-unicast {
                route 12.12.12.12/32 id 8 route-type host route-owner net_inst_mgr origin-
network-instance IP-VRF-2 {
                    leakable false
                    metric 0
                    preference 0
                    active true
                    last-app-update 2023-01-26T14:59:31.384Z
                    next-hop-group 538392877077
                    next-hop-group-network-instance IP-VRF-2
                    resilient-hash false
                    fib-programming {
                        suppressed false
                        last-successful-operation-type modify
                        last-successful-operation-timestamp 2023-01-26T14:59:31.387Z
                        pending-operation-type none
                        last-failed-operation-type none
                    }
                }
<snip>
                route 200.200.200.0/24 id 0 route-type bgp-evpn route-owner bgp_evpn_mgr
 origin-network-instance IP-VRF-GLOBAL {
                    leakable false
                    metric 0
                    preference 170
                    active true
                    last-app-update 2023-01-26T14:59:31.386Z
                    next-hop-group 538392877123
                    next-hop-group-network-instance IP-VRF-GLOBAL
                    resilient-hash false
                    fib-programming {
                        suppressed false
                        last-successful-operation-type modify
                        last-successful-operation-timestamp 2023-01-26T14:59:31.387Z
                        pending-operation-type none
                        last-failed-operation-type none
                    }
                }
                statistics {
                    active-routes 7
                    active-routes-with-ecmp 0
                    resilient-hash-routes 0
                    fib-failed-routes 0
                    total-routes 8
                }
                route-summary {
                    route-type bgp-evpn {
                        active-routes 4
                    }
                    route-type host {
                        active-routes 3
                    }
                    route-type local {
                        active-routes 1
                    }
                }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

139

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

            }
            ipv6-unicast {
            }
            next-hop-group 538392877077 {
                backup-next-hop-group 0
                fib-programming {
                    last-successful-operation-type add
                    last-successful-operation-timestamp 2023-01-26T14:59:31.393Z
                    pending-operation-type none
                    last-failed-operation-type none
                }
                next-hop 0 {
                    next-hop 538392877075
                    resolved not-applicable
                }
            }
            next-hop-group 538392877082 {
                backup-next-hop-group 0
                fib-programming {
                    last-successful-operation-type add
                    last-successful-operation-timestamp 2023-01-26T14:59:31.393Z
                    pending-operation-type none
                    last-failed-operation-type none
                }
                next-hop 0 {
                    next-hop 538392877079
                    resolved not-applicable
                }
            }
            next-hop-group 538392877083 {
                backup-next-hop-group 0
                fib-programming {
                    last-successful-operation-type add
                    last-successful-operation-timestamp 2023-01-26T14:59:31.393Z
                    pending-operation-type none
                    last-failed-operation-type none
                }
                next-hop 0 {
                    next-hop 538392877080
                    resolved not-applicable
                }
            }
            next-hop-group 538392877084 {
                backup-next-hop-group 0
                fib-programming {
                    last-successful-operation-type add
                    last-successful-operation-timestamp 2023-01-26T14:59:31.393Z
                    pending-operation-type none
                    last-failed-operation-type none
                }
                next-hop 0 {
                    next-hop 3
                    resolved not-applicable
                }
            }
            next-hop-group 538392877105 {
                backup-next-hop-group 0
                fib-programming {
                    last-successful-operation-type add
                    last-successful-operation-timestamp 2023-01-26T14:59:31.393Z
                    pending-operation-type none
                    last-failed-operation-type none
                }
                next-hop 0 {

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

140

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

                    next-hop 538392877098
                    resolved true
                }
            }
            next-hop 3 {
                type broadcast
            }
            next-hop 538392877075 {
                type extract
            }
            next-hop 538392877079 {
                type direct
                ip-address 20.20.20.254
                subinterface irb0.2
            }
            next-hop 538392877080 {
                type extract
            }
            next-hop 538392877098 {
                type indirect
                ip-address 10.0.0.2
                resolving-tunnel {
                    ip-prefix 10.0.0.2/32
                    tunnel-type vxlan
                    tunnel-owner vxlan_mgr
                }
                vxlan {
                    vni 2
                    source-mac 1A:8B:08:FF:00:00
                    destination-mac 1A:B2:09:FF:00:00
                }
            }
        }
    }
    network-instance IP-VRF-GLOBAL {
        route-table {
            ipv4-unicast {
                route 10.10.10.0/24 id 4 route-type local route-owner net_inst_mgr origin-
network-instance IP-VRF-1 {
                    leakable false
                    metric 0
                    preference 0
                    active true
                    last-app-update 2023-01-26T14:59:31.384Z
                    next-hop-group 538392877085
                    next-hop-group-network-instance IP-VRF-1
                    resilient-hash false
                    fib-programming {
                        suppressed false
                        last-successful-operation-type modify
                        last-successful-operation-timestamp 2023-01-26T14:59:31.387Z
                        pending-operation-type none
                        last-failed-operation-type none
                    }
                }
                route 10.10.10.1/32 id 4 route-type arp-nd route-owner arp_nd_mgr origin-
network-instance IP-VRF-1 {
                    leakable false
                    metric 0
                    preference 1
                    active true
                    last-app-update 2023-01-26T14:59:31.385Z
                    next-hop-group 538392877120
                    next-hop-group-network-instance IP-VRF-1

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

141

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

                    resilient-hash false
                    fib-programming {
                        suppressed false
                        last-successful-operation-type modify
                        last-successful-operation-timestamp 2023-01-26T14:59:31.387Z
                        pending-operation-type none
                        last-failed-operation-type none
                    }
                }
                route 20.20.20.0/24 id 5 route-type local route-owner net_inst_mgr origin-
network-instance IP-VRF-2 {
                    leakable false
                    metric 0
                    preference 0
                    active true
                    last-app-update 2023-01-26T14:59:31.384Z
                    next-hop-group 538392877082
                    next-hop-group-network-instance IP-VRF-2
                    resilient-hash false
                    fib-programming {
                        suppressed false
                        last-successful-operation-type modify
                        last-successful-operation-timestamp 2023-01-26T14:59:31.387Z
                        pending-operation-type none
                        last-failed-operation-type none
                    }
                }
                route 100.100.100.0/24 id 0 route-type bgp-evpn route-owner bgp_evpn_mgr
 origin-network-instance IP-VRF-GLOBAL {
                    leakable true
                    metric 0
                    preference 170
                    active true
                    last-app-update 2023-01-26T14:59:31.386Z
                    next-hop-group 538392877123
                    next-hop-group-network-instance IP-VRF-GLOBAL
                    resilient-hash false
                    fib-programming {
                        suppressed false
                        last-successful-operation-type modify
                        last-successful-operation-timestamp 2023-01-26T14:59:31.387Z
                        pending-operation-type none
                        last-failed-operation-type none
                    }
                }
                route 200.200.200.0/24 id 0 route-type bgp-evpn route-owner bgp_evpn_mgr
 origin-network-instance IP-VRF-GLOBAL {
                    leakable true
                    metric 0
                    preference 170
                    active true
                    last-app-update 2023-01-26T14:59:31.386Z
                    next-hop-group 538392877123
                    next-hop-group-network-instance IP-VRF-GLOBAL
                    resilient-hash false
                    fib-programming {
                        suppressed false
                        last-successful-operation-type modify
                        last-successful-operation-timestamp 2023-01-26T14:59:31.387Z
                        pending-operation-type none
                        last-failed-operation-type none
                    }
                }
                statistics {

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

142

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

                    active-routes 5
                    active-routes-with-ecmp 0
                    resilient-hash-routes 0
                    fib-failed-routes 0
                    total-routes 5
                }
                route-summary {
                    route-type arp-nd {
                        active-routes 1
                    }
                    route-type bgp-evpn {
                        active-routes 2
                    }
                    route-type local {
                        active-routes 2
                    }
                }
            }
            ipv6-unicast {
            }
            next-hop-group 538392877123 {
                backup-next-hop-group 0
                fib-programming {
                    last-successful-operation-type add
                    last-successful-operation-timestamp 2023-01-26T14:59:31.393Z
                    pending-operation-type none
                    last-failed-operation-type none
                }
                next-hop 0 {
                    next-hop 538392877114
                    resolved true
                }
            }
            next-hop 538392877114 {
                type indirect
                ip-address 10.0.0.4
                resolving-tunnel {
                    ip-prefix 10.0.0.4/32
                    tunnel-type vxlan
                    tunnel-owner vxlan_mgr
                }
                vxlan {
                    vni 1000
                    source-mac 1A:8B:08:FF:00:00
                    destination-mac 00:00:DC:00:00:01
                }
            }
        }
    }

8.10 Configuring interface references

An interface reference is a user-defined name for a configured interface and subinterface within a network-
instance. You can refer to the interface by the defined name within the context of the network instance.

The following example configures interface ethernet-1/10, subinterface 1 on the SR Linux device.
In network instance black, an interface named red is created. Interface red is defined as interface
ethernet-1/10, subinterface 1.

--{ + candidate shared default }--[  ]--

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

143

 
 
 
 
Configuration Basics Guide Release 24.7

Network-instances

# info interface
    interface ethernet-1/10 {
        subinterface 1 {
        }
    }

--{ + candidate shared default }--[  ]--
# info network-instance black
    network-instance black {
        interface red {
            interface-ref {
                interface ethernet-1/10
                subinterface 1
            }
        }
    }

In the context of network instance black, you can use the name red to refer to interface ethernet-1/10,
subinterface 1. For example:

--{ + running }--[ network-instance black ]--
# show interfaces red
===========================================================================
Net instance    : black
Interface       : ethernet-1/10.1 (red)
Type            : routed
Oper state      : down
Oper down reason: subif-down
Ip mtu          : 1500
===========================================================================

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

144

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

9 SR Linux applications

The SR Linux is a suite of modular, lightweight applications running like any others in a Linux environment.
Each SR Linux application supports a different protocol or function, such as BGP, LLDP, AAA, and so on.
These applications use gRPC and APIs to communicate with each other and external systems over TCP.

One SR Linux application, the application manager (app_mgr), is responsible for monitoring the health
of the process IDs running each SR Linux applications and restarting them if they fail. The application
manager reads in application-specific YAML configuration and YANG models and starts each application
(or allows an application not to start if there no configuration exists for it). There is an instance of the
app_mgr that handles applications running on the CPM and an instance of the app_mgr on each IMM that
handles applications running on the line card.

In addition to the Nokia-provided SR Linux applications, the SR Linux supports installation of user-defined
applications, which are managed and configured in the same way as the default SR Linux applications.
User-defined SR Linux applications can be loaded, reloaded, and unloaded from the system as necessary.

9.1 Installing an application

About this task

To install an application, copy the application files into the appropriate SR Linux directories, then reload the
application manager and start the application.

The example in this topic installs an application called fib_agent. The application consists of files named
fib_agent.yml, fib_agent.sh, fib_agent.py, and fib_agent.yang. The fib_agent.yml file is
installed in the /etc/opt/srlinux/appmgr/ directory. The .yml file for a user-defined application must
reside in this directory in order for the app_mgr to read its YAML configuration.

The .yml file defines the locations of the other application files. The other application files can reside
anywhere in the system other than in the /opt/srlinux/ directory or any tempfs file system.

In this example, the fib_agent.sh and fib_agent.py files are installed in the directory /user_
agents/, and the fib_agent.yang file is installed in the directory /yang/. The locations for these files
are defined in the fib_agent.yml file.

Procedure

Step 1. Copy the application files into the SR Linux directories.

Example

--{ candidate }--[  ]--
# bash
# cp fib_agent.yml /etc/opt/srlinux/appmgr/.
# cp fib_agent.sh /user_agents/.
# cp fib_agent.py /user_agents/.
# cp fib_agent.yang /yang/.
# exit

Step 2. From the SR Linux CLI, reload the application manager.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

145

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

Example

--{ candidate }--[ ]--
# tools system app-management application app_mgr reload

Step 3. Apply the changes to the configuration.

Example

--{ candidate }--[  ]--
# fib-agent
--{ candidate }--[ fib-agent ]--
# commit stay
All changes have been committed. Starting new transaction.
--{ candidate }--[ fib-agent ]--

Step 4. Verify that the application is running.

Example

# show system application fib_agent
  +-----------+-----+---------+-----------------------+--------------------------+
  |  Name     | PID |  State  |        Version        |       Last Change        |
  +===========+=====+=========+=======================+==========================+
  | fib_agent | 227 | running | v21.3.0-61-gd19567393 | 2021-01-13T20:16:45.697Z |
  +-----------+-----+---------+-----------------------+--------------------------+

9.2 Starting an application

Procedure

To start an SR Linux application instance, use the start option in the tools system app-management
command.

Example

To start an SR Linux application instance:

--{ running }--[  ]--
# tools system app-management application mpls_mgr start
/system/app-management/application[name=mpls_mgr]:
    Application 'mpls_mgr' was started

9.3 Restarting applications

SR Linux applications that are currently running can be restarted; that is, stopped then started again. SR
Linux supports two types of application restarts: warm restart and cold restart. The difference between the
two types involves how the application state is maintained in the IDB:

• warm restart

Warm restart allows forwarding to continue based on the previous state of the application. A warm
restart causes the application to leave its state information in IDB during the restart, then recover it after

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

146

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

the restart. This restart type results in less disruption to surrounding applications that depend on the
restarting application's state.

• cold restart

Cold restart results in a typical stop and start of the application, including purging its state in IDB.

Not all SR Linux applications support warm restart. For a list of applications that support warm restart, see
the SR Linux Release Notes. You can also determine if an application supports warm restart by using an
info from state command; for example:

# info from state system app-management application chassis_mgr supported-restart-types
    system {
        app-management {
            application chassis_mgr {
                supported-restart-types [
                    cold
                    warm
                ]
            }
        }
    }

Applications can be restarted automatically by app_mgr (for example, if an application fails and needs
to be restarted) or you can restart an application manually from the CLI using a tools command. When
app_mgr restarts an application, the application is warm-restarted if the application supports it; otherwise
the application is cold-restarted. If you restart an application using a tools command, you can specify
whether the application is cold or warm restarted. If you do not specify the restart type, the application is
warm-restarted if the application supports it; otherwise the application is cold-restarted.

9.3.1 Restarting an application

Procedure

You can restart an application from the SR Linux CLI. The application can be cold-restarted or warm-
restarted (if the application supports warm restart). Using an info from state command, you can display
the type of restart (cold or warm) that was used the last time the application was restarted.

Example: Restart an SR Linux application instance

--{ running }--[  ]--
# tools system app-management application chassis_mgr restart cold
/system/app-management/application[name=chassis_mgr]:
    Application 'chassis_mgr' was killed with signal 9

/system/app-management/application[name=chassis_mgr]:
    Application 'chassis_mgr' was restarted

Example: Display the type of restart used the last time the application was restarted

--{ running }--[  ]--
# info from state system app-management application chassis_mgr last-start-type
    system {
        app-management {
            application chassis_mgr {
                last-start-type cold
            }
        }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

147

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

    }

9.4 Terminating an application

Procedure

You can use the stop, quit, or kill options in the tools system app-management command to terminate
an SR Linux application:

• stop

Gracefully terminates the application, allowing it to clean up before exiting.

• quit

Terminates the application and generates a core dump. The core dump files are saved in the /var/
core directory.

• kill

Terminates the application immediately, without allowing it to clean up before exiting.

Example: Terminate an application gracefully

--{ candidate }--[  ]--
# tools system app-management application mpls_mgr stop
/system/app-management/application[name=mpls_mgr]:
    Application 'mpls_mgr' was killed with signal 15

Example: Terminate an application and generate a core dump

--{ candidate }--[  ]--
# tools system app-management application mpls_mgr quit
/system/app-management/application[name=mpls_mgr]:
    Application 'mpls_mgr' was killed with signal 3

Example: Terminate an application immediately

--{ candidate }--[  ]--
# tools system app-management application mpls_mgr kill
/system/app-management/application[name=mpls_mgr]:
    Application 'mpls_mgr' was killed with signal 9

9.5 Reloading application configuration

Procedure

To reload the application configuration, reload the application manager. Reloading the application
manager causes it to process any changes in the installed applications' YAML configuration and restart the
applications. Applications that are no longer present in the system are stopped, and their YANG modules
are removed from the management server. Applications removed from the system have their nodes or
augmentations removed from the system schema.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

148

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

Example

--{ * running }--[  ]--
# tools system app-management application app_mgr reload

9.6 Clearing application statistics

Procedure

You can display statistics collected for an application with the info from state command. To reset
the statistics counters for the application, use the statistics clear option in the tools system app-
management command.

Example

To reset the statistics counters for an application:

--{ running }--[  ]--
# tools system app-management application mpls_mgr statistics clear

9.7 Restricted operations for applications

An application may have one or more operations that are restricted by default. For example, the linux_mgr
application has stop, quit, and kill as restricted operations, meaning that these options are not available
when entering the tools system app-management command for the linux_mgr application.

Table 6: Restricted operations for SR Linux applications  lists the restricted operations for each SR Linux
application.

Table 6: Restricted operations for SR Linux applications

Application

Restricted operations

aaa_mgr

acl_mgr

app_mgr

arp_nd_mgr

bfd_mgr

bgp_mgr

chassis_mgr

device_mgr

reload

reload

start, stop, restart, quit, kill

reload

reload

reload

stop, quit, kill, reload

reload

dhcp_client_mgr

stop, reload

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

149

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

Application

fib_mgr

grpc_server

idb_server

Restricted operations

reload

reload

start, stop, restart, quit, kill, reload

json_rpc_config

reload

linux_mgr

lldp_mgr

log_mgr

mgmt_server

mpls_mgr

net_inst_mgr

oam_mgr

plcy_mgr

qos_mgr

sdk_mgr

static_route_mgr

supportd

xdp_cpm

xdp_lc

stop, quit, kill

reload

reload

start, stop, quit, kill, reload

reload

start, stop, quit, kill, reload

reload

reload

reload

reload

reload

reload

stop, restart, quit, kill, reload

reload

Restricted options are specified in the restricted-operations setting in the YAML file for the
application.

9.8 Configuring an application

About this task

To configure an SR Linux application, edit settings in the application YAML file, then reload the application
manager to activate the changes.

The example in this section shows how to configure an application to specify the action the SR Linux
device takes when the application fails. If an SR Linux application fails a specified number of times over a
specified time period, the SR Linux device can reboot the system or attempt to restart the application after
waiting a specified number of seconds.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

150

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

For example, if the aaa_mgr application stops responding five times within a 500-second window, the SR
Linux device can be configured to wait 100 seconds, then restart the aaa_mgr application.

The following actions can be taken if an SR Linux application fails:

• Reboot the system.

• Wait a specified number of seconds, then attempt to restart the failed application.

• Move the failed application to error state without rebooting the system or attempting to restart the

application.

If you stop or restart an application using the tools system app-management command in the SR Linux
CLI, it is not considered an application failure; the failure action for the application, if one is configured,
does not occur. However, if the failed application waits a specified period of time (or forever) to be
restarted, or has been moved into error state, you can restart the application manually with the tools
system app-management application restart CLI command.

To configure the failure action for an application:

Procedure

Step 1. Check the status of the SR Linux applications.

Example

--{ running }--[  ]--
# show system application
+--------------+-----+--------------------+-----------------------+--------------------------+
|    Name      | PID |       State        |        Version        |       Last Change        |
+==============+=====+====================+=======================+==========================+
| aaa_mgr      | 242 | error              | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.967Z |
| acl_mgr      | 193 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.967Z |
| app_mgr      | 118 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:11.161Z |
| arp_nd_mgr   | 104 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.967Z |
| bfd_mgr      |     | waiting-for-config |                       |                          |
| bgp_mgr      | 109 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:13.156Z |
| chassis_mgr  | 115 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.967Z |
| dev_mgr      | 150 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.001Z |
| fib_mgr      | 168 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.968Z |
| grpc_server  | 157 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:13.296Z |
| idb_server   | 171 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.228Z |
| igmp_mgr     |     | waiting-for-config |                       |                          |
| isis_mgr     |     | waiting-for-config |                       |                          |
| json_rpc     | 166 | running            |                       | 2022-01-21T20:15:13.234Z |
| label_mgr    | 139 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:13.186Z |
| lag_mgr      | 103 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.968Z |
| ldp_mgr      |     | waiting-for-config |                       |                          |
| linux_mgr    | 116 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.968Z |
| lldp_mgr     | 149 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:13.206Z |
| log_mgr      | 127 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.968Z |
| mgmt_server  | 149 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.968Z |
| mirror_mgr   |     | waiting-for-config |                       |                          |
| mpls_mgr     |     | waiting-for-config |                       |                          |
| net_inst_mgr | 160 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.968Z |
| oam_mgr      | 160 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:13.231Z |
| ospf_mgr     |     | waiting-for-config |                       |                          |
| p4rt_server  | 641 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T21:56:47.935Z |
| plcy_mgr     | 177 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:13.242Z |
| qos_mgr      | 186 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:13.322Z |
| sshd-mgmt    | 192 | running            |                       | 2022-01-21T20:15:19.710Z |
| xdp_cpm      | 197 | running            | v22.3.0-34-ge0ee326f8 | 2022-01-21T20:15:10.968Z |
| xdp_lc_1     | 108 | running            |                       | 2022-01-21T20:15:10.968Z |

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

151

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

+--------------+-----+--------------------+-----------------------+--------------------------+

Step 2. Use the info from state command to check the current failure action settings for the application

to configure.

The following failure action settings can be configured for an application:

• failure-threshold

Number of times that the application must fail during the failure-window period before the
failure-action is taken; the default is three times.

• failure-window

Number of seconds over which the application must fail the failure-threshold number of times
before the failure-action is taken; the default is 300 seconds.

• failure-action

Action to take if the application fails failure-threshold times over failure-window seconds. This
action can be one of the following:

– reboot – reboot the system; this is the default failure-action

– wait = seconds – wait this number of seconds, then attempt to restart the application

– wait = forever – move the application to error state and do not reboot the system or

attempt to restart the application

These settings are highlighted in the following example:

Example

--{ running }--[  ]--
# info from state system app-management application aaa_mgr
    system {
        app-management {
            application aaa_mgr {
                pid 242
                state error
                last-change 2022-01-21T20:15:10.967Z
                author Nokia
                failure-threshold 3
                failure-window 300
                failure-action reboot
                path /opt/srlinux/bin
                launch-command ./sr_aaa_mgr
                search-command ./sr_aaa_mgr
                version v22.3.0-34-ge0ee326f8
                restricted-operations [
                    reload
                ]
                statistics {
                    restart-count 0
                }
                yang {
                    modules [
                        srl_nokia-aaa
                        srl_nokia-aaa-types
                    ]
                    source-directories [
                        /opt/srlinux/models/ietf
                        /opt/srlinux/models/srl_nokia/models/common
                        /opt/srlinux/models/srl_nokia/models/network-instance
                        /opt/srlinux/models/srl_nokia/models/system

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

152

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

                    ]
                }
            }
        }
    }

Step 3. Edit the YAML configuration for the application.

The YAML configuration files for SR Linux applications are located in the directory /opt/
srlinux/appmgr on the SR Linux device. They are named sr_application_name_
config.yml; for example, sr_aaa_mgr_config.yml.

Step 4.

In the .yml file, add or change the settings for the failure-threshold, failure-window,
and failure-action parameters.

Example
In the following example, the failure action settings in the sr_aaa_mgr_config.yml file are
configured so that if the aaa_mgr application fails five times over a 500-second period, the SR
Linux device waits 100 seconds, then attempts to restart the aaa_mgr application:

aaa_mgr_setup:
   path: /opt/srlinux/bin
   launch-command: ./aaamgr_set_env.sh
   run-as-user: root
   never-show: Yes
   never-restart: Yes
   start-order: 1
aaa_mgr:
   path: /opt/srlinux/bin
   launch-command:  ./sr_aaa_mgr
   search-command: ./sr_aaa_mgr
   run-as-user: root
   restricted-operations: ['reload']
   failure-threshold: 5
   failure-window : 500
   failure-action: "wait=100"
   yang-modules:
       names:
           - "srl_nokia-aaa"
           - "srl_nokia-aaa-types"
       source-directories:
           - "/opt/srlinux/models/ietf"
           - "/opt/srlinux/models/srl_nokia/models/common"
           - "/opt/srlinux/models/srl_nokia/models/system"
           - "/opt/srlinux/models/srl_nokia/models/network-instance"

Step 5. Save and close the .yml configuration file.

Step 6.

In the SR Linux CLI, reload the application manager.

Example

--{ running }--[  ]--
# tools system app-management application app_mgr reload

This command reloads any application whose .yml configuration file has changed. It does not
affect any service.

Step 7. Use the info from state command to verify that the changes to the failure action settings are now

in effect.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

153

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

Example

--{ running }--[  ]--
# info from state system app-management application aaa_mgr
    system {
        app-management {
            application aaa_mgr {
                pid 242
                state running
                last-change 2022-01-21T20:15:10.967Z
                author Nokia
                failure-threshold 5
                failure-window 500
                failure-action wait=100
                path /opt/srlinux/bin
                launch-command ./sr_aaa_mgr
                search-command ./sr_aaa_mgr
                version v22.3.0-34-ge0ee326f8
                restricted-operations [
                    reload
                ]
                statistics {
                    restart-count 0
                }
                yang {
                    modules [
                        srl_nokia-aaa
                        srl_nokia-aaa-types
                    ]
                    source-directories [
                        /opt/srlinux/models/ietf
                        /opt/srlinux/models/srl_nokia/models/common
                        /opt/srlinux/models/srl_nokia/models/network-instance
                        /opt/srlinux/models/srl_nokia/models/system
                    ]
                }
            }
        }
    }

9.9 Removing an application from the system

About this task

To remove an application from the system, remove the application files from the SR Linux directories where
they are located, then reload the application manager.

When an application is removed from the system, SR Linux stops sending updates for the paths that
the application would populate. If the application is subsequently reloaded, SR Linux resumes sending
updates.

For active CLI sessions, the schema is updated to remove the application. If an active CLI session exists in
a context that is no longer present because of the application being removed, the CLI context is changed to
the next highest valid context.

User-defined applications can be removed from the system, but removing Nokia-provided SR Linux
applications is not supported.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

154

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

In the following example, the fib_agent application, consisting of files named fib_agent.yml, fib_
agent.sh, fib_agent.py, and fib_agent.yang, is removed from the system.

Procedure

Step 1. Remove the application files from the SR Linux directories.

Example

--{ candidate }--[  ]--
# bash
# rm /etc/opt/srlinux/appmgr/fib_agent.yml
# rm /user_agents/fib_agent.sh
# rm /user_agents/fib_agent.py
# rm /yang/fib_agent.yang
# exit

Step 2. From the SR Linux CLI, reload the application manager.

Example

--{ candidate }--[ ]--
# tools system app-management application app_mgr reload

The application manager stops any application that is no longer present and removes the
application's YANG module from the management server.

9.10 Partioning and isolating application resources

The SR Linux protects system processes through the use of control groups (cgroups), which impose
resource consumption limits on resource-intensive customer applications.

9.10.1 Cgroup profiles

Cgroup profiles define how usage limits are applied. On the SR Linux, cgroup profiles are supported for
CPU and memory and are defined in cgroup_profile.json configuration files.

SR Linux provides a default cgroup profile; customers can configure additional cgroup profiles.

9.10.1.1 Default cgroup profile

The SR Linux-provided default cgroup profile is located in the /opt/srlinux/appmgr/cgroup_
profile.json directory.

Note: Editing the default cgroup profile is not recommended.

If the default cgroup profile fails to parse or be read by the app_mgr, the SR Linux does not start.

The following shows the default cgroup_profile.json file definition:

{
 "profiles": [

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

155

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

  {
   "name": "workload.primary",
   "path": "workload.slice/primary",
   "controller": {
    "memory": {
     "max": 0.8,
     "swap_max": 0,
     "low": 0
    },
    "cpu": {
     "weight": "10000",
     "period": "100000",
     "quota": "0"
    },
    "cpuset": {
     "cpus": "",
     "mems": ""
    }
   }
  },
  {
   "name": "workload.datapath",
   "path": "workload.slice/datapath",
   "controller": {
    "memory": {
     "max": 0.8,
     "swap_max": 0,
     "low": 0
    },
    "cpu": {
     "weight": "10000",
     "period": "100000",
     "quota": "0"
    },
    "cpuset": {
     "cpus": "all",
     "mems": ""
    }
   }
  },
  {
   "name": "workload.secondary",
   "path": "workload.slice/secondary",
   "controller": {
    "memory": {
     "max": 0.5,
     "swap_max": 0,
     "low": 0
    },
    "cpu": {
     "weight": "10000",
     "period": "100000",
     "quota": "0"
    },
    "cpuset": {
     "cpus": "",
     "mems": ""
    }
   }
  },
  {
   "name": "user.default",
   "path": "user.slice/default",
   "controller": {

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

156

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

    "memory": {
     "max": 0.25,
     "swap_max": 0,
     "low": 0
    },
    "cpu": {
     "weight": "1000",
     "period": "100000",
     "quota": "0"
    },
    "cpuset": {
     "cpus": "",
     "mems": ""
    }
   }
  }
 ]
}

Table 7: Default cgroup profile parameters describes the default cgroup profile parameters.

Table 7: Default cgroup profile parameters

Parameter

Description

name

The cgroup profile name.

Type: string

path

The cgroup directory path relative to a unified root path. A typical unified
root path is /sys/fs/cgroup or /mnt/cgroup/unified.

Type: string

controller

The memory controller configuration:

• max

This number denotes the percentage of total memory. The actual
memory value is calculated as (max. × total_memory) and is set in
the memory.max interface file of the cgroup. If the value is 0, this
configuration is ignored. The range is from 0 to 1; the default is 0.8.

•

low

This number denotes the percentage of total memory. The actual
memory value is calculated as (max. × total_memory) and is set in the
memory.low interface file of the cgroup. The range is from 0 to 1; the
default is 0.8.

cpu

The CPU controller configuration:

• weight

This value is set in the cpu.weight interface file of the cgroup. The
range is from 1 to 10 000; the default is 100.

• period

This value specifies a period of time, in microseconds, for how
regularly a cgroup's access to CPU resources must be reallocated.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

157

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

Parameter

Description

This value is set in the cpu.max interface file of the cgroup. The range
is from 1000 to 1 000 000; the default is 100 000.

• quota

This value specifies the total length of time, in microseconds, for
which all tasks in a cgroup can run during one period (as defined in
the period parameter). If quota is set to 0, it translates to ‟max” in
the cpu.max interface file. The range is from 1000 to 1 000 000; the
default is max.

cpuset

CPU usage information for the cgroup:

• cpus

This value indicates the CPUs used by the cgroup. This value can be
"", meaning use all CPUs except for the isolated CPUs; this is the
default. The value all means include the isolated CPUs for cgroup
usage. The value x, y-z, where x, y, and z are CPU numbers,
means use a specific CPU or a range of CPUs.

• mems

This value is used for scheduling multiple NUMA (non-uniform memory
access) aware applications in the cgroup.

9.10.1.2 Customer-defined cgroup profile

Customers can configure cgroup profiles in the /etc/opt/srlinux/appmgr/cgroup_profile.json
directory. The app_mgr creates this directory at boot up if it does not exist.

If a customer-defined cgroup profile fails to load, the system continues to function and applications that are
loaded into the customer cgroup are loaded using the following Nokia default behaviors:

• Nokia-written applications run in the workload.slice/primary cgroup along with any processes that are

started by linuxadmin, including sr_cli.

• Non-Nokia-written applications run in the workload.slice/secondary cgroup. If a customer builds an

application and launches it using the app_mgr without specifying a cgroup, the application runs in this
cgroup.

• All interactive user applications run in the user.slice/default cgroup, including sr_cli when not started by

linuxadmin.

The admin user is treated as any other user in the system. Its processes fall into the user.slice/default
cgroup.

9.10.2 Configuring a cgroup

Customers can configure up to three cgroups in the /etc/opt/srlinux/appmgr/cgroup_
profile.json directory. Customer applications are assigned to these groups. Any more than three
configured cgroups are ignored. The depth of cgroups is limited to two levels where, for example, workload
is one level and primary/secondary are two levels. Any levels beyond this are also ignored.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

158

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

If a cgroup with the same name is used in multiple customer-defined profiles, the system ignores it and
uses the cgroup defined in the default profile.

9.10.2.1 Cgroup configuration example

About this task

The following example shows the configuration of two customer-defined cgroups: one for a lightweight
database that needs priority access to resources and one for storing the users of the database.

The following procedure describes the steps and the outputs.

The preceding configuration created two cgroup profiles: one for the database slice and one for the
frontend slice. The profile for the database slice is configured to limit the database to 50% of system
memory. The profile for the frontend slice is configured to limit the web front end to 20% of system memory.

In addition, both cgroup profiles are configured to limit CPU resources for their respective cgroup. The
database server CPU is weighted at 10 000 (the maximum CPU weight) and the frontend server CPU is
weighted at 5000 (half the CPU weight of the database). The weights are added together and each group
is allocated its ratio of CPU as a proportion of the sum. The periods are kept the same and no guaranteed
CPU is granted.

Procedure

Step 1.

Install the application, including the YAML binary file and optional YANG module.

In this example, YAML defines two applications: dtw-database and dtw-frontend. These
applications are placed into their own cgroups: distributetheweb.slice/database and
distributetheweb.slice/frontend.

The app-mgr creates the cgroups.

The following output shows the installation of the database and a web front end.

dtw-database:
   path: /opt/distributetheweb/bin/
   launch-command: ./run_db
   search-command: ./run_db
   failure-threshold: 100
   failure-action: "wait=60"
   cgroup: distributetheweb.slice/database
   oom-score-adj: -500
   yang-modules:
       names:
           - "database"
       source-directories:
           - "/opt/distributetheweb/yang/"

dtw-frontend:
   path: /opt/distributetheweb/bin/
   launch-command: ./run_frontend
   search-command: ./run_frontend
   failure-threshold: 100
   failure-action: "wait=60"
   cgroup: distributetheweb.slice/frontend
   oom-score-adj: 200
   yang-modules:
       names:
           - "frontend"
       source-directories:

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

159

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

           - "/opt/distributetheweb/yang/"

Step 2. Configure the cgroup profiles in the /etc/opt/srlinux/appmgr/cgroup_profile.json

directory.

The following output shows the configuration.

{
 "profiles": [
  {
   "name": "distributetheweb.database",
   "path": "distributetheweb.slice/database",
   "controller": {
    "memory": {
     "max": 0.5,
     "swap_max": 0,
     "low": 0
    },
    "cpu": {
     "weight": "10000",
     "period": "100000",
     "quota": "0"
    }
   }
  },
  {
   "name": "distributetheweb.frontend",
   "path": "distributetheweb.slice/frontend",
   "controller": {
    "memory": {
     "max": 0.2,
     "swap_max": 0,
     "low": 0
    },
    "cpu": {
     "weight": "5000",
     "period": "100000",
     "quota": "0"
    }
   }
  }
 ]
}

9.10.3 Kernel low-memory killer

The kernel low-memory killer driver monitors the memory state of a running system. It reacts to high
memory pressure by killing the least essential processes to keep the system performing at acceptable
levels.

When the system is low in memory and cannot find free memory space, the out_of_memory function is
called. The out_of_memory function makes memory available by killing one or more processes.

When an out-of-memory (OOM) failure occurs, the out_of_memory function is called and it obtains a score
from the select_bad_process function. The process with the highest score is the one that is killed. Criteria
used to identify a bad process include the following:

• The kernel needs a minimum amount of memory for itself.

• Try to reclaim a large amount of memory.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

160

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

• Do not kill a process that is using a small amount of memory.

• Try to kill the minimum number of processes.

• Algorithms that elevate the sacrifice priority on processes the user wants to kill.

In addition to this list, the OOM killer checks the OOM score. The OOM killer sets the OOM score for each
process and then multiplies that value by memory usage. The processes with higher values have a high
probability of being terminated by the OOM killer.

9.10.3.1 SR Linux process kill strategy

The kernel calculates the oom_score using the formula 10 × percentage of memory used by the process.
The maximum score is 10 × 100% = 1000. The oom_score of a process can be found in the /proc
directory (/proc/$pid/oom_score). An oom_score of 1000 means the process is using all the memory,
an oom_score of 500 means it is using half the memory, and an oom_score of 0 means it is using no
memory.

The OOM killer checks the oom_score_adj file in the /proc/$pid/oom_score_adj directory to adjust
its final calculated score. The default value is 0.

The oom_score_adj value can range from –1000 to 1000. A score of –1000 results in a process using
100% of the memory and in not being terminated by the OOM killer. However, a score of 1000 causes
the Linux kernel to terminate the process even when it uses minimal memory. A score of –100 results in
a process using 10% of the memory before it is considered for termination, as its score remains 0 until its
unadjusted score reaches 100.

The oom_score_adj value for each process is defined in its corresponding YAML definition file. The
system groups the processes based on their score, which the SR Linux OOM killer uses as the hierarchy
for terminating a rogue process, as follows:

• group1 = –998

For processes that should never be killed, such as app_mgr, idb_server, and all processes on the IMM.

• group2 = –200

For processes that ideally should not be killed because doing so has a substantial impact on the
system, such as mgmt_server, chassis_mgr, and net_inst_mgr. A score of –200 means the process
gets to use 20% of the memory before their memory use starts being counted.

• group3 = 0

For process that should be killed if they are using too much memory such as BGP, ISIS, and OSPF.

• group4 = 500

For processes that should be preferentially killed, such as cli and oam_mgr.

Table 8: OOM adjust score per process lists the OOM adjust score for each process.

Table 8: OOM adjust score per process

Process name

OOM adjust score

aaa_mgr

acl_mgr

0

0

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

161

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

Process name

OOM adjust score

app_mgr

sarp_nd_mgr

bfd_mgr

bgp_mgr

chassis_mgr

dev_mgr

dhcp_client_mgr

dhcp_relay_mgr

–998

–200

–200

0

–200

–200

0

0

eth_switch_mgr

–200

evpn_mgr

fib_mgr

grpc_server

idb_server

isis_mgr

json_rpc

l2_mac_learn_mgr

l2_mac_mgr

l2_static_mac_mgr

lag_mgr

linux_mgr

lldp_mgr

log_mgr

mcid_mgr

mgmt_server

mpls_mgr

net_inst_mgr

oam_mgr

0

0

500

–998

0

500

0

0

0

0

0

0

0

0

–200

0

–200

500

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

162

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

Process name

OOM adjust score

ospf_mgr

plcy_mgr

qos_mgr

sdk_mgr

sflow_sample_mgr

sshd-mgmt

static_route_mgr

supportd

timesrv

vrrp_mgr

vxlan_mgr

xdp_cpm

0

0

0

500

500

0

0

0

0

0

0

–200

9.10.4 Application manager extensions for cgroups

The cgroup feature provides two additional parameters in the app_mgr YAML file: the cgroup parameter
and the oom-score-adj parameter.

The app_mgr uses the cgroup parameter to launch an application within a specific cgroup. A valid
value for the cgroup parameter is the path of a cgroup as specified in the cgroup profile (equivalent to /
profiles/name[]/path), from the cgroupv2 root. If this cgroup does not exist, the app_mgr launches
the user application from the default cgroup profile path workload.slice/secondary.

The app_mgr uses the oom-score-adj parameter to set the OOM adjust score for a process. This score
is fed into the SR Linux OOM killer. Valid oom-score-adj scores are any value in the range of –1000 to
1000. A process with a score of –1000 is least likely to be killed while a process with a score of 1000 is
most likely to be killed. At –1000, a process can use 100% of memory and still avoid being terminated by
the OOM killer; however, SR Linux kills the process more frequently.

The cgroup parameter and the oom-score-adj parameter are shown in the following output.

bgp_mgr:
   path: @SRLINUX_BINARY_INSTALL_PREFIX@
   launch-command: @YAML_LAUNCH_ENVIRONMENT@ ./sr_bgp_mgr
   search-command: ./sr_bgp_mgr
   oom-score-adj: 0
   wait-for-config: Yes
   author: 'Nokia'
   restricted-operations: ['reload']
   cgroup: workload.slice/primary
   yang-modules:
       names:
           - "srl_nokia-bgp"

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

163

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

           - "srl_nokia-bgp-vpn"
           - "srl_nokia-rib-bgp"
           - "srl_nokia-system-network-instance-bgp-vpn"
       tools:
           - "srl_nokia-tools-bgp"
       source-directories:
           - "@SRLINUX_FILE_INSTALL_PREFIX@/models/ietf"
           - "@SRLINUX_FILE_INSTALL_PREFIX@/models/srl_nokia/models/common"
           - "@SRLINUX_FILE_INSTALL_PREFIX@/models/srl_nokia/models/interfaces"
           - "@SRLINUX_FILE_INSTALL_PREFIX@/models/srl_nokia/models/network-
instance"
           - "@SRLINUX_FILE_INSTALL_PREFIX@/models/srl_nokia/models/routing-policy"
           - "@SRLINUX_FILE_INSTALL_PREFIX@/models/srl_nokia/models/system"

9.10.5 Debugging cgroups

Cgroup debugging capability is available through:

• SR Linux CLI commands

• Linux-provided CLI commands

9.10.5.1 SR Linux cgroup debugging commands

The SR Linux provides CLI commands to perform the following:

•

•

•

•

check the usage of existing cgroups

show information about the OOM adjust score of applications managed by the app_mgr

show information about the cgroups that are associated with the applications that are managed by the
app_mgr

list all of the applications associated with a specified cgroup

9.10.5.1.1 Checking existing cgroup usage

The following output is an example of checking existing cgroup usage.

--{ running }--[  ]--  
# info from state platform control A cgroup *
    platform {                    
        control A {                
            cgroup /mnt/cgroup/unified/user.slice/default {
                memory-statistics {
                    current 0 
                    current-swap 0    
                    anon 0        
                    kernel-stack 0  
                    slab 0      
                    sock 0
                    anon-thp 0      
                    file 0          
                    file-writeback 0  
                    file-dirty 0
                }
                cpuacct-statistics {
                    user 0

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

164

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

                    system 0
                }
            }
            cgroup /mnt/cgroup/unified/workload.slice/primary {
                memory-statistics {
                    current 1621110784
                    current-swap 0
                    anon 1327427584
                    kernel-stack 2396160
                    slab 12939264
                    sock 151552
                    anon-thp 855638016
                    file 250916864
                    file-writeback 0
                    file-dirty 0
                }
                cpuacct-statistics {
                    user 22082989551
                    system 11252275018
                }
            }
            cgroup /mnt/cgroup/unified/workload.slice/secondary {
                memory-statistics {
                    current 7827456
                    current-swap 0
                    anon 4501504
                    kernel-stack 73728
                    slab 2453504
                    sock 8192
                    anon-thp 0
                    file 0
                    file-writeback 0
                    file-dirty 0
                }
                cpuacct-statistics {
                    user 34323091
                    system 12342430
                }
            }
        }
    }

9.10.5.1.2 Showing current OOM adjust scores

The following output is an example of showing information about the current OOM adjust scores for all
applications that are managed by the app_mgr.

--{ running }--[  ]-- 
# info from state system app-management application * oom-score-adj
    system {                     
        app-management {          
            application aaa_mgr {
                oom-score-adj 0          
            }                  
            application acl_mgr {
                oom-score-adj 0         
            }                  
            application app_mgr {
                oom-score-adj -998    
            }                  
            application arp_nd_mgr {

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

165

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

                oom-score-adj -200
            }                  
|
|
|
            application vxlan_mgr {
                oom-score-adj 0
            }
            application xdp_lc_1 {
                oom-score-adj -200
            }
        }
    }

9.10.5.1.3 Showing cgroup information

The following output is an example of showing information about cgroups that are associated with
applications managed by the app_mgr.

--{ running }--[  ]--  
# info from state system app-management application * cgroup
    system {
        app-management {         
            application aaa_mgr {
                cgroup /mnt/cgroup/unified/workload.slice/primary  
            }
            application acl_mgr {
                cgroup /mnt/cgroup/unified/workload.slice/primary
            }
            application arp_nd_mgr {
                cgroup /mnt/cgroup/unified/workload.slice/primary
            }
            application bgp_mgr {
                cgroup /mnt/cgroup/unified/workload.slice/primary
            }     
|
|
|
            application sshd-mgmt {
                cgroup /mnt/cgroup/unified/workload.slice/secondary  
            }
            application supportd {
                cgroup /mnt/cgroup/unified/workload.slice/primary
            }
            application vxlan_mgr {
                cgroup /mnt/cgroup/unified/workload.slice/primary
            }
            application xdp_lc_1 {
                cgroup /mnt/cgroup/unified/workload.slice/primary
            }
        }
    }

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

166

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

9.10.5.1.4 Listing all the applications associated with a specified cgroup

Use the tools system cgroup command pgrep cgroup cgroupname command to list all the applications
associated with a specified group; the following output shows an example.

--{ running }--[  ]--
# tools system cgroup command pgrep cgroup workload.slice/primary
+-------+----------------------+
|  Pid  |       Process        |
+=======+======================+
| 3373  | sr_app_mgr           |
| 3385  | sr_supportd          |
| 3402  | sr_device_mgr        |
| 3460  | sr_idb_server        |
| 3471  | sr_aaa_mgr           |
| 3482  | sr_acl_mgr           |
| 3518  | sr_arp_nd_mgr        |
| 3542  | sr_chassis_mgr       |
| 3560  | sr_dhcp_client_mgr   |
| 3574  | sr_evpn_mgr          |
| 3586  | sr_fib_mgr           |
| 3598  | sr_l2_mac_learn_mgr  |
| 3611  | sr_l2_mac_mgr        |
| 3621  | sr_lag_mgr           |
| 3631  | sr_linux_mgr         |
| 3641  | sr_log_mgr           |
| 3651  | sr_mcid_mgr          |
| 3681  | sr_mgmt_server       |
| 3702  | sr_net_inst_mgr      |
| 3724  | sr_oam_mgr           |
| 3743  | sr_sdk_mgr           |
| 3753  | sr_sflow_sample_mgr  |
| 3772  | sr_xdp_lc_1          |
| 3874  | sudo                 |
| 3895  | sudo                 |
| 3902  | sudo                 |
| 3921  | sudo                 |
| 3930  | sr_qos_mgr           |
| 3953  | sr_grpc_server       |
| 3979  | sr_json_rpc          |
| 3990  | sr_vxlan_mgr         |
| 16740 | sr_json_wkr          |
| 16742 | python3              |
| 17013 | python3              |
| 18474 | sr_json_wkr          |
| 18478 | python3              |
| 18671 | python3              |
| 20671 | sr_lldp_mgr          |
| 21177 | sr_bgp_mgr           |
| 21190 | sr_plcy_mgr          |
| 12753 | sr_l2_static_mac_mgr |
| 27353 | rsyslogd             |
| 9777  | python               |
+-------+----------------------+

9.10.5.2 Linux-provided cgroup debugging commands

The following Linux-provided CLI commands are available for debugging cgroups:

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

167

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

•

•

the systemd-cgls command

the systemd-cgtop command

The systemd-cgls command dumps the cgroup hierarchy. The following output shows an example of the
systemd-cgls command.

[linuxadmin@srlinux unified]$ systemd-cgls
+-1 /usr/lib/systemd/systemd --switched-root --system --deserialize 22
+-system.slice
  +-rngd.service
  | +-2725 /sbin/rngd -f
  +-systemd-udevd.service
  | +-868 /usr/lib/systemd/systemd-udevd
  +-system-serial\x2dgetty.slice
  | +-serial-getty@ttyS0.service
  |   +-1120 login -- linuxadmin
  |   +-8320 -bash
  |   +-9262 sendacct "systemd-cgls"
  |   +-9263 systemd-cgls
  |   +-9264 less
  +-srlinux.service
  | +- 3092 /usr/bin/sudo /opt/srlinux/bin/sr_linux
  | +- 3120 runuser --user srlinux --group srlinux -- /opt/srlinux/bin/sr_linux
  | +- 4019 /bin/bash /opt/srlinux/bin/sr_linux --user-env-switched
  | +- 4039 ./sr_app_mgr
  | +- 4051 ./sr_supportd --server-mode
  | +- 4068 ./sr_device_mgr
  | +- 4219 ./sr_idb_server
  | +- 4229 ./sr_eth_switch
  | +- 4288 ./sr_aaa_mgr
  | +- 4299 ./sr_acl_mgr
  | +- 4314 ./sr_arp_nd_mgr
  | +- 4324 ./sr_chassis_mgr
  | +- 4337 ./sr_dhcp_client_mgr
  | +- 4365 ./sr_evpn_mgr
  | +- 4381 ./sr_fib_mgr
  | +- 4395 ./sr_l2_mac_learn_mgr
  | +- 4411 ./sr_l2_mac_mgr
  | +- 4423 ./sr_lag_mgr
  | +- 4445 ./sr_linux_mgr
  | +- 4494 ./sr_log_mgr
  | +- 4510 ./ntpd -c /etc/ntps.conf -g
  | +- 4526 ./sr_mcid_mgr
  | +- 4574 ./sr_mgmt_server
  | +- 4608 ./sr_net_inst_mgr
  | +- 4626 ./sr_oam_mgr
  | +- 4640 ./sr_sdk_mgr
  | +- 4658 ./sr_sflow_sample_mgr
  | +- 4681 ./sr_xdp_cpm
  | +- 5197 /usr/bin/sudo -Enu root /usr/bin/sudo -Enu gnmirpc bash -c ./sr_gnmi
  | +- 5224 /usr/bin/sudo -Enu root /usr/bin/sudo -Enu jsonrpc bash -c ./sr_json
  | +- 5243 /usr/bin/sudo -Enu gnmirpc bash -c ./sr_grpc_server
  | +- 5248 ./sr_qos_mgr
  | +- 5261 /usr/bin/sudo -Enu jsonrpc bash -c ./sr_json_rpc
  | +- 5290 ./sr_grpc_server
  | +- 5302 ./sr_json_rpc
  | +- 5693 /usr/sbin/sshd -f /etc/ssh/sshd_config_mgmt
  | +- 6361 /usr/sbin/rsyslogd -i /var/run/srlinux/rsyslogd.pid
  | +-21936 ./sr_bfd_mgr
  | +-22018 ./sr_bgp_mgr
  | +-22132 ./sr_isis_mgr
  | +-22242 ./sr_lldp_mgr
  | +-22321 ./sr_mpls_mgr

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

168

 
 
 
 
Configuration Basics Guide Release 24.7

SR Linux applications

  | +-22437 ./sr_ospf_mgr
  | +-22588 ./sr_plcy_mgr
  | +-22701 ./sr_static_route_mgr
  | +-22796 sr_json_wkr
  | +-22797 python3 -m srlinux.mgmt.json_rpc.json_rpc_server_main --bind=[::]:40
  | +-22953 ./ntpd -c /etc/mntp.conf -g
  | +-23023 python3 -m srlinux.mgmt.json_rpc.json_rpc_server_main --bind=[::]:40
  | +-23736 sr_json_wkr
  | +-23741 python3 -m srlinux.mgmt.json_rpc.json_rpc_server_main --bind=[::]:40
  | +-24009 python3 -m srlinux.mgmt.json_rpc.json_rpc_server_main --bind=[::]:40
  | +-27488 ./dnsmasq --conf-file=/etc/dnsmasq.conf
  +-polkit.service
  | +-2701 /usr/lib/polkit-1/polkitd --no-debug
  +-ztpapi.service
  | +-1114 /opt/srlinux/ztp/virtual-env/bin/python -m ztp.ztphttp
  +-systemd-journald.service
  | +-840 /usr/lib/systemd/systemd-journald
  +-sshd.service
  | +-985 /usr/sbin/sshd -D
  +-crond.service
  | +-1133 /usr/sbin/crond -n
  +-sr_watchdog.service
  | +-1155 sr_wd
  +-dbus.service
  | +-991 /usr/bin/dbus-daemon --system --address=systemd: --nofork --nopidfile
  +-systemd-logind.service
    +-1062 /usr/lib/systemd/systemd-logind

The systemd-cgtop command dumps the current usage of each cgroup. The following output shows an
example of the systemd-cgtop command.

Path                                     Tasks   %CPU   Memory  Input/s Output/s

/                                          186      -        -        -        -
/system.slice/crond.service                  1      -        -        -        -
/system.slice/dbus.service                   1      -        -        -        -
/system.slice/polkit.service                 1      -        -        -        -
/system.slice/rngd.service                   1      -        -        -        -
/system.slice/sr_watchdog.service            1      -        -        -        -
/system.slice/srlinux.service               53      -        -        -        -
/system.slice/sshd.service                   1      -        -        -        -
/system.slic...ial-getty@ttyS0.service       3      -        -        -        -
/system.slice/systemd-journald.service       1      -        -        -        -
/system.slice/systemd-logind.service         1      -        -        -        -
/system.slice/systemd-udevd.service          1      -        -        -        -
/system.slice/ztpapi.service                 1      -        -        -        -

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

169

 
 
 
 
 
Configuration Basics Guide Release 24.7

Datapath resource management

10 Datapath resource management

The 7220 IXR-D1/D2/D3/D4/D5 and 7220-IXR H2/H3/H4 systems have forwarding pipelines that access a
set of shared banks that are partitioned to support the following types of forwarding table entries:

•

•

•

learned MAC addresses

IP host entries

IP longest-prefix-match routes

The default settings for the shared bank allocations can be changed through different configuration
parameters as follows:

• 7220 IXR-D1/D2/D3 systems support configuration of the alpm mode (ALPM = algorithmic longest
prefix match), the requested-extra-ip-host-entries  value, and the ipv6-128bit-lpm-entries value.

– For alpm, three settings are supported: disabled, enabled and high-scale. alpm disabled
completely disables ALPM mode, and provides maximum resources to be split between IP host
entries and MAC table entries. alpm enabled is only available on D1 systems and uses more
shared table resources, suitable for supporting moderate IP FIB scale. alpm high-scale is only
available on D2/D3 systems and uses all available shared resources for IP FIB tables, resulting in
only the base allocation for IP host entries and MAC table entries.

– requested-extra-ip-host-entries should be configured with the number of IP host entries needed
beyond the base allocation. It is possible, depending on the alpm mode setting that not all the
requested entries can be allocated. The allocated number of entries can viewed in info from state,
as discussed in the section Displaying datapath resource management information

• 7220 IXR-D4/D5 systems support configuration of only the alpm mode, and only two settings are

available:

– enabled – enables ALPM using less shared table resources, supporting only moderate IP FIB scale

– high-scale – enables ALPM using more shared table resources, supporting the highest possible IP

FIB scale

• 7220 IXR-H2/H3 systems support configuration of the ipv6-128bit-lpm-entries  value. For more

information, see LPM table partitioning.

10.1 LPM table partitioning

On 7220 IXR-D1/D2/D3 and 7220 IXR-H2/H3 systems, IP FIB scale depends on the partitioning of the
hardware LPM table.

If the ipv6-128bit-lpm-entries parameter is configured to be greater than zero, the hardware LPM table is
partitioned into two sub-blocks: a single-wide sub-block and a double-wide sub-block:

• The single-wide sub-block can store IPv4 routes (each consuming half of a single-wide entry) and IPv6

routes up to /64 prefix length (each consuming a single-wide entry).

• The size of the double-wide sub-block is controlled by the ipv6-128bit-lpm-entries parameter, and this

sub-block can store IPv6 routes up to /128 prefix length (each consuming a double-wide entry).

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

170

 
 
 
 
Configuration Basics Guide Release 24.7

Datapath resource management

It can also store IPv4 routes and IPv6 routes up to /64 prefix length; inside the double-wide sub-block,
IPv4 routes consume half of a single-wide entry, and IPv6 routes up to /64 prefix length require a
double-wide entry.

10.2 Changing datapath resource management settings

Procedure

You can change the datapath resource management settings discussed in LPM table partitioning in order
to provider higher scale for one entry type at the expense of lower scale for another entry type.

This is illustrated in the following examples.

Example: Configure Settings for 7220 IXR-D1

The following example changes datapath resource management settings on a 7220 IXR-D1 system.
This configuration enables Algorithmic Longest Prefix Matching (ALPM) to achieve higher IP
FIB scale and it requests an extra 32K IPv4 host entries on top of the fixed base amount of 16K
entries. Any remaining datapath resources, if any, will be allocated to storing MAC addresses. This
configuration also sets the hardware LPM table partition to the default value of 1024.

--{ * candidate shared default }--[  ]--
# info platform resource-management unified-forwarding-resources
    platform {
        resource-management {
            unified-forwarding-resources {
                alpm enabled
                requested-extra-ip-host-entries 32768
                ipv6-128bit-lpm-entries 1024
            }
        }
    }

Example: Configure Settings for 7220 IXR-D5

The following example changes datapath resource management settings on a 7220 IXR-D5 system.
This configuration enables ALPM (but not in the high-scale mode) to achieve moderate IP FIB scale
and leave more resources for IP host and MAC table entries.

--{ * candidate shared default }--[  ]--
# info platform resource-management unified-forwarding-resources
    platform {
        resource-management {
            unified-forwarding-resources {
                alpm enabled
            }
        }
    }

Example: Restart XDP to activate changes

Datapath resource management configuration changes do not take effect immediately when the
changes are committed; they take effect the next time XDP is restarted. The following example shows
a tools command that restarts XDP:

--{ running }--[  ]--

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

171

 
 
 
 
Configuration Basics Guide Release 24.7

Datapath resource management

# tools system app-management application xdp_lc_1 restart
/system/app-management/application[name=xdp_lc_1]:
    Application 'xdp_lc_1' was killed with signal 9

/system/app-management/application[name=xdp_lc_1]:
    Application 'xdp_lc_1' was restarted

On 7220 IXR-D1, D2, D3, D4, and D5 systems and 7220 IXR-H2, H3, and H4 systems, this
command also restarts XDP-CPM, which causes a temporary loss of management connectivity.

10.3 Displaying datapath resource management information

Procedure

Use the info from state command to display the allocated number of extra host entries and extra MAC
address entries allocated from datapath resource management shared banks.

Example

--{ running }--[  ]--
# info from state platform resource-management unified-forwarding-resources
    platform {
        resource-management {
            unified-forwarding-resources {
                xdp-restart-required true
                alpm enabled
                requested-extra-ip-host-entries 32768
                allocated-extra-ip-host-entries 32768
                allocated-extra-mac-entries 0
                ipv6-128bit-lpm-entries 1024
            }
        }
    }

In the example, the xdp-restart-required leaf is shown as true if a change has been
committed to one or more of the configurable values in the unified-forwarding-resources
container, but XDP has not yet been restarted. Until XDP is restarted, the operational values are still
the values initialized at the last XDP restart.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

172

 
 
 
 
Configuration Basics Guide Release 24.7

Maintenance Mode

11 Maintenance Mode

SR Linux maintenance mode allows you to take a network element out of service so that maintenance
actions can be performed; for example, to upgrade the software image on a router.

Using SR Linux maintenance mode, you can do this with minimal impact on traffic. SR Linux maintenance
mode works as follows:

1. A maintenance group is configured that specifies the resources to be taken out of service. See

Configuring a maintenance group.

2. A maintenance profile is configured that specifies policy changes to apply when the group is in

maintenance mode. A maintenance profile is associated with each maintenance group. See Configuring
a maintenance profile.

The usual intent of the policy changes is to de-preference paths through the maintenance group so that
traffic is diverted elsewhere.

3. The maintenance group is placed into maintenance mode, which applies the policies in the associated

maintenance profile. See Placing a maintenance group into maintenance mode.

4. The user monitors the traffic on the interfaces in the maintenance group. When the traffic rate falls
below a threshold, the user shuts down the members of the maintenance group and performs the
required service. See Taking a maintenance group out of service.

5. After the service is completed, the user takes the maintenance group out of maintenance mode, which
disables the policies in the associated maintenance profile, and restores traffic on the original paths.
See Restoring the maintenance group to service.

11.1 Configuring a maintenance group

Procedure

A maintenance group specifies a set of network resources to be taken out of service when maintenance
mode is enabled. For example, a maintenance group can consist of one or more BGP neighbors or peer
groups belonging to a one or more network instances.

Specify a set of network resources in a maintenance group. The network resources in the maintenance
group are taken out of service when maintenance mode is enabled.

Example

The following example configures maintenance group mgroup1, consisting of the BGP neighbors in
peer group headquarters1, which exists in the default network instance, as well as BGP neighbors
in peer group headquarters2, which exists in network instance "black". In the example, maintenance
group mgroup1 is associated with maintenance profile mprof1.

--{ candidate shared default }--[  ]--
# info system maintenance
    system {
        maintenance {
            group mgroup1 {
                maintenance-profile mprof1

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

173

 
 
 
 
Configuration Basics Guide Release 24.7

Maintenance Mode

                maintenance-mode {
                    admin-state disable
                }
                members {
                    bgp {
                        network-instance default {
                            peer-group [
                                headquarters1
                            ]
                        network-instance black {
                            peer-group [
                                headquarters2
                            ]
                        }
                    }
                }
            }
        }
    }

11.2 Configuring a maintenance profile

Procedure

In a maintenance profile, you specify policy changes that are applied to members of a maintenance group
when maintenance mode is enabled for the group.

Example:

The following example configures a routing policy and a maintenance profile that references the
routing policy.

The following defines the routing policy drain-with-as-path-prepend:

--{ candidate shared default }--[  ]--
# info routing-policy policy drain-with-as-path-prepend
    routing-policy {
        policy drain-with-as-path-prepend {
            default-action {
                accept {
                    bgp {
                        as-path {
                            prepend {
                                as-number auto
                                repeat-n 3
                            }
                        }
                    }
                }
            }
        }
    }

The following defines a maintenance profile that references the routing policy drain-with-as-path-
prepend.

--{ candidate shared default }--[  ]--
# info system maintenance
    system {

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

174

 
 
 
 
Configuration Basics Guide Release 24.7

Maintenance Mode

        maintenance {
            profile mprof1 {
                bgp {
                    import-policy drain-with-as-path-prepend
                    export-policy drain-with-as-path-prepend
                }
            }
        }
    }

11.3 Placing a maintenance group into maintenance mode

Procedure

When a maintenance group is placed into maintenance mode, it applies the policies in the associated
maintenance profile to the resources in the maintenance group.

To place a maintenance group into maintenance mode, change the setting for maintenance-mode in the
group configuration to enable, then commit the configuration.

Example

The following example enables maintenance mode for maintenance group mgroup1 and commits the
configuration. The policies configured in the maintenance profile mprof1 are applied to the resources
configured in maintenance group mgroup1.

--{ candidate shared default }--[  ]--
# info system maintenance group mgroup1
    system {
        maintenance {
            group mgroup1 {
                maintenance-mode {
                    admin-state enable
                }
            }
        }
    }

--{ * candidate shared default }--[  ]--
# commit stay
All changes have been committed. Starting new transaction.

11.4 Taking a maintenance group out of service

Procedure

After enabling maintenance mode for a maintenance group, monitor the traffic on the interfaces in the
group. When the traffic rate drops to an acceptable level, shut down the members of the maintenance
group and perform the required service.

Monitor traffic for an interface using the info from state command to show interface traffic statistics. When
the traffic rate reaches a low-enough level, administratively disable the interface.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

175

 
 
 
 
Configuration Basics Guide Release 24.7

Maintenance Mode

Example

To monitor an interface:

--{ running }--[  ]--
# info from state interface ethernet-1/2 statistics
    interface ethernet-1/2 {
        statistics {
            in-octets 46969
            in-unicast-pkts 492
            in-broadcast-pkts 0
            in-multicast-pkts 34
            in-discards 0
            in-errors 0
            in-unknown-protos 0
            in-fcs-errors 0
            out-octets 46169
            out-unicast-pkts 490
            out-broadcast-pkts 1
            out-multicast-pkts 25
            out-discards 0
            out-errors 0
            carrier-transitions 1

To shut down the interface:

--{ * candidate shared default }--[  ]--
# interface ethernet-1/2 admin-state disable
# commit stay
All changes have been committed. Starting new transaction.

11.5 Restoring the maintenance group to service

Procedure

After performing the required maintenance operations, restore the maintenance group to service.

To restore the maintenance group to service, change the setting for the maintenance-mode state in the
group configuration to disable, then commit the configuration.

Example

The following example takes maintenance group mgroup1 out of maintenance mode:

--{ candidate shared default }--[  ]--
# info system maintenance group mgroup1
    system {
        maintenance {
            group mgroup1 {
                maintenance-mode {
                    admin-state disable
                }
            }
        }
    }

--{ * candidate shared default }--[  ]--
# commit stay

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

176

 
 
 
 
Configuration Basics Guide Release 24.7

Maintenance Mode

All changes have been committed. Starting new transaction.

3HE 20653 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

177

 
 
 
 
Customer document and product support

Customer documentation
Customer documentation welcome page

Technical support
Product support portal

Documentation feedback
Customer documentation feedback

Nokia Service Router Linux
Release 24.7

Routing Protocols Guide

3HE 20668 AAAA TQZZA
Edition: 01
July 2024

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

Nokia is committed to diversity and inclusion. We are continuously reviewing our customer
documentation and consulting with standards bodies to ensure that terminology is inclusive and
aligned with the industry. Our future customer documentation will be updated accordingly.

This document includes Nokia proprietary and confidential information, which may not be distributed
or disclosed to any third parties without the prior written consent of Nokia.

This document is intended for use by Nokia’s customers (“You”/”Your”) in connection with a product
purchased or licensed from any company within Nokia Group of Companies. Use this document
as agreed. You agree to notify Nokia of any errors you may find in this document; however, should
you elect to use this document for any purpose(s) for which it is not intended, You understand and
warrant that any determinations You may make or actions You may take will be based upon Your
independent judgment and analysis of the content of this document.

Nokia reserves the right to make changes to this document without notice. At all times, the
controlling version is the one available on Nokia’s site.

No part of this document may be modified.

NO WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT
LIMITED TO ANY WARRANTY OF AVAILABILITY, ACCURACY, RELIABILITY, TITLE, NON-
INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, IS MADE
IN RELATION TO THE CONTENT OF THIS DOCUMENT. IN NO EVENT WILL NOKIA BE LIABLE
FOR ANY DAMAGES, INCLUDING BUT NOT LIMITED TO SPECIAL, DIRECT, INDIRECT,
INCIDENTAL OR CONSEQUENTIAL OR ANY LOSSES, SUCH AS BUT NOT LIMITED TO LOSS
OF PROFIT, REVENUE, BUSINESS INTERRUPTION, BUSINESS OPPORTUNITY OR DATA
THAT MAY ARISE FROM THE USE OF THIS DOCUMENT OR THE INFORMATION IN IT, EVEN
IN THE CASE OF ERRORS IN OR OMISSIONS FROM THIS DOCUMENT OR ITS CONTENT.

Copyright and trademark: Nokia is a registered trademark of Nokia Corporation. Other product
names mentioned in this document may be trademarks of their respective owners.

The registered trademark Linux® is used pursuant to a sublicense from the Linux Foundation, the
exclusive licensee of Linus Torvalds, owner of the mark on a worldwide basis.

© 2024 Nokia.

Routing Protocols Guide Release 24.7

Table of contents

Table of contents

1  About  this  guide.................................................................................................................................. 7

1.1  Precautionary and information messages...................................................................................7

1.2  Conventions................................................................................................................................. 7

2  What's  new........................................................................................................................................... 9

3  OSPF................................................................................................................................................... 10

3.1  OSPF global configuration........................................................................................................ 10

3.1.1  Configuring basic OSPF parameters.............................................................................. 11

3.1.2  Configuring the router ID................................................................................................ 12

3.1.3  Configuring  an  area........................................................................................................ 13

3.1.4  Configuring a stub area.................................................................................................. 13

3.1.5  Configuring a Not-So-Stubby area..................................................................................14

3.1.6  Configuring an interface..................................................................................................14

4  BGP..................................................................................................................................................... 16

4.1  BGP global configuration.......................................................................................................... 16

4.1.1  Configuring  an  ASN........................................................................................................ 16

4.1.2  Configuring the router ID................................................................................................ 17

4.2  Configuring a BGP peer group................................................................................................. 17

4.3  Configuring BGP neighbors...................................................................................................... 18

4.4  BGP peer import and export policies........................................................................................18

4.5  eBGP  multihop.......................................................................................................................... 20

4.5.1  Configuring eBGP multihop............................................................................................ 21

4.6  AS  path  options.........................................................................................................................21

4.6.1  Configuring allow-own-as................................................................................................ 22

4.6.2  Configuring replace-peer-as............................................................................................22

4.6.3  Configuring remove-private-as........................................................................................ 23

4.7  BGP  MED.................................................................................................................................. 24

4.7.1  Configuring always-compare-med...................................................................................25

4.8  Route  reflection......................................................................................................................... 25

4.8.1  Configuring route reflection.............................................................................................25

4.9  BGP  add-path............................................................................................................................26

4.9.1  Configuring BGP add-path..............................................................................................27

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

3

 
 
 
 
Routing Protocols Guide Release 24.7

Table of contents

4.10  BGP  graceful  restart................................................................................................................29

4.10.1  Configuring graceful restart...........................................................................................29

4.11  BGP unnumbered peering.......................................................................................................30

4.11.1  Configuring BGP unnumbered peering......................................................................... 33

4.12  Prefix-limit for BGP peers....................................................................................................... 33

4.12.1  Configuring the prefix-limit for BGP peers....................................................................34

4.13  RT constrained route advertisement.......................................................................................36

4.13.1  RT-constrain on SR Linux for various router types...................................................... 36

4.13.2  Best-path selection and RTC route re-advertisement...................................................37

4.13.3  Using RTC routes to filter advertised routes................................................................ 38

4.13.4  BGP RIB YANG model for RTC Routes....................................................................... 39

4.14  BGP configuration management............................................................................................. 39

4.14.1  Modifying  an  ASN......................................................................................................... 39

4.14.2  Deleting a BGP neighbor.............................................................................................. 40

4.14.3  Deleting a BGP peer group.......................................................................................... 40

4.14.4  Resetting BGP peer connections..................................................................................40

4.15  BGP  shortcuts......................................................................................................................... 41

4.15.1  Configuring BGP shortcuts over segment routing........................................................ 42

4.16  BGP  TCP  MSS........................................................................................................................44

4.16.1  Configuring BGP TCP MSS..........................................................................................44

4.17  Error handling for BGP update messages..............................................................................46

4.18  BGP  multipath......................................................................................................................... 46

4.18.1  Configuring BGP multipath........................................................................................... 46

5  Seamless MPLS with BGP labeled unicast (BGP-LU)................................................................... 48

5.1  Seamless MPLS with BGP-LU configuration............................................................................48

5.2  Initial configuration for Seamless MPLS................................................................................... 49

5.2.1  Configuring interfaces..................................................................................................... 49

5.2.2  Configuring  IS-IS............................................................................................................. 51

5.2.3  Configuring MPLS label blocks.......................................................................................52

5.2.4  Configuring  LDP.............................................................................................................. 52

5.3  BGP configuration for Seamless MPLS....................................................................................53

5.3.1  Configuring BGP on ABRs............................................................................................. 54

5.3.2  Configuring BGP on the core RR................................................................................... 55

5.3.3  Configuring BGP on ANs toward ABRs..........................................................................56

5.4  Export policy configuration for Seamless MPLS.......................................................................57

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

4

 
 
 
 
Routing Protocols Guide Release 24.7

Table of contents

5.4.1  Configuring export policies on ANs and ABRs............................................................... 57

6  Segment routing with BGP-LU prefix SID...................................................................................... 59

6.1  Segment routing with BGP-LU prefix SID topology example................................................... 60

6.2  Configuring segment routing with BGP-LU prefix SID..............................................................61

7  IS-IS..................................................................................................................................................... 66

7.1  Basic  IS-IS  configuration...........................................................................................................68

7.1.1  Enabling an IS-IS instance............................................................................................. 68

7.1.2  Configuring the router level............................................................................................ 69

7.1.3  Configuring the Network Entity Title............................................................................... 69

7.1.4  Configuring global parameters........................................................................................70

7.1.5  Configuring interface parameters....................................................................................70

7.1.6  Configuring authentication keys......................................................................................71

7.2  IS-IS  graceful  restart................................................................................................................. 72

7.2.1  Configuring IS-IS graceful restart................................................................................... 73

7.3  Displaying IS-IS information......................................................................................................74

7.4  Clearing IS-IS information......................................................................................................... 78

7.5  IS-IS  weighted  ECMP............................................................................................................... 78

7.5.1  Enabling weighted ECMP............................................................................................... 79

7.5.2  Configuring weighted load-balancing over interface next-hops...................................... 80

7.5.3  Normalizing datapath weights.........................................................................................81

7.6  Multi-instance  IS-IS................................................................................................................... 81

7.6.1  Configuring  the  IID.......................................................................................................... 82

7.6.2  Enabling  the  IID-TLV.......................................................................................................82

7.6.3  Displaying MI-ISIS information........................................................................................83

7.7  Multi-Topology IS-IS MT0 and MT2.......................................................................................... 84

7.7.1  Configuring an IPv6 routing............................................................................................ 84

7.7.2  Configuring MT2 topology...............................................................................................85

7.8  IS-IS extensions for Traffic Engineering (TE)........................................................................... 85

7.8.1  Enabling advertisement of IS-IS TE TLVs/sub-TLVs...................................................... 85

7.8.2  TE  router  ID  TLV.............................................................................................................86

7.8.2.1  Advertising IPv4 TE router ID TLV....................................................................... 88

7.8.2.2  Advertising IPv6 TE router ID TLV....................................................................... 89

7.8.3  Advertising TE attributes using legacy and ASLA TLVs................................................. 90

7.8.3.1  Enabling advertisement of TE attributes in legacy mode..................................... 91

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

5

 
 
 
 
Routing Protocols Guide Release 24.7

Table of contents

8  Protocol  authentication.....................................................................................................................92

8.1  Configuring protocol authentication...........................................................................................92

9  Routing  policies.................................................................................................................................95

9.1  Routing policy match conditions............................................................................................... 95

9.1.1  Specifying match conditions in a routing policy..............................................................97

9.2  Routing  policy  actions............................................................................................................... 98

9.2.1  Specifying actions in a routing policy........................................................................... 100

9.2.2  Specifying a default action............................................................................................101

9.2.3  Policy actions for setting MED in BGP routes.............................................................. 101

9.3  Applying a routing policy.........................................................................................................103

9.3.1  Applying a default policy to eBGP sessions.................................................................104

9.3.2  Replacing an AS path...................................................................................................105

9.3.3  AS  path  sets..................................................................................................................105

9.3.3.1  Configuring an AS path set................................................................................ 106

9.3.4  BGP community-sets.....................................................................................................107

9.3.4.1  Configuring a BGP community-set..................................................................... 108

9.3.5  Prefix  sets......................................................................................................................109

9.3.5.1  Configuring a prefix set...................................................................................... 109

9.4  Resequencing statements in a routing policy......................................................................... 110

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

6

 
 
 
 
Routing Protocols Guide Release 24.7

About this guide

1 About this guide

This document describes routing protocols used with the Nokia Service Router Linux (SR Linux). Examples
of commonly used commands are provided.

This document is intended for network technicians, administrators, operators, service providers, and others
who need to understand how the router is configured.

Note:
This manual covers the current release and may also contain some content that will be released
in later maintenance loads. See the SR Linux Release Notes for information on features
supported in each load.

Configuration and command outputs shown in this guide are examples only; actual displays may
differ depending on supported functionality and user configuration.

1.1 Precautionary and information messages

The following are information symbols used in the documentation.

DANGER: Danger warns that the described activity or situation may result in serious personal
injury or death. An electric shock hazard could exist. Before you begin work on this equipment,
be aware of hazards involving electrical circuitry, be familiar with networking environments, and
implement accident prevention procedures.

WARNING:  Warning indicates that the described activity or situation may, or will, cause
equipment damage, serious performance problems, or loss of data.

Caution: Caution indicates that the described activity or situation may reduce your component or
system performance.

Note: Note provides additional operational information.

Tip: Tip provides suggestions for use or best practices.

1.2 Conventions

Nokia SR Linux documentation uses the following command conventions.

• Bold type indicates a command that the user must enter.

•

Input and output examples are displayed in Courier text.

• An open right-angle bracket indicates a progression of menu choices or simple command sequence

(often selected from a user interface). Example: start > connect to.

• A vertical bar (|) indicates a mutually exclusive argument.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

7

 
 
 
 
Routing Protocols Guide Release 24.7

About this guide

• Square brackets ([ ]) indicate optional elements.

• Braces ({ }) indicate a required choice. When braces are contained within square brackets, they indicate

a required choice within an optional element.

•

Italic type indicates a variable.

Generic IP addresses are used in examples. Replace these with the appropriate IP addresses used in the
system.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

8

 
 
 
 
Routing Protocols Guide Release 24.7

What's new

2 What's new

Topic

Location

Support for Multi-Topology IS-IS

Multi-Topology IS-IS MT0 and MT2

IS-IS TE extensions for TE

IS-IS extensions for Traffic Engineering (TE)

Segment routing with BGP-LU prefix SID

Segment routing with BGP-LU prefix SID

BGP add-path support for BGP-LU address families BGP add-path

New configuration for BGP multipath

BGP multipath

RT-constrain support

RT constrained route advertisement

Support for additional routing policy actions:

Routing policy actions

• next-statement action

• next-policy action and policy chaining for BGP

import and export policies

• BGP next-hop-self action

•

route-preference action

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

9

 
 
 
 
Routing Protocols Guide Release 24.7

OSPF

3 OSPF

Open Shortest Path First (OSPF) is a hierarchical link state protocol. OSPF is an interior gateway protocol
(IGP) used within large Autonomous Systems (ASs). OSPF routers exchange state, cost, and other
relevant interface information with neighbors. The information exchange enables all participating routers to
establish a network topology map. Each router applies the Dijkstra algorithm to calculate the shortest path
to each destination in the network. The resulting OSPF forwarding table is submitted to the routing table
manager to calculate the routing table.

When a router is started with OSPF configured, OSPF, along with the routing-protocol data structures, is
initialized and waits for indications from lower-layer protocols that its interfaces are functional.

The hierarchical design of OSPF allows a collection of networks to be grouped into a logical area. An
area’s topology is concealed from the rest of the AS which significantly reduces OSPF protocol traffic. With
the correct network design and area route aggregation, the size of the route table can be greatly reduced,
resulting in decreased OSPF route calculation time and topological database size.

Routers that belong to more than one area are called area border routers (ABRs). An ABR maintains a
separate topological database for each area it is connected to. Every router that belongs to the same area
has an identical topological database for that area.

Key OSPF areas are:

• Backbone Areas – The backbone distributes routing information between areas.

• Stub areas – A designated area that does not allow external route advertisements. Routers in a stub
area do not maintain external routes. A single default route to an ABR replaces all external routes.

• Not-So-Stubby Areas (NSSAs) – NSSAs are similar to stub areas in that no external routes are

imported into the area from other OSPF areas. External routes learned by OSPF routers in the NSSA
area are advertised as type-7 LSAs within the NSSA area and are translated by ABRs into type-5
external route advertisements for distribution into other areas of the OSPF domain.

3.1 OSPF global configuration

The minimal OSPF parameters that should be configured to deploy OSPF are:

• OSPF version

SR Linux supports OSPF version 2 and version 3. The OSPF version number must be specified in the
configuration. If configuring OSPFv3, you must also specify the address family to be used, either IPv4
or IPv6.

• OSPF instance ID (when configuring multiple instances)

An OSPF instance ID must be defined when configuring multiple instances or the instance being
configured is not the base instance. If an instance ID is not configured, the default instance IDs are as
follows:

– 0 for OSPFv2

– 0 for OSPF v3 with address family IPv6 unicast

– 64 for OSPF v3 with address family IPv4 unicast

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

10

 
 
 
 
Routing Protocols Guide Release 24.7

OSPF

• Router ID

Each router running OSPF must be configured with a unique router ID. The router ID is used by both
OSPF and BGP routing protocols in the routing table manager.

When you configure a new router ID, OSPF is automatically disabled and re-enabled to initialize the
new router ID.

• An area

At least one OSPF area must be created. An interface must be assigned to each OSPF area.

•

Interfaces

An interface is the connection between a router and one of its attached networks. An interface has
state information associated with it, which is obtained from the underlying lower level protocols and the
routing protocol itself. An interface to a network has associated with it a single IP address and mask
(unless the network is an unnumbered point-to-point network). An interface is sometimes also referred
to as a link.

3.1.1 Configuring basic OSPF parameters

Procedure

To create a basic OSPF configuration, the minimal OSPF parameters required are the following:

• OSPF version number, either v2 or v3. If configuring OSPFv3, you must specify the address family,

either IPv4 or IPv6.

• A router ID

• One or more areas

•

Interfaces

Example: Configure basic OSPFv2 parameters

--{ * candidate shared default }--[ network-instance default protocols ]--
# info ospf
    ospf {
        instance default {
            admin-state enable
            version ospf-v2
            router-id 1.1.1.1
            area 0.0.0.1 {
                interface ethernet-1/1.1 {
                    interface-type broadcast
                }
                interface ethernet-1/2.1 {
                    interface-type broadcast
                }
                interface ethernet-1/16.1 {
                    interface-type broadcast
                }
                interface lo0.1 {
                    interface-type broadcast
                }
            }
        }
    }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

11

 
 
 
 
Routing Protocols Guide Release 24.7

OSPF

Example: Configure basic OSPFv3 parameters

--{ * candidate shared default }--[ network-instance default protocols ]--
# info ospf
    ospf {
        instance default {
            admin-state enable
            version ospf-v3
            address-family ipv6-unicast
            router-id 1.1.1.1
            area 0.0.0.1 {
                interface ethernet-1/1.1 {
                    interface-type broadcast
                }
                interface ethernet-1/2.1 {
                    interface-type broadcast
                }
                interface ethernet-1/16.1 {
                    interface-type broadcast
                }
                interface lo0.1 {
                    interface-type broadcast
                }
            }
        }
    }

3.1.2 Configuring the router ID

Procedure

You can configure the router ID either at the network-instance level or at the OSPF protocol level. The
router ID, expressed like an IP address, uniquely identifies the router within an AS. In OSPF, routing
information is exchanged between ASs, groups of networks that share routing information. It can be set
to be the same as the loopback (system interface) address. Subscriber services also use this address as
far-end router identifiers when service distribution paths (SDPs) are created. The router ID is used by both
OSPF and BGP routing protocols.

When you configure a new router ID, OSPF is automatically disabled and re-enabled to initialize the new
router ID.

If a router ID is configured at the OSPF protocol level, OSPF uses it instead of the router ID configured at
the network-instance level.

Example: Configure router ID at the network-instance level

OSPF uses this router ID unless a different router ID is configured at the OSPF protocol level.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        router-id 10.10.10.104{
        }
    }

Example: Configure router ID for the OSPF instance at the OSPF protocol level

--{ * candidate shared default }--[  ]--

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

12

 
 
 
 
Routing Protocols Guide Release 24.7

OSPF

# info network-instance default
    network-instance default {
        protocols {
            ospf {
                instance default {
                    version ospf-v2
                    router-id 2.2.2.2
                }
            }
        }
    }

3.1.3 Configuring an area

Procedure

An OSPF area consists of routers configured with the same area ID. To include a router in a specific area,
the common area ID must be assigned and an interface identified.

If your network consists of multiple areas, you must also configure a backbone area (0.0.0.0) on at least
one router. The backbone comprises the area border routers and other routers not included in other
areas. The backbone distributes routing information between areas. The backbone is considered to be a
participating area within the autonomous system. To maintain backbone connectivity, there must be at least
one interface in the backbone area.

The minimal configuration must include an area ID and an interface. Modifying other command parameters
are optional.

Example

The following example configures an area at the OSPF level:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
    protocols {
        ospf {
            instance default {
                version ospf-v2
                area 1.1.1.1 {
                }
            }
        }
    }

3.1.4 Configuring a stub area

Procedure

You can configure stub areas to control external advertisement flooding and to minimize the size of the
topological databases on an area's routers. A stub area cannot also be configured as an NSSA. By default,
summary route advertisements are sent into stub areas.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

13

 
 
 
 
Routing Protocols Guide Release 24.7

OSPF

Example

The following example configures an OSPF stub area:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
    protocols {
        ospf {
            instance default {
                version ospf-v2
                area 1.1.1.1 {
                    stub {
                    }
                }
            }
        }
    }

3.1.5 Configuring a Not-So-Stubby area

Procedure

You can explicitly configure an area to be a Not-So-Stubby Area (NSSA). NSSAs are similar to stub areas
in that no external routes are imported into the area from other OSPF areas. An NSSA has the capability to
flood external routes it learns throughout its area and by an area border router to the entire OSPF domain.
An area cannot be both a stub area and an NSSA.

Example

The following is an OSPF NSSA configuration example:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
    protocols {
        ospf {
            instance default {
                version ospf-v2
                area 1.1.1.1 {
                    nssa {
                    }
                }
            }
        }
    }

3.1.6 Configuring an interface

Procedure

You can configure an interface to act as a connection between a router and one of its attached networks.
An interface includes state information that was obtained from underlying lower level protocols and from
the routing protocol itself. An interface to a network is associated with a single IP address and mask

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

14

 
 
 
 
Routing Protocols Guide Release 24.7

OSPF

(unless the network is an unnumbered point-to-point network). If the address is merely changed, then the
OSPF configuration is preserved.

Example

The following is an OSPF interface configuration example:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
    protocols {
        ospf {
            instance default {
                version ospf-v2
                area 1.1.1.1 {
                    interface ethernet-1/2 {
                    }
                }
            }
        }
    }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

15

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

4 BGP

Border Gateway Protocol (BGP) is an inter-AS routing protocol. An Autonomous System (AS) is a network
or a group of routers logically organized and controlled by common network administration. BGP enables
routers to exchange network reachability information, including information about other ASs that traffic
must traverse to reach other routers in other ASs.

ASs share routing information, such as routes to each destination and information about the route or AS
path, with other ASs using BGP. Routing tables contain lists of known routers, reachable addresses, and
associated path cost metrics for each router. BGP uses the information and path attributes to compile a
network topology.

To set up BGP routing, participating routers must have BGP enabled, and be assigned to an AS, and the
neighbor (peer) relationships must be specified. A router typically belongs to only one AS.

This section describes the minimal configuration necessary to set up BGP on SR Linux. This includes the
following:

• Global BGP configuration, including specifying the Autonomous System Number (ASN) of the router, as

well as the router ID.

• BGP peer group configuration, which specifies settings that are applied to BGP neighbor routers in the

peer group.

• BGP neighbor configuration, which specifies the peer group to which each BGP neighbor belongs, as

well as settings specific to the neighbor, including the AS to which the router is peered.

For information about all other BGP settings, see the SR Linux online help, as well as the SR Linux
Advanced Solutions Guide and the SR Linux Data Model Reference.

4.1 BGP global configuration

Global BGP configuration includes specifying the Autonomous System Number (ASN) of the router and the
router ID.

4.1.1 Configuring an ASN

Procedure

You can configure an Autonomous System Number (ASN) for a router. An ASN is a globally unique value
that associates a router to a specific AS. Each router participating in BGP must have an ASN specified.

Example

The following example configures an ASN for a router:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

16

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

                autonomous-system 65002
            }
        }
    }

4.1.2 Configuring the router ID

Procedure

The router ID, expressed like an IP address, uniquely identifies the router and indicates the origin of a
packet for routing information exchanged between ASs. The router ID is configured at the BGP level.

Example:

The following example configures a router ID:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                router-id 2.2.2.2
        }
    }

4.2 Configuring a BGP peer group

Procedure

You can configure a BGP peer group. A BGP peer group is a collection of related BGP neighbors. The
group name should be a descriptive name for the group.

All parameters configured for a peer group are inherited by each peer (neighbor) in the peer group, but a
group parameter can be overridden for specific neighbors in the configuration of that neighbor.

Example

The following example configures the administrative state and trace options for a BGP peer group.
These settings apply to all of the BGP neighbors that are members of this group, unless specifically
overridden in the neighbor configuration.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                group headquarters1 {
                    admin-state enable
                    traceoptions {
                        flag events {
                        }
                        flag graceful-restart {
                        }
                    }
                }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

17

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

            }

4.3 Configuring BGP neighbors

Procedure

After configuring a BGP peer group and assigning options, you can add neighbors within the same AS to
create internal BGP (iBGP) connections and, or neighbors in a different AS to create external BGP (eBGP)
peers. All parameters configured for the peer group to which the neighbor is assigned are applied to the
neighbor, but a peer group parameter can be overridden on a specific neighbor basis.

Example

The following example configures parameters for two BGP neighbors. The peer-group parameter
configures both nodes to use the settings specified for the headquarters1 peer group. The peer
group settings apply unless they are specifically overridden in the neighbor configuration.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                neighbor 192.168.11.1 {
                    peer-group headquarters1
                    description "default network-instance bgp neighbor to Node A"
                    peer-as 65001
                    local-as as-number 65002 {
                    }
                    multihop {
                        admin-state enable
                        maximum-hops 3
                    }
                    failure-detection {
                        enable-bfd true
                        fast-failover true
                    }
                }
                neighbor 192.168.13.2 {
                    peer-group headquarters1
                    description "default network-instance bgp neighbor to Node C"
                    peer-as 65003
                    local-as as-number 65002 {
                    }
                    failure-detection {
                        enable-bfd true
                        fast-failover true
                    }
                }
            }
        }
    }

4.4 BGP peer import and export policies

SR Linux supports BGP import policies and export policies:

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

18

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

• An import policy is a sequence of match conditions and action rules that are run on certain routes

received from BGP peers. If a received route is rejected by an import policy rule, then depending on the
address family and BGP configuration options, the route may be discarded or it may be stored in the
RIB but considered invalid and not considered during best-path selection.

• An export policy is a sequence of match conditions and action rules that are run on routes that have

been selected for advertisement to a BGP peer. If a route that would normally be advertised to a peer
(RIB-OUT) is rejected by an export policy rule, then the actual advertisement of the route to the peer is
blocked.

BGP import and export policy rules

You can configure BGP import or export policies at the BGP global, peer-group, and neighbor levels. The
policies operate according to the following rules:

For BGP import policies:

•

•

•

•

If the configuration of a BGP neighbor explicitly specifies an import policy, then this is the policy used to
filter inbound routes from the peer, and import policies defined at higher levels of configuration (group or
BGP instance as a whole) are ignored.

If the configuration of a BGP neighbor does not specify an import policy, but the peer group to which it
belongs does specify an import policy, then the peer-group import policy is used to filter inbound routes
from the peer, and the import policy defined at the BGP instance level is ignored.

If the configuration of a BGP neighbor does not specify an import policy, and the peer group to which
it belongs also does not specify an import policy, then the BGP-instance import-policy is used to filter
inbound routes from the peer.

If there is no import-policy at any level of configuration that applies to a BGP neighbor, then the handling
of received routes depends on the peer session type, as follows:

– If the peer session type is iBGP, then all received routes are accepted.

– If the peer session type is eBGP, then all received routes are rejected by default; however, this can
be changed by configuring the ebgp-default-policy import-reject-all setting to false.

For BGP export policies:

•

•

•

•

If the configuration of a BGP neighbor explicitly specifies an export policy, then this is the policy used
to filter outbound routes sent to the peer, and export policies defined at higher levels of configuration
(group or BGP instance as a whole) are ignored.

If the configuration of a BGP neighbor does not specify an export policy, but the peer group to which
it belongs does specify an export policy, then the peer-group export policy is used to filter outbound
routes sent to the peer, and the export policy defined at the BGP instance level is ignored.

If the configuration of a BGP neighbor does not specify an export policy, and the peer group to which
it belongs also does not specify an export policy, then the BGP-instance export policy is used to filter
outbound routes sent to the peer.

If there is no export policy at any level of configuration that applies to a BGP neighbor, then the
advertisement of routes in the local RIB-IN depends on the RIB-IN type and the peer session type as
follows:

– If the peer session type is iBGP, then all non-imported BGP RIB-INs are accepted and therefore

eligible for advertisement.

– If the peer session type is eBGP, then all routes are rejected by default, meaning that no routes

are eligible for advertisement; however, this can be changed by configuring the ebgp-default-

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

19

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

policy export-reject-all setting to false, in which case all non-imported BGP RIB-INs are
accepted and eligible for advertisement.

AFI-SAFI policy attachment rules

The OpenConfig BGP model supports the attachment of AFI-SAFI-specific route policies to selected peers,
peer-groups, or to the BGP instance as a whole. This implies, for example, that for one single peer you
could have one export policy for IPv4_UNICAST routes advertised to the peer, and a different export policy
for IPV6_UNICAST routes advertised to the peer. To accommodate this kind of configuration, SR Linux
includes the following contexts supporting attachment of import and export policies:

• network-instance.protocols.bgp

• network-instance.protocols.bgp.afi-safi

• network-instance.protocols.bgp.group

• network-instance.protocols.bgp.group.afi-safi

• network-instance.protocols.bgp.neighbor

• network-instance.protocols.bgp.neighbor.afi-safi

The policy that applies to a route is based on the following order of priority:

1. AFI-SAFI at neighbor level

2. AFI-SAFI at group level

3. AFI-SAFI at instance level

4. General policy at neighbor level

5. General policy at group level

6. General policy at instance level

7. Default policy

4.5 eBGP multihop

External BGP (eBGP) multihop can be used to form adjacencies when eBGP neighbors are not directly
connected to each other; for example, when a non-BGP router is between the eBGP neighbors.

BGP TCP/IP packets sent toward an eBGP neighbor by default have a TTL value of 1. If the BGP TCP/IP
packets need to pass through more than one router to reach their destination, the TTL decrements to 0,
and the packets are dropped.

To prevent this, you can enable multihop for the eBGP neighbor and specify the maximum number of hops
for BGP TCP/IP packets sent to the neighbor. This allows the eBGP neighbor to be indirectly connected by
up to the specified number of hops.

When multihop is not enabled, the IP TTL for eBGP sessions is set to 1, and the IP TTL for iBGP sessions
is set to 64. By enabling multihop and configuring the maximum number of hops to a neighbor, it allows an
eBGP session to have multiple hops, and an iBGP session to have a single hop, if required.

If multihop is enabled and the maximum-hops parameter is configured for a BGP peer group, the settings
are applied to the members of the group. If the multihop configuration for a neighbor is changed, the
session with the neighbor must be disconnected and re-established for the change to take effect.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

20

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

4.5.1 Configuring eBGP multihop

Procedure

To configure eBGP multihop, you enable it for the eBGP neighbor, and specify a value for the maximum-
hops parameter. Additionally, the next-hop to the neighbor must be configured so that the two systems can
establish a BGP session.

Example: Enable multihop for an eBGP neighbor

The maximum-hops parameter is set to 2, which increases the TTL for BGP TCP/IP packets sent
toward the eBGP neighbor, allowing the neighbor to be indirectly connected by up to 2 hops.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                neighbor 192.168.11.1 {
                    multihop {
                        admin-state enable
                        maximum-hops 2
                    }
                }
            }
        }
    }

Example: Configure a route to the next-hop toward the eBGP neighbor

--{ * candidate shared default }--[  ]--
# info network-instance default static-routes
    network-instance default {
        static-routes {
            route 192.168.11.0/24 {
                next-hop-group static-ipv4-grp
            }
        }
    }
--{ * candidate shared default }--[  ]--
# info network-instance default next-hop-groups group static-ipv4-grp
    network-instance default {
        next-hop-groups {
            group static-ipv4-grp {
                nexthop 1 {
                    ip-address 192.168.22.22
                }
            }
        }
    }

4.6 AS path options

You can set the following options for handling the AS_PATH in received BGP routes:

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

21

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

• Allow own AS – configures the router to process received routes when its own ASN appears in the

AS_PATH.

• Replace peer AS – configures the router to replace the ASN of the peer router in the AS_PATH with its

own ASN.

• Remove private AS path numbers – configures the router to either delete private AS numbers,

shortening the AS path length, or replace private AS numbers with the local AS number used toward the
peer, maintaining the AS path length.

4.6.1 Configuring allow-own-as

Procedure

You can use the allow-own-as option to configure the router to process received routes when its own ASN
appears in the AS_PATH. Normally, when the ASN of a router appears in the AS_PATH of received routes,
it is considered a loop, and the routes are discarded. Specifically, it configures the maximum number of
times the global ASN of the router can appear in any received AS_PATH before it is considered a loop and
considered invalid. Default is 0.

Example

The following example configures the router to process received routes where its own ASN appears
in the AS_PATH a maximum of 1 time:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                autonomous-system 65001
                as-path-options {
                    allow-own-as 1
                }
            }
        }
    }

4.6.2 Configuring replace-peer-as

Procedure

You can configure the router to replace the peer ASN in AS_PATH with its own ASN. Normally, two sites
having the same ASN would not be able to reach each other directly because the receiving router would
see its own ASN in the AS_PATH and consider it a loop. You can overcome this by configuring the router to
replace the peer ASN in the AS_PATH with its own ASN. When the replace-peer-as option is set to true,
the router replaces every occurrence of the peer AS number that is present in the advertised AS_PATH
with the local ASN used toward the peer.

Example

The following example configures the router to replace the ASN of the peer with its own ASN:

--{ * candidate shared default }--[  ]--
# info network-instance default

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

22

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

    network-instance default {
        protocols {
            bgp {
                as-path-options {
                    replace-peer-as true
                    }
                }
            }
        }
    }

4.6.3 Configuring remove-private-as

Procedure

You can configure how the router handles private AS numbers: either delete them, shortening the AS path
length, or replace private AS numbers with the local ASN used toward the peer, which maintains the AS
path length.

You can configure the router to delete or replace private AS numbers that appear before the first
occurrence of a non-private ASN in the sequence of most recent ASNs in the AS path. You can also
configure the router to ignore private AS numbers when they are the same as the peer ASN.

Example: Configure the router to delete private AS numbers

The following example configures the router to delete private AS numbers (2-byte and 4-byte) from
the advertised AS path toward all peers. This shortens the AS path.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                as-path-options {
                    remove-private-as {
                        mode delete
                    }
                }
            }
        }
    }

Example

The following example configures the router to replace private AS numbers with the local ASN used
toward the peer. This keeps the AS path the same length.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                as-path-options {
                    remove-private-as {
                        mode replace
                    }
                }
            }
        }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

23

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

    }

Example

The following example configures the router to replace only private AS numbers that appear before
the first occurrence of a non-private ASN in the sequence of most recent ASNs in the AS path.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                as-path-options {
                    remove-private-as {
                        mode replace
                        leading-only true
                    }
                }
            }
        }
    }

Example

The following example configures the router to ignore private AS numbers (not replace them) when
they are the same as the peer AS number.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                as-path-options {
                    remove-private-as {
                        mode replace
                        ignore-peer-as true
                    }
                }
            }
        }
    }

4.7 BGP MED

The Multi-Exit Discriminator (MED) attribute is an optional attribute that can be added to routes advertised
to an eBGP peer to influence the flow of inbound traffic to the AS. The MED attribute carries a 32-bit metric
value. A lower metric is better than a higher metric when MED is compared by the BGP decision process.

By default, the MED attribute is compared only if the routes come from the same neighbor AS. You can
optionally configure SR Linux to compare the MED value from different ASs when selecting the best route.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

24

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

4.7.1 Configuring always-compare-med

Procedure

To configure SR Linux to use MED values from different ASs in the BGP decision process (tie-break
between routes for the same NLRI), set the always-compare-med option to true. By default, this option
is set to false, which uses MED values in the BGP decision process only for routes from the same
neighbor AS.

Example

The following example sets the always-compare-med option to true:

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp best-path-selection
    network-instance default {
        protocols {
            bgp {
                best-path-selection {
                    always-compare-med true
                }
            }
        }
    }

4.8 Route reflection

In a standard iBGP configuration, all BGP speakers within an AS must have full BGP mesh to ensure that
all externally learned routes are redistributed through the entire AS.

Configuring route reflection provides an alternative to the full BGP mesh requirement: instead of peering
with all other iBGP routers in the network, each iBGP router only peers with a router configured as a route
reflector.

An AS can be divided into multiple clusters, with each cluster containing at least one route reflector, which
redistributes routes to the clients in the cluster. The clients within the cluster do not need to maintain a full
peering mesh between each other. They only require a peering to the route reflectors in their cluster. The
route reflectors must maintain a full peering mesh between all non-clients within the AS.

4.8.1 Configuring route reflection

Procedure

To configure a route reflector, you assign it a cluster ID and specify which neighbors are clients and which
are non-clients. Clients receive reflected routes, and non-clients are treated as a standard iBGP peer.

Example

The following example configures the router to be a route reflector for two clients SRL-1 and SRL-2.
The router is assigned cluster ID 0.0.0.1.

--{ * candidate shared default }--[  ]--
# info network-instance default

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

25

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

    network-instance default {
        protocols {
            bgp {
                route-reflector {
                    cluster-id 0.0.0.1
                    }
                }
                neighbor SRL-1 {
                    route-reflector {
                        cluster-id 0.0.0.1
                        client true
                    }
                neighbor SRL-2 {
                    route-reflector {
                        cluster-id 0.0.0.1
                        client true
                    }
                }
            }
        }
    }

4.9 BGP add-path

Normally if the SR Linux device receives an advertisement of an NLRI and path from a specific peer, and
that peer subsequently advertises the same NLRI with different path information (a different next-hop and,
or different path attributes), the new path effectively overwrites the existing path.

If BGP add-path has been negotiated with the peer, there is a different behavior: the newly advertised path
is stored in the RIB-IN along with all of the paths previously advertised (and not withdrawn) by the peer.

For router A to receive multiple paths per NLRI from peer B for a particular address family, the BGP
capabilities advertisement during session setup must indicate that peer B needs to send multiple paths for
the address family, and router A is willing to receive multiple paths for the address family.

When the add-path receive capability for an address family has been negotiated with a peer, all
advertisements and withdrawals of NLRI within that address family by that peer includes a path identifier.

•

•

•

If the combination of NLRI and path identifier in an advertisement from a peer is unique (does not match
an existing route in the RIB-IN from that peer), the route is added to the RIB-IN.

If the combination of NLRI and path identifier in a received advertisement is the same as an existing
route in the RIB-IN from the peer, the new route replaces the existing one.

If the combination of NLRI and path identifier in a received withdrawal matches an existing route in the
RIB-IN from the peer, that route is removed from the RIB-IN.

BGP add-path is supported by BGP running in the default network-instance and BGP running in any IP-
VRF network-instance.

BGP add-path is configurable per address family at the network-instance, group, and neighbor levels.
Inheritance of add-path configuration from network-instance to group to neighbor is per address family. The
following address families are supported:

•

•

IPv4 unicast

IPv6 unicast

• Layer 3 VPN IPv4 unicast

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

26

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

• Layer 3 VPN IPv6 unicast

•

•

IPv4 labeled unicast

IPv6 labeled unicast

• EVPN

• Route target

4.9.1 Configuring BGP add-path

Procedure

SR Linux supports the following add-path options:

•

receive – Negotiate with a peer to receive multiple path advertisements from a single peer for a single
NLRI belonging to the address family.

• send – Negotiate with a peer to send multiple path advertisements to a single peer for a single NLRI

belonging to the address family.

• send-max – Send the best paths for a single NLRI, up to a configured maximum, or as many as

possible until there are no more valid paths to send.

• send-multipath – Send the used paths for a single NLRI, including all paths that are multipaths.

• eligible-prefix-policy – Control add-path send behavior using a routing policy. This option is not

supported at the group or neighbor levels.

Example: Enable BGP add-path send for an address family

The following example enables the SR Linux device to negotiate with a BGP peer to send multiple
path advertisements for a single NLRI belonging to an address family:

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp neighbor 1.1.1.1
    network-instance default {
        protocols {
            bgp {
                neighbor 1.1.1.1 {
                    afi-safi ipv4-unicast {
                        add-paths {
                            send true
                        }
                    }
                }
            }
        }
    }

Example: Send up to a maximum number of paths

The following example enables the SR Linux device to send up to 10 advertisements for a single
NLRI belonging to the IPv4 unicast address family:

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp afi-safi ipv4-unicast
    network-instance default {
        protocols {
            bgp {

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

27

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

                afi-safi ipv4-unicast {
                    add-paths {
                        send-max 10
                    }
                }
            }
        }
    }

Example: Use a routing policy to control BGP add-path behavior

The following example configures a routing policy that matches prefixes in a prefix-set with a policy-
result action of accept. The routing policy is specified in the add-paths configuration to control the
BGP add-path send behavior for matching prefixes.

--{ * candidate shared default }--[  ]--
# info routing-policy
    routing-policy {
        prefix-set pset1 {
            prefix 10.3.192.0/21 mask-length-range 21..24 {
            }
            prefix 10.3.191.0/21 mask-length-range exact {
            }
        }
        policy ap1 {
            statement st1 {
                match {
                    prefix-set pset1
                }
                action {
                    policy-result accept
                }
            }
        }
    }

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp afi-safi ipv4-unicast
    network-instance default {
        protocols {
            bgp {
                afi-safi ipv4-unicast {
                    add-paths {
                        eligible-prefix-policy ap1
                    }
                }
            }
        }
    }

The routing policy referenced by eligible-prefix-policy can have the following match conditions:

• prefix-set

•

•

family

community set

The action in the routing policy can be accept or reject. Route property modification actions in the
routing policy are ignored.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

28

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

Note:

•

•

•

•

If no routing policy is configured to control add-path send behavior, it is advertised for all
prefixes for the specified address family.

If a routing policy is configured, but there is no match, add-path capability is advertised
for the prefix according to the afi-safi configuration.

If the routing policy is matched, and the action is accept, add-path capability is
advertised for the prefix according to the afi-safi configuration.

If the routing policy is matched, and the action is reject, add-path capability is not
advertised for the prefix.

4.10 BGP graceful restart

BGP graceful restart allows a router whose control plane has temporarily stopped functioning because of a
system failure or a software upgrade to return to service with minimal disruption to the network.

To do this, the router relies on neighbor routers, which have also been configured for graceful restart, to
maintain forwarding state while the router restarts. These neighbor routers are known as helper routers.
The helper routers and the restarting router continue forwarding traffic using the previously learned routing
information from the restarting router. Other routers in the network are not notified about the restarting
router, so network traffic is not disrupted.

When graceful restart is enabled on the SR Linux and its neighbor, the two routers exchange information
about graceful restart capability, including the Address Family Identifier (AFI) and Subsequent Address
Family Identifier (SAFI) of the routes supported for graceful restart.

While the router restarts, the helper router marks the routes from the restarting router as stale, but
continues to use them for traffic forwarding. When the BGP session is reestablished, the restarting router
indicates to the helper router that it has restarted. The helper router then sends the restarting router any
BGP RIB updates, followed by an End-of-RIB (EOR) marker indicating that the updates are complete. The
restarting router then makes its own updates and sends them to the helper router, followed by an EOR
marker.

Graceful restart is used in conjunction with the In-Service Software Upgrade (ISSU) feature, which can be
used to upgrade 7220 IXR-D2 and D3 systems while maintaining non-stop forwarding. During the ISSU, a
warm reboot brings down the control and management planes while the NOS reboots, and graceful restart
maintains the forwarding state in peers. You can use a tools command to validate that the SR Linux and its
peers support warm reboot, including graceful restart configuration. See the SR Linux Software Installation
Guide for more information.

4.10.1 Configuring graceful restart

Procedure

You can configure graceful restart for the BGP instance. The SR Linux operates as a helper router for
neighbor routers when they are restarting, assuming graceful restart is also enabled on the neighbors.
Enabling graceful restart also indicates to the neighbors that they can serve as helper routers when the SR
Linux itself is restarting.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

29

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

Example

When operating as a helper router, the SR Linux marks the routes from the restarting router as stale,
but continues to use them for forwarding for a period of time while the neighbor router restarts. After
this period expires, the SR Linux deletes the routes. The stale-routes-time parameter configures the
amount of time in seconds the routes remain stale before they are deleted.

The requested-restart-time parameter configures the amount of time in seconds to wait for a
graceful restart-capable neighbor to re-establish a TCP connection. After this period expires, the
helper router deletes the stale routes it preserved on behalf of its neighbor routers.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                graceful-restart {
                    admin-state enable
                    stale-routes-time 300
                    requested-restart-time 300
                }
            }
        }
    }

Following a restart, by default the system waits 600 seconds (10 minutes) to receive EOR markers
from all helper routers for all address families that were up before the restart. After this time elapses,
the system assumes convergence has occurred and sends its own EOR markers to its peers. You
can configure the amount of time the system waits to receive EOR markers to be from 0 to 3,600
seconds.

For example, the following configures the amount of time the system waits to receive EOR markers to
270 seconds.

--{ * candidate shared default }--[  ]--
# info system warm-reboot
    system {
        warm-reboot {
            bgp-max-wait 270
        }
    }

4.11 BGP unnumbered peering

In a typical large-scale data center using BGP, leaf and spine switches are interconnected in a Clos
topology, and each device establishes a single-hop eBGP session with each of its physically connected
peers. The sessions come up as eBGP because of the ASN allocation scheme; it is common practice to
assign a unique ASN to every leaf switch (TOR) in a cluster and a different unique ASN to the set of spine
switches to which those TORs are connected. The allocated ASNs are typically private ASNs in the range
4200000000 to 4294967294, although this is not always the case.

For this type of configuration, BGP unnumbered peering can be a useful solution. BGP unnumbered
peering is the dynamic setup of one or more single-hop BGP sessions over a network segment that has
no globally-unique IPv4 or IPv6 addresses. Each router connected to the network segment is assumed to

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

30

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

have an IPv6-enabled interface to the network, and these interfaces have IPv6 link-local addresses that
are typically auto-generated by each router from the interface MAC addresses.

How sessions are established using BGP unnumbered peering

The set of BGP speakers configured for BGP unnumbered peering on a network segment discover each
other by sending and receiving ICMPv6 router advertisement (RA) messages.

Consider an example of Router A and Router B, which are both connected to an unnumbered interface
and configured for BGP unnumbered dynamic session setup. The BGP session between the two routers is
established in the following sequence:

1. Router B sends an ICMPv6 RA message on its interface b1.

Assuming the RA message is unsolicited, the source IP address of this message is the link-local
address of interface b1 (fe80::7efe:90ff:fefc:7ad8), and the destination IP address is the all-nodes
multicast address.

2. Asynchronously, Router A sends an ICMPv6 RA message on its interface a1.

The source IP address is the link-local address of interface a1 (fe80::7efe:90ff:fefc:7bd8), and the
destination IP address is the all-nodes multicast address.

3. Router A receives the RA message on interface a1, and the software process responsible for ICMPv6

relays the information to BGP, because in the BGP configuration, a1 is a subinterface that is configured
as a dynamic neighbor interface; that is, added to the BGP dynamic-neighbors interface list.

4. BGP checks if it already has a BGP session with fe80::7efe:90ff:fefc:7ad8.

•

•

If BGP already has this session and it is up, or BGP is in the process of establishing this session,
then do nothing. Possibly, Router B started the same process moments before Router A.

If BGP does not have a session with this link-local address, then a new TCP connection is initiated
toward fe80::7efe:90ff:fefc:7ad8.

5. When the TCP connection is established, the BGP OPEN message sent by Router A encodes a local-
AS and other capabilities that come from the configuration of the peer-group associated with interface
a1.

6. Router A receives a BGP OPEN message from Router B and accepts that OPEN message, proceeding
to move toward the BGP established state, if the OPEN message encodes an acceptable peer AS
number (in one of the allowed-peer-as ranges configured for interface a1). The address families
supported by the session are based on the usual MP-BGP negotiation.

BGP dynamic-neighbors interface list

To enable dynamic peering, you add subinterfaces to the BGP dynamic-neighbors interface list in the SR
Linux configuration.

When a subinterface is added to the dynamic-neighbors interface list:

• BGP automatically accepts incoming BGP connections to the IPv6 link-local address of that

subinterface, subject to the configured max-sessions limit for the subinterface.
For the connection to be accepted, the source address must be an IPv6 link-local address (that may or
may not also be a defined neighbor address), and the reported ASN of the peer must match relevant
configuration. If the source address does not match a configured neighbor address, the session is set
up according to the peer-group associated with the subinterface, not the peer-group associated with
the dynamic-neighbors accept match-prefix entry matching the source IPv6 link-local address if a
matching entry exists.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

31

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

• BGP registers for IPv6 RA messages on the subinterface. Whenever the source of one of these RA

messages matches an IPv6 link-local address for which there is currently no established BGP session,
the system attempts to create a BGP session to that address, as long as this does not exceed the
configured max-sessions limit for the subinterface. The session is set up according to the configured
peer-group associated with the subinterface.

When a BGP session is established over a subinterface in the dynamic-neighbors interface list:

• Changes to the allowed-peer-as ranges associated with the subinterface only take effect from the

next time BGP attempts to establish the sessions.

• Non-arrival of expected ICMPv6 RA messages on the subinterface do not trigger teardown of

associated sessions.

• Existing triggers for tearing down a session apply as normal (for example, hold-timer expiration, BFD

timeout, clear bgp neighbor commands, and so on).

•

If the link-local address of a dynamic peer is configured as a static neighbor address, the dynamic
session is immediately torn down and replaced by the static session.

When a subinterface is deleted from the dynamic-neighbors interface list, all dynamic sessions associated
with that subinterface (excluding sessions set up by static configuration of the neighbor) are torn down
immediately.

A BGP session that was previously established on an unnumbered interface and subsequently torn down
can only be re-established if the subinterface is configured in the dynamic-neighbors interface list and a
recent ICMPv6 RA message is received.

Configuration overrides for dynamic peers on unnumbered interfaces

When a dynamic BGP session is initiated or accepted on an interface that is tied to a peer-group, most of
the parameters relevant to that session come from the configuration of that peer-group, with the following
exceptions:

• multihop maximum-hops is always 1 (for both eBGP and iBGP peers).

• transport local-address is always the link-local address of the specified interface.

• next-hop-self is always true. The neighbor is not presumed to have reachability to off-link

destinations.

• transport passive-mode is always false. BGP always initiates a connection when informed by

ICMPv6, unless it already has a connection.

• afi-safi ipv4-unicast ipv4-unicast receive-ipv6-next-hops is always true.

• afi-safi ipv4-unicast ipv4-unicast advertise-ipv6-next-hops and evpn

advertise-ipv6-next-hops are always true.

Peer AS Validation for dynamic peers on unnumbered interfaces

When a BGP OPEN message is received from an unnumbered dynamic neighbor, the reported AS number
of the peer is checked to determine if it is acceptable to allow the peering to proceed.

For a dynamic session associated with a subinterface, the peer AS is acceptable only if it matches one of
the allowed-peer-as elements of the dynamic-neighbors interface list entry for the subinterface, or if the
peer AS is equal to the local AS (implying an iBGP session).

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

32

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

4.11.1 Configuring BGP unnumbered peering

Procedure

To configure BGP unnumbered peering, you add subinterfaces to the BGP dynamic-neighbors interface
list, and specify the peer autonomous system numbers from which incoming TCP connections to the BGP
well-known port are accepted.

Example

The following example adds a subinterface to the BGP dynamic-neighbors interface list.

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp dynamic-neighbors interface ethernet-1/1.1
    network-instance default {
        protocols {
            bgp {
                dynamic-neighbors {
                    interface ethernet-1/1.1 {
                        peer-group bgp_peer_group_0
                        allowed-peer-as [
                            4294967200
                        ]
                    }
                }
            }
        }
    }

In this example, subinterface ethernet-1/1.1 is added to the BGP dynamic-neighbors interface
list. This subinterface must be enabled for IPv6 and configured to accept and send IPv6 RA
messages. It does not require any IPv4 addresses or global-unicast IPv6 addresses.

Incoming TCP connections to port 179 received on this subinterface that are sourced from an IPv6
link-local address and destined for the IPv6 link local address of this subinterface are automatically
accepted. IPv6 RA messages received on this subinterface automatically trigger BGP session setup
toward the sender of these messages, if there is not already an established BGP session.

Peer group bgp_peer_group_0 is associated with dynamic BGP neighbors on this subinterface.
Parameters configured for this peer-group are used for establishing the dynamic BGP session, with
the exceptions described in Configuration overrides for dynamic peers on unnumbered interfaces.

ASN 4294967200 is configured as an allowed peer AS for dynamic BGP neighbors on this
subinterface. If the BGP OPEN message from a peer on this subinterface contains a MyAS number
that is not an allowed peer AS, then a NOTIFICATION is sent to the peer with the indication Bad Peer
AS.

4.12 Prefix-limit for BGP peers

SR Linux places a limit on the number of IPv4, IPv6, or EVPN route prefixes that can be received from a
peer or from individual members of a peer group. When this prefix-limit is exceeded, SR Linux tears down
the BGP session with the peer, then re-establishes the session.

You can configure the following settings for the prefix-limit:

• max-received-routes

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

33

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

By default, the prefix-limit that triggers a BGP session teardown is 4294967295 routes, which is the
maximum number of routes that can be received from the peer (counting routes accepted and rejected
by import policy). You can configure a different prefix-limit by setting a value for max-received-
routes.

• prefix-limit-restart-timer

By default, after a BGP session is torn down because the prefix limit was exceeded, the BGP session
is re-established immediately. You can configure the number of seconds the system waits before re-
establishing the session by setting a value for prefix-limit-restart-timer.

• prevent-teardown

You can prevent the BGP session from being torn down when the prefix-limit is exceeded by setting
prevent-teardown to true.

• warning-threshold-pct

You can set a warning threshold for the prefix-limit. When the number of routes received from the peer
(counting routes accepted and rejected by import policy) reaches a specified percentage of the max-
received-routes setting, BGP raises a warning log event. The default threshold is 90%.

When upgrading from a release earlier than 23.3.1 to Release 23.3.1 or later, the upgrade script checks
the configured max-received-routes setting for IPv4 and IPv6 routes. If the configured max-
received-routes setting is equal to 4295967295 for IPv4 or IPv6 routes, then prevent-teardown for
IPv4 or IPv6 routes is set to true.

4.12.1 Configuring the prefix-limit for BGP peers

Procedure

To configure the prefix-limit, you can set the maximum number of routes from a peer, number of seconds
the system waits to re-establish a session following a teardown, and disable the prefix-limit for a peer.

The commands to set maximum number of routes from a peer and disable the prefix-limit can be applied
to IPv4 and IPv6 routes. The settings can be applied to a specific peer or to a peer group. If there is no
setting for a specific peer, the setting for the peer group applies. If there is no setting for the peer and peer
group, the system default applies.

Example: Configure maximum number of routes from a peer

The following example configures the maximum number of IPv4 routes that can be received from a
peer.

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp neighbor 192.168.11.1 afi-safi ipv4-unicast
 ipv4-unicast 
    network-instance default {
        protocols {
            bgp {
                neighbor 192.168.11.1 {
                    afi-safi ipv4-unicast {
                        ipv4-unicast {
                            prefix-limit {
                                max-received-routes 30000000
                            }
                        }
                    }
                }
            }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

34

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

        }
    }

If max-received-routes is not configured for the peer, the max-received-routes setting for
the peer group applies. If max-received-routes is not configured for the peer group, the system
default maximum of 4294967295 routes applies.

Example: Configure prefix-limit restart timer

The following example sets the number of seconds the system waits to re-establish a BGP session
with a peer after the session was torn down because the max-received-routes value was
exceeded.

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp neighbor 192.168.11.1 timers
    network-instance default {
        protocols {
            bgp {
                neighbor 192.168.11.1 {
                    timers {
                        prefix-limit-restart-timer 60
                    }
                }
            }
        }
    }

If the prefix-limit-restart-timer is not configured for the peer, the prefix-limit-
restart-timer setting for the peer group applies. If the prefix-limit-restart-timer is
not configured for the peer group, the BGP session with the peer is re-established immediately after
teardown (that is, prefix-limit-restart-timer = 0 seconds).

Example: Disable the prefix-limit

The following example disables the prefix-limit for IPv4 routes received from a peer, so that the BGP
session is not torn down if the maximum number of IPv4 routes received from the peer is exceeded.

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp neighbor 192.168.11.1 afi-safi ipv4-unicast
 ipv4-unicast   
    network-instance default {
        protocols {
            bgp {
                neighbor 192.168.11.1 {
                    afi-safi ipv4-unicast {
                        ipv4-unicast {
                            prefix-limit {
                                prevent-teardown true
                            }
                        }
                    }
                }
            }
        }
    }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

35

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

4.13 RT constrained route advertisement

RT constrained route advertisement (RT-constrain) is a mechanism that allows a BGP router to advertise
route target (RT) membership information to its BGP peers to indicate interest in receiving only BGP routes
tagged with specific RT extended communities. Upon receiving this information, BGP peers restrict the
advertised BGP routes to only those requested routes, which can minimize control-plane load for protocol
traffic and RIB memory.

The RT membership information is carried in a special type of MP-BGP route called an RTC route; the
associated AFI is 1 and the SAFI is 132. For two routers to exchange RT membership NLRI, they must
advertise the corresponding AFI/SAFI to each other during capability negotiation. The use of MP-BGP
means RT membership NLRI is propagated, loop-free, within an AS and between ASes using well-known
BGP route selection and advertisement rules.

Note:
Extended community-based ORF can also be used for RT-based route filtering, but RT-constrain
has distinct advantages over extended community-based ORF: RT-constrain is more widely
supported, simpler to configure, and its distribution scope is not limited to a direct peer.

4.13.1 RT-constrain on SR Linux for various router types

This section describes how RT-constrain operates on SR Linux for PE, route reflector, and ASBR routers.

PE routers

A PE router originates RT membership NLRI to its peers (often route reflectors) to prevent these peers
from sending unnecessary VPN routes to the PE. Usually a PE originates one RTC route for each import
route-target associated with a local VPRN service or IP-VRF network-instance. An RT is an extended
community with type subcode value 0x02 and type code value 0x00, 0x01, or 0x02.

RTC routes originated by a PE are by default automatically advertised to all RTC peers, without the need
for an export policy to accept them. Each RTC route has a prefix (carried in the MP_REACH_NLRI and
MP_UNREACH_NLRI attributes) and path attributes (for example, ORIGIN, AS_PATH).

The prefix length (in bits) of an RTC route can be 0 (for the default RTC route), 32, or a number in the
range 48 to 96. The prefix value is the concatenation of the origin AS (a 4-byte value representing the 2- or
4-octet AS of the originating router, as configured under network-instance.protocols.bgp.autonomous-
system) and 0 or 16-64 bits of an RT extended community.

This NLRI format allows RTs originated by the same AS and having the same N most significant bits to be
advertised in a single RTC route with prefix length 32+N (N >= 16) but SR Linux implementation does not
make use of this flexibility when originating RTC routes; only the default RTC route with a prefix length of 0,
or fully-specified RTC routes with a prefix length of 96, are advertised to RTC peers.

Route reflectors

A route reflector (RR) propagates RTC routes according to a special set of rules outlined below. An RR
typically advertises the default RTC route to each of its clients so that it receives all VPN routes belonging
to the cluster. This is achieved by enabling (setting to true) afi-safi.route-target.send-default-route in
the group or neighbor configuration context. The default RTC route is a special type of RTC route encoded
in one of the following ways:

• prefix-length = 0 (SR Linux routers always generate default RTC routes with this encoding)

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

36

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

• prefix-length = 32, encoding only the origin AS value

• prefix-length = 48, encoding the origin AS value, plus 16 bits of an RT type

Sending the default RTC route to a peer conveys a request to receive all VPN routes (regardless of RT
extended community) from that peer. The advertisement of the default RTC route to a peer does not
suppress other more-specific RTC routes from being sent to that peer.

ASBRs

An ASBR (for example, a model-B ASBR or model-C route reflector) propagates route target membership
NLRI to eBGP peers in other autonomous systems to limit received routes to only those needed
for services in the local AS and those to be propagated through the local AS. When the RTC route
propagation path includes multiple ASNs, SR Linux routers choose only the single best path for reverse
advertisement of VPN routes; advertisement of VPN routes using RTC multipaths is not supported.

4.13.2 Best-path selection and RTC route re-advertisement

If multiple RTC routes are received for the same prefix, then standard BGP best-path selection procedures
determine the best of these routes. BGP does not check for reachability of the BGP next-hop of RTC
routes, so this does not factor into best-path selection.

The best RTC route per prefix is re-advertised to RTC peers based on the following rules:

• The best path for a default RTC route (prefix-length 0, origin AS only with prefix-length 32 or origin AS

plus 16 bits of an RT type with prefix-length 48) is never propagated to another peer.

• A PE with only IBGP RTC peers that is neither a route reflector or an ASBR does not re-advertise the

best RTC route to any RTC peer due to standard IBGP split horizon rules.

• A route reflector that receives its best RTC route for a prefix from a client peer re-advertises that

route (subject to export policies) to all of its client and non-client IBGP peers (including the originator),
per standard RR operation. When the route is re-advertised to client peers the RR should (i) set the
ORIGINATOR_ID to its own router ID and (ii) modify the NEXT_HOP to be its local address for the
sessions (e.g. system IP).

• A route reflector that receives its best RTC route for a prefix from a non-client peer re-advertises that

route (subject to export policies) to all of its client peers, per standard RR operation. Normally no route
is advertised to non-client peers in this scenario, but if the RR has a non-best path for the prefix from
any of its clients it should advertise the best of the client-advertised paths to all non-client peers. No
ORIGINATOR_ID or NEXT_HOP manipulation is required in this case.

• An ASBR which is neither a PE nor a route reflector that receives its best RTC route for a prefix from
an IBGP peer re-advertises that route (subject to export policies) to its EBGP peers. It modifies the
NEXT_HOP and AS_PATH of the re-advertised route per standard BGP rules. No aggregation of RTC
routes is supported.

• An ASBR that is neither a PE nor a route reflector that receives its best RTC route for a prefix from an
EBGP peer re-advertises that route (subject to export policies) to its EBGP and IBGP peers. When
re-advertised routes are sent to EBGP peers the ABSR modifies the NEXT_HOP and AS_PATH per
standard BGP rules. No aggregation of RTC routes is supported.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

37

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

4.13.3 Using RTC routes to filter advertised routes

When RT-constrain is configured on a session that also supports VPN address families using route targets
(for example, VPN-IPv4, VPN-IPv6, MVPN, EVPN), advertisement of the VPN routes is affected as follows:

• When the session comes up, the advertisement of all VPN routes is delayed until the initial set of RTC
routes has been received from the peer (that is, all RTC routes in the peer’s RIB-OUT); this is the
waiting state. The waiting state ends when an End-of-RIB marker for AFI/SAFI=1/132 is received
from the peer, or a certain amount of time has elapsed since the session was established (this amount
of time is hard-coded to 60 seconds and applies when the peer does not support sending the End-of-
RIB marker). When the waiting state ends, VPN routes are sent to the peer based on received RTC
routes (see below), and the session transitions to the ready state.

• When the session is in the ready state, received RTC routes are acted upon immediately. SR Linux

does not expect and wait for a ROUTE REFRESH message from the peer.
If S1 is the set of routes previously advertised to the peer, and S2 is the set of routes to be advertised
based on the most recent received RTC routes, then:

•

•

•

•

– the set of routes in S1, but not in S2, are withdrawn immediately (subject to MRAI)

– the set of routes in S2, but not in S1, are advertised immediately (subject to MRAI)

If a default RTC route (best or non-best) is received from an eBGP or iBGP peer, the VPN routes
advertised to the peer is the set of VPN routes in the LOC-RIB that meet all of the following conditions:

– are eligible for advertisement to the eBGP or iBGP peer per BGP route advertisement rules

– have not been rejected by manually configured export policies

– have not been advertised to the peer

If an RTC route for a prefix (origin-AS = A1, RT = A2/n, n > 48), best or non-best, is received from an
iBGP peer in autonomous system A1, the VPN routes advertised to the iBGP peer is the set of VPN
routes in the LOC_RIB that meet all of the following conditions:

– are eligible for advertisement to the iBGP peer per BGP route advertisement rules

– have not been rejected by manually configured export policies

– carry at least one route target extended community with value A2 in the n most-significant bits

– have not been advertised to the peer

If the best RTC route for a prefix (origin-AS = A1, RT = A2/n, n > 48) is received from an iBGP peer in
autonomous system B, the VPN routes advertised to the iBGP peer is the set of VPN routes in the LOC-
RIB that meet all of the following conditions:

– are eligible for advertisement to the iBGP peer per BGP route advertisement rules

– have not been rejected by manually configured export policies

– carry at least one route target extended community with value A2 in the n most-significant bits

– have not been advertised to the peer

If the best RTC route for a prefix (origin-AS = A1, RT = A2/n, n > 48) is received from an EBGP peer,
the VPN routes advertised to the EBGP peer is the set of VPN routes in the LOC-RIB that meet all of
the following conditions:

– are eligible for advertisement to the EBGP peer per BGP route advertisement rules

– have not been rejected by manually configured export policies

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

38

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

– carry at least one RT extended community with value A2 in the n most-significant bits

– have not been advertised to the peer

4.13.4 BGP RIB YANG model for RTC Routes

The following table lists the information available in the SR Linux BGP RIB YANG model for RTC routes in
the RIB-IN and RIB-OUT contexts.

Table 1: RTC route information available in the SR Linux BGP RIB YANG model

bgp-rib.afi-safi.route-target.rib-in-
out.rib-in-pre.routes

Contains the full set of RTC routes received from all
peers.

bgp-rib.afi-safi.route-target.rib-in-
out.rib-in-post.routes

Contains the full set of RTC routes received from all
peers, after import policy modification.

bgp-rib.afi-safi.route-target.rib-in-
out.rib-out-post.routes

Contains the full set of RTC routes advertised to
each peer, after export policy modification.

4.14 BGP configuration management

Managing the BGP configuration on SR Linux can include the following tasks:

• Modifying an AS number

• Deleting a BGP neighbor

• Deleting a BGP peer group

• Resetting BGP peer connections

4.14.1 Modifying an ASN

Procedure

You can modify the ASN on the router, but the new ASN does not take effect until the BGP instance is
restarted, either by administratively disabling/enabling the BGP instance, or by rebooting the system with
the new configuration.

Example

--{ * candidate shared default }--[ network-instance default ]--
# protocols bgp autonomous-system 95002
# protocols bgp admin-state disable
# protocols bgp admin-state enable

All established BGP sessions are taken down when the BGP instance is disabled.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

39

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

4.14.2 Deleting a BGP neighbor

Procedure

Use the delete command to delete a BGP neighbor from the configuration.

Example

--{ * candidate shared default }--[ network-instance default ]--
# delete protocols bgp neighbor 192.168.11.1

4.14.3 Deleting a BGP peer group

Procedure

Use the delete command to delete the settings for a BGP peer group from the configuration.

Example

--{ * candidate shared default }--[ network-instance default ]--
# delete protocols bgp group headquarters1

4.14.4 Resetting BGP peer connections

Procedure

To refresh the connections between BGP neighbors, you can issue a hard or soft reset. A hard-reset tears
down the TCP connections and returns to IDLE state. A soft-reset sends route-refresh messages to each
peer. The hard or soft reset can be issued to a specific peer, to peers in a specific peer-group, or to peers
with a specific ASN.

Example: Issue a hard reset

The following command hard-resets the connections to the BGP neighbors in a peer group that have
a specified ASN. The hard reset applies both to configured peers and dynamic peers.

# tools network-instance default protocols bgp group headquarters1 reset-peer peer-as
 95002
/network-instance[name=default]/protocols/bgp/group[group-name=headquarters1]:
    Successfully executed the tools clear command.

Example: Issue a soft reset

The following command soft-resets the connection to BGP neighbors that have a specified ASN. The
soft reset applies both to configured peers and dynamic peers.

# tools network-instance default protocols bgp soft-clear peer-as 95002
/network-instance[name=default]/protocols/bgp:
    Successfully executed the tools clear command.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

40

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

4.15 BGP shortcuts

With BGP shortcuts, SR Linux can include LDP LSPs or segment routing (SR-ISIS) tunnels in the BGP
algorithm calculations. In this case, tunnels operate as logical interfaces directly connected to remote
nodes in the network. Because the BGP algorithm treats the tunnels in the same way as a physical
interface (being a potential output interface), the algorithm can select a destination node together with an
output tunnel to resolve the next-hop, using the tunnel as a shortcut through the network to the destination.

Note: BGP shortcuts can only be used for next-hop resolution of IPv4-unicast RIB-Ins with an
IPv4 next-hop address.

BGP next-hop resolution describes the procedures that BGP uses to resolve the next-hop address of each
BGP RIB-In that forms part of a BGP route. The following table defines BGP RIB-In and BGP route in the
context of BGP next-hop resolution.

Table 2: BGP RIB-IN and BGP route

BGP Term

Definition

BGP RIB-In

One of the following:

• a received IPv4-unicast BGP route with an IPv4 next-hop address

• a received IPv4-unicast BGP route with an IPv6 next-hop address (allowed as a

result of sending an extended-nh-encoding capability to the peer)

• a received IPv6-unicast BGP route with an IPv6 next-hop address

BGP route

A route submitted by BGP to the fib_mgr that resulted from the grouping of one or
more BGP RIB-Ins. (Multiple BGP RIB-Ins per route describes a multipath scenario.)

With BGP shortcuts enabled, next-hop resolution determines whether to use a local interface or a tunnel to
resolve the BGP next-hop.

Tunnel resolution mode

As part of the configuration for BGP shortcuts, you must define the tunnel-resolution mode (prefer/required/
disabled). This mode determines the order of preference and fallback of using tunnels in the tunnel table to
resolve the next-hop instead of using routes in the FIB, as described in the following sections.

Next-Hop Resolution of IPv4-Unicast RIB-Ins with IPv4 next-hop

The following table describes the next-hop resolution steps for IPv4-Unicast RIB-Ins with IPv4 next-hops,
depending on the specified tunnel resolution mode.

Table 3: Next-hop resolution for IPv4 Unicast RIB-Ins with IPv4 next-hop address

Tunnel
Resolution Mode

Next-hop resolution steps in BGP

prefer

1. Start with TTM lookup:

a. Find all the tunnels in TTM with an endpoint that matches the BGP next-hop

address and that have one of the types listed in the allow list.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

41

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

Tunnel
Resolution Mode

Next-hop resolution steps in BGP

b. If there is a single tunnel, select that tunnel. The RIB-IN is resolved; exit.

c.

If there are multiple tunnels, select the tunnel with the numerically lowest TTM
preference, and if a further tie-break is needed, select the tunnel with the
lowest TTM metric. The RIB-IN is resolved; exit.

2.

If there are no tunnels, fallback to FIB lookup:

a. Find the longest match active route in the FIB that matches the BGP next-hop
address. There are presently no restrictions on this route; it can be an IGP
route, a static blackhole route, a default route, or another BGP route.

b. If there is a longest match route and it eventually resolves to a blackhole next-

hop, interface or tunnel then the RIB-IN is resolved; exit.

c.

If there is no matching route the RIB-IN is unresolved.

require

Perform TTM lookup only, as described in 1 above.
If there is no matching tunnel, the RIB-IN is unresolved.

disabled

Perform FIB lookup only, as described in 2 above.

Next-Hop Resolution of IPv4-Unicast and IPv6-Unicast RIB-Ins with IPv6 next-hop

If the next-hop address for the IPv4-Unicast RIB-In is an IPv6 address, the next-hop is resolved by the
longest prefix match IPv6 route in the FIB. This is the only option because there are no IPv6 tunnels in the
TTM. The same logic applies to BGP RIB-Ins with IPv6-unicast NLRI address family as they can only have
an IPv6 next-hop address. The next-hop resolution logic is the same as the FIB lookup described in the
preceding table.

4.15.1 Configuring BGP shortcuts over segment routing

Procedure

Step 1.

In the default network instance, define the tunnel-resolution mode for the BGP protocol.

This setting determines the order of preference and the fallback when using tunnels in the tunnel
table instead of routes in the FIB. Available options are as follows:

•

require
requires tunnel table lookup only

• prefer

prefers tunnel table lookup over FIB lookup

• disabled (default)

performs FIB lookup only

Step 2. Set the allowed tunnel types for next-hop resolution.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

42

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

Example: Configure IPv4 BGP shortcuts

The following example shows the BGP next-hop resolution configuration to allow IPv4 SR-ISIS
tunnels, with the tunnel mode set to prefer.

--{ * candidate shared default }--[ ]--
# info network-instance default protocols bgp afi-safi ipv4-unicast ipv4-unicast next-hop-
resolution ipv4-next-hops tunnel-resolution
    network-instance default {
        protocols {
            bgp {
                afi-safi ipv4-unicast {
                    ipv4-unicast {
                        next-hop-resolution {
                            ipv4-next-hops {
                                tunnel-resolution {
                                    mode prefer
                                    allowed-tunnel-types [
                                        sr-isis
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    }

Example: Configure IPv6 BGP shortcuts

The following example shows the BGP next-hop resolution configuration to allow IPv6 SR-ISIS
tunnels, with the tunnel mode set to prefer.

--{ * candidate shared default }--[ ]--
# info network-instance default protocols bgp afi-safi ipv6-unicast ipv6-unicast next-hop-
resolution ipv6-next-hops tunnel-resolution
    network-instance default {
        protocols {
            bgp {
                afi-safi ipv6-unicast {
                    ipv6-unicast {
                        next-hop-resolution {
                            ipv6-next-hops {
                                tunnel-resolution {
                                    mode prefer
                                    allowed-tunnel-types [
                                        sr-isis
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

43

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

4.16 BGP TCP MSS

BGP uses TCP transport, and BGP messages are carried as TCP segments. SR Linux allows you to
control the Maximum Segment Size (MSS) for each TCP segment based on the Path MTU discovery
settings.

Path MTU discovery can be enabled or disabled per network instance in SR Linux. The default is enabled.

Within the BGP hierarchy, path MTU discovery can be enabled and disabled at different configuration
levels. The supported configuration paths are:

• network-instance.protocols.bgp.transport.mtu-discovery

• network-instance.protocols.bgp.group.transport.mtu-discovery

• network-instance.protocols.bgp.neighbor.transport.mtu-discovery

BGP path MTU discovery by default inherits the value from the network instance for all BGP sessions. It
can be overruled by the above config. When an ICMP fragmentation-needed message is received and
BGP path MTU discovery is disabled, the system reduces the MTU for the BGP session according to the
ICMP message, subject to the lower bound configured under the system-level min-path-mtu.

--{ * candidate shared default }--[ ]--
# info network-instance default 
    network-instance default {
        mtu {
            path-mtu-discovery true
        }
    } 

--{ * candidate shared default }--[ ]--
# info system mtu 
    system {
        mtu {
            min-path-mtu 552
        }
    }

4.16.1 Configuring BGP TCP MSS

Procedure

The maximum size of each TCP segment is controlled by configuring the TCP MSS (tcp-mss) value.

SR Linux supports configuring TCP MSS at BGP instance, peer group, and neighbor configuration levels.
The supported range for the tcp-mss value is 536-9446 bytes, and the default value is 1024 bytes.

The value of tcp-mss gets inherited down the configuration levels within the BGP hierarchy. If no tcp-
mss is configured for a BGP neighbor, the tcp-mss value is taken from the BGP peer group, if it is
configured there, or else is taken from the BGP instance. The default BGP instance tcp-mss value is
used if neither the BGP peer group or the neighbor has a configured tcp-mss.

If the configured or inherited tcp-mss value is higher than the BGP path MTU value, the tcp-mss value is
ignored, and the BGP path MTU value is used as the operational TCP MSS.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

44

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

Example: Configuring BGP instance tcp-mss

The following example configures the BGP instance tcp-mss value.

info from state network-instance default protocols bgp trans
port tcp-mss
    network-instance default {
        protocols {
            bgp {
                transport {
                    tcp-mss 1024
                }
            }
        }
    }

Example: Configuring BGP peer group tcp-mss

The following example configures the BGP peer group tcp-mss.

info from state network-instance default protocols bgp group trans
port tcp-mss
    network-instance default {
        protocols {
            bgp {
                group test {
                    transport {
                        tcp-mss 1024
                    }
                }
            }
        }
    }

Example: Configuring BGP neighbor tcp-mss

The following example configures the BGP neighbor tcp-mss .

info from state network-instance default protocols bgp  neighbor 1.1.1.1 transport tcp-mss

     network-instance default {
        protocols {
            bgp {
                neighbor 192.168.0.1 {
                    transport {
                        tcp-mss 1012
                    }
                }
            }
        }
    }

If the configured or inherited tcp-mss value is higher than the operational path MTU value, the tcp-
mss value is ignored and the path MTU value is used as the operational TCP MSS.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

45

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

4.17 Error handling for BGP update messages

BGP update messages are used to transfer routing information between BGP peers. Errors in some BGP
update messages are considered critical; for example, if the Network Layer Reachability Information (NLRI)
cannot be extracted and parsed from an update message, it is a critical error. Errors in other BGP update
messages are considered non-critical; for example, errors such as incorrect attribute flag settings, missing
mandatory path attributes, incorrect next-hop length or format, and so on, are non-critical errors.

In SR Linux, critical errors in BGP update messages trigger a session reset. Non-critical errors are handled
using the treat-as-withdraw or attribute-discard approaches to error handling. This error-handling behavior
for BGP update messages is not configurable in SR Linux.

4.18 BGP multipath

BGP multipath is the ability to install a BGP route into the FIB so that the ECMP algorithm load-balances
traffic across multiple BGP next-hops that come from different multipath-eligible RIB-INs for the same prefix
or NLRI address family.

In a network-instance, you can enable BGP multipath for an address family and specify the maximum
number of BGP ECMP next-hops for BGP routes that have an NLRI belonging to the address family.

4.18.1 Configuring BGP multipath

Procedure

To configure BGP multipath, set the allow-multiple-as parameter to true. When you do this, BGP is
allowed to build a multipath set using BGP routes with a different neighbor AS (the most recent AS in the
AS_PATH).

When allow-multiple-as is set to false (the default), BGP is only allowed to use non-best paths for
ECMP if they meet the multipath criteria, and they have the same neighbor AS as the best path.

The maximum-paths parameter configures the maximum number of BGP ECMP next-hops for BGP
routes with an NLRI belonging to the specified address family. Note the following:

Note:

• When a BGP prefix is covered by a resilient-hash-prefix entry, the maximum number
of BGP next-hops used for load balancing is controlled by the network-instance ip-
load-balancing resilient-hash-prefix <ip-prefix> max-paths value.

• When BGP is resolved by an unweighted, non-resilient-hash IGP route, the maximum number
of paths towards the BGP next-hop is controlled by the IGP configuration; for example, the IS-
IS max-ecmp-paths value.

• When BGP is resolved by a weighted, non-resilient-hash IGP route, the maximum number of
paths towards the BGP next-hop is controlled by the IGP configuration; for example, the IS-IS
max-ecmp-hash-buckets-per-next-hop-group value.

• When BGP is resolved by a static, non-resilient-hash route, the maximum number of paths

towards the BGP next-hop is controlled by the static NHG configuration.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

46

 
 
 
 
Routing Protocols Guide Release 24.7

BGP

Example: Enable BGP multipath

The following example enables BGP multipath and specifies the maximum number of BGP ECMP
next-hops for BGP routes with an NLRI belonging to the ipv4-unicast address family:

--{ * candidate shared default }--[  ]--
# info network-instance n1 protocols bgp afi-safi ipv4-unicast
    network-instance n1 {
        protocols {
            bgp {
                afi-safi ipv4-unicast {
                    multipath {
                        allow-multiple-as true
                        maximum-paths 10
                    }
                }
            }
        }
    }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

47

 
 
 
 
Routing Protocols Guide Release 24.7

Seamless MPLS with BGP labeled unicast (BGP-LU)

5 Seamless MPLS with BGP labeled unicast (BGP-LU)

Seamless Multi-Protocol Label Switching (MPLS) is a network architecture that extends MPLS networks
to integrate access and aggregation networks into a single MPLS domain, to solve the scaling problems
in flat MPLS-based deployments. Seamless MPLS transport partitions the core, aggregation, and
access networks into isolated IGP/LDP domains. Seamless MPLS does not define any new protocols or
technologies and is based on existing and well-known ones. Seamless MPLS provides end-to-end service-
independent transport, separating the service and transport plane. Therefore, it removes the need for
service-specific configurations in network transport nodes. Service provisioning is restricted only at the
points of the network where it is required.

Note: Service configuration is not yet supported with BGP-LU in the current release.

When BGP is used to distribute a route, it can also distribute an MPLS label that is mapped to that route.
The label mapping information is appended to the BGP update message that is used to distribute the route.
This is described in RFC 3107, Carrying Label Information in BGP-4.

AN routers in a regional area learn the reachability of AN routers in other regional areas through BGP
labeled routes redistributed by the local ABRs (RFC 3107).

The label stack contains three labels for packets sent in a VPN service between the access nodes:

• The ANs push a service label to the packets sent in the VPN service. The service label remains

unchanged end-to-end between ANs. The service label is popped by the remote AN and is the inner
label of the label stack.

Note: Service configuration is not yet supported with BGP-LU in the current release.

• The BGP label is the middle label of the label stack and should be regarded as a transport label. The

transport label stack is increased to two labels: BGP and LDP transport labels. The BGP label is pushed
by the iLER AN and is swapped at the BGP next hop, which can be one of the two local ABRs. Both
ABRs are configured with next-hop-self. The BGP label is also swapped by the remote ABR.

• The iLER AN pushes an LDP transport label to the packets sent to the remote AN to reach the BGP

next hop. At the local ABR, the LDP transport label is popped and a new LDP transport label is pushed
to reach the BGP next hop (remote ABR). The LDP transport label is swapped in every label switching
router (LSR) and popped by the ABR nearest to the remote AN. That ABR pops the LDP transport label,
swaps the BGP label, and pushes an LDP transport label to reach the remote eLER AN.

5.1 Seamless MPLS with BGP-LU configuration

The following diagram shows the example topology that is used in this chapter. In the regional areas and in
the core area IS-IS L2 capability is used.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

48

 
 
 
 
Routing Protocols Guide Release 24.7

Seamless MPLS with BGP labeled unicast (BGP-LU)

Figure 1: Seamless MPLS - IGP/LDP domains

To configure Seamless MPLS, see the following sections:

•

Initial configuration for Seamless MPLS

• BGP configuration for Seamless MPLS

• Configuring BGP on ANs toward ABRs

Note: Example configurations are not provided for all nodes in the domain. The provided
examples do illustrate the basic configuration required to enable Seamless MPLS, which can be
repurposed for other nodes as required.

5.2 Initial configuration for Seamless MPLS

The following sections describe the initial configurations required on all nodes to enable Seamless MPLS.

• Configuring interfaces

• Configuring IS-IS

• Configuring MPLS label blocks

• Configuring LDP

5.2.1 Configuring interfaces

Procedure

Configure the required routing interfaces and add them to the network-instance.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

49

 
 
 
 
Routing Protocols Guide Release 24.7

Seamless MPLS with BGP labeled unicast (BGP-LU)

Example: Configure interfaces (ABR-2)

The following example output shows the interface configuration on ABR-2.

# on ABR-2:
    interface ethernet-1/2 {
        description ABR2-AN1
        admin-state enable
        subinterface 1 {
            admin-state enable
            ipv4 {
                admin-state enable
                address 192.168.12.2/30 {
                }
            }
        }
    }
    interface ethernet-1/1 {
        description ABR2-P3
        admin-state enable
        subinterface 1 {
            admin-state enable
            ipv4 {
                admin-state enable
                address 192.168.23.1/30 {
                }
            }
        }
    }
    interface system0 {
        admin-state enable
        subinterface 0 {
            admin-state enable
            ipv4 {
                admin-state enable
                address 192.0.2.2/32 {
                }
            }
        }
    }

Example: Add interfaces to the network instance

# on ABR-2:
    network-instance default {
        interface ABR2-P3 {
            interface-ref {
                interface ethernet-1/1
                subinterface 1
            }
        }
        interface ABR2-AN1 {
            interface-ref {
                interface ethernet-1/2
                subinterface 1
            }
        }
        interface system0.0 {
        }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

50

 
 
 
 
Routing Protocols Guide Release 24.7

Seamless MPLS with BGP labeled unicast (BGP-LU)

5.2.2 Configuring IS-IS

Procedure

Configure IS-IS on each of the nodes.

The core area and regional areas run isolated IS-IS instances. ABRs run two IS-IS instances: instance 0
belongs to the core and instance 1 belongs to the access network.

Example: Configure IS-IS on the core instance

On the core instance, all ABRs and Ps require level 2 (L2) capability, as shown in the following
example.

# on ABR-2:
    network-instance default {
        protocols {
            isis {
                instance ISIS-0 {
                    admin-state enable
                    instance-id 0
                    level-capability L2
                    iid-tlv true
                    net [
                        49.0000.0000.0000.0002.00
                    ]
                    ipv4-unicast {
                        admin-state enable
                    }
                    interface ethernet-1/1.1 {
                        circuit-type point-to-point
                        ipv4-unicast {
                            admin-state enable
                        }
                        level 2 {
                        }
                    }
                    interface system0.0 {
                        admin-state enable
                        passive true
                        ipv4-unicast {
                            admin-state enable
                        }
                        level 2 {
                        }
                    }
                }

Example: Configure IS-IS on the access instance

On the access instance, all ABRs and ANs also require L2 capability, as shown in the following
example.

# on ABR-2:
    network-instance default {
        protocols {
            isis {
                instance ISIS-1 {
                    admin-state enable
                    instance-id 1
                    level-capability L2

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

51

 
 
 
 
Routing Protocols Guide Release 24.7

Seamless MPLS with BGP labeled unicast (BGP-LU)

                    iid-tlv true
                    net [
                        49.0001.0000.0000.0002.00
                    ]
                    interface ethernet-1/2.1 {
                        circuit-type point-to-point
                        ipv4-unicast {
                            admin-state enable
                        }
                        level 2 {
                        }
                    }
                    interface system0.0 {
                        admin-state enable
                        passive true 
                        ipv4-unicast {
                            admin-state enable
                        }
                        level 2 {
                        }
                    }
                }
            }
        }
    }

5.2.3 Configuring MPLS label blocks

Procedure

Configure label blocks for LDP and for BGP-LU labels.

Example: Configure label blocks for LDP and BGP-LU

--{ + candidate shared default }--[  ]--
# /info system mpls label-ranges
    system {
        mpls {
            label-ranges {
                dynamic D1 {
                    start-label 200
                    end-label 299
                }
                dynamic bgp-lu-block {
                    start-label 12001
                    end-label 13000
                }
            }
        }
    }

5.2.4 Configuring LDP

Procedure

Enable Link LDP on all router interfaces on all nodes.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

52

 
 
 
 
Routing Protocols Guide Release 24.7

Seamless MPLS with BGP labeled unicast (BGP-LU)

Example: Configure Link LDP (ABR-2)

# on ABR-2:
    network-instance default {
        protocols {
            ldp {
                admin-state enable
                dynamic-label-block D1
                discovery {
                    interfaces {
                        interface ethernet-1/1.1 {
                            ipv4 {
                                admin-state enable
                            }
                        }
                        interface ethernet-1/2.1 {
                            ipv4 {
                                admin-state enable
                            }
                        }
                    }
                }
            }
        }
    }

5.3 BGP configuration for Seamless MPLS

BGP is configured on all ABRs and all ANs. P-3 acts as a core Route Reflector (RR). To allow for
separation of core/access IGP domains, the ABRs become RRs inline and implement next-hop-self on
labeled IPv4 BGP prefixes. The following diagram shows the exchange of iBGP Labeled Unicast (LU)
routes.

Figure 2: Seamless MPLS – BGP-LU

The following sections describe the BGP configurations required on all nodes to enable Seamless MPLS.

• Configuring BGP on ABRs

• Configuring BGP on the core RR

• Configuring BGP on ANs toward ABRs

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

53

 
 
 
 
Routing Protocols Guide Release 24.7

Seamless MPLS with BGP labeled unicast (BGP-LU)

5.3.1 Configuring BGP on ABRs

Procedure

Configure two BGP groups on the ABRs: one group toward the core RR and another group toward the AN.
Enable advertise-inactive on the BGP group toward the core.

The /32 system IP addresses, learned in labeled BGP, are also learned in IS-IS. Because IS-IS has a lower
preference compared to iBGP, the IS-IS routes are installed in the routing table. BGP default behavior only
advertises those prefixes that were elected by RTM and used.

Note: While the BGP examples show ipv4-labeled-unicast configurations, ipv6-labeled-unicast
is also supported.

Example: Configure BGP core on ABRs

# on ABR-2:
    network-instance default 
        protocols {
            bgp {
                admin-state enable
                autonomous-system 64496
                router-id 192.0.2.2 
                best-path-selection {
                    advertise-inactive true
                }
                bgp-label {
                    labeled-unicast {
                        dynamic-label-block bgp-lu-block
                    }
                }
                afi-safi ipv4-labeled-unicast {
                    admin-state enable
                    ipv4-labeled-unicast {
                        next-hop-resolution {
                            ipv4-next-hops {
                                route-resolution {
                                    ignore-default-routes true
                                }
                                tunnel-resolution {
                                    allowed-tunnel-types [
                                        ldp
                                    ]
                                }
                            }
                        }
                    }
                }
                group AN {
                    admin-state enable
                    peer-as 64496
                    }
                group core {
                    admin-state enable
                    peer-as 64496
                    route-reflector {
                        cluster-id 10.2.2.2
                        client true
                    }
                }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

54

 
 
 
 
Routing Protocols Guide Release 24.7

Seamless MPLS with BGP labeled unicast (BGP-LU)

                neighbor 192.0.2.1 {
                    description AN1
                    next-hop-self true
                    peer-group AN
                    }
                neighbor 192.0.2.3 {
                    description coreRR_P3
                    next-hop-self true 
                    peer-group core
                }
            }

Note:

• To enable ECMP, set afi-safi [ipv4-labeled-unicast | ipv6-labeled-unicast] multipath
max-path-level-1 to a value greater than 1. The value of max-path-level-1 sets the
maximum number of ECMP forwarding paths, including the best path, for a BGP prefix.
The additional non-best-path labeled RIB-INs are added to the ECMP NHG.

• Under tunnel-resolution allowed-tunnel-types, you can specify sr-isis to enable the

use of SR-ISIS tunnels for next-hop resolution of BGP-LU traffic as an alternative to LDP,
if SR-ISIS is configured in your domain.

5.3.2 Configuring BGP on the core RR

Example: Configure BGP on the core RR

# on P-3:
    network-instance default 
        protocols {
            bgp {
                admin-state enable
                autonomous-system 64496
                router-id 192.0.2.3 
                best-path-selection {
                    advertise-inactive true
                }
                bgp-label {
                    labeled-unicast {
                        dynamic-label-block bgp-lu-block
                    }
                }
                afi-safi ipv4-labeled-unicast {
                    admin-state enable
                    ipv4-labeled-unicast {
                        next-hop-resolution {
                            ipv4-next-hops {
                                tunnel-resolution {
                                    allowed-tunnel-types [
                                        ldp
                                    ]
                                }
                            }
                        }
                    }
                }
                group core {
                    admin-state enable
                    peer-as 64496
                    afi-safi ipv4-labeled-unicast {

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

55

 
 
 
 
Routing Protocols Guide Release 24.7

Seamless MPLS with BGP labeled unicast (BGP-LU)

                        admin-state enable
                    }
                    route-reflector {
                        cluster-id 10.3.3.3
                    }
                }
                neighbor 192.0.2.2 {
                    description ABR-2
                    peer-group core
                    route-reflector {
                        cluster-id 10.3.3.3   
                        client true
                    }
                }
                neighbor 192.0.2.4 {
                    description ABR-4
                    peer-group core
                    route-reflector {
                        cluster-id 10.3.3.3 
                        client true
                    }
                }
            }

5.3.3 Configuring BGP on ANs toward ABRs

Example: Configure BGP on AN-1 toward ABR

Configuring afi-safi ipv4-labeled-unicast indicates that all advertised IPv4 prefixes are sent to the
remote BGP peer as an RFC 3107 formatted label. The next-hop-self command only applies to
labeled IPv4 prefixes.

# on AN-1:
    network-instance default 
        protocols {
            bgp {
                admin-state enable
                autonomous-system 64496
                router-id 192.0.2.1
                best-path-selection {
                    advertise-inactive true
                }
                bgp-label {
                    labeled-unicast {
                        dynamic-label-block bgp-lu-block
                    }
                }
                afi-safi ipv4-labeled-unicast {
                    admin-state enable
                    ipv4-labeled-unicast {
                        next-hop-resolution {
                            ipv4-next-hops {
                                route-resolution {
                                    ignore-default-routes true
                                }
                                tunnel-resolution {
                                    allowed-tunnel-types [
                                        ldp
                                    ]
                                }
                            }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

56

 
 
 
 
Routing Protocols Guide Release 24.7

Seamless MPLS with BGP labeled unicast (BGP-LU)

                        }
                    }
                }
                group ABRs {
                    admin-state enable
                    peer-as 64496
                    afi-safi ipv4-labeled-unicast {
                        admin-state enable
                    }
                }
                neighbor 192.0.2.2 {
                    description ABR2
                    peer-group ABRs
                }
            }

You can show the BGP sessions with the show network-instance default protocols bgp neighbor
command.

5.4 Export policy configuration for Seamless MPLS

A policy is required on the ANs to advertise the system IP address in labeled BGP toward the ABRs. The
same policy is required on the ABRs to advertise their system IP address in labeled BGP toward the core
and the AN.

5.4.1 Configuring export policies on ANs and ABRs

Example: Configure a policy on ANs and ABRs

# on AN-1 and ABR-2:
    routing-policy {
        prefix-set local-loopback {
            prefix 192.0.2.1/32 mask-length-range exact {
            }
        }
        policy export-system {
            statement 10 {
                match {
                    prefix-set local-loopback
                    protocol local
                }
                action {
                    policy-result accept
                }
            }
        }
    }

Example: Apply the policy on AN-1

You can apply the export policy to BGP in one of the following bgp contexts:

• protocols bgp

• protocols bgp neighbor

• protocols bgp group

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

57

 
 
 
 
Routing Protocols Guide Release 24.7

Seamless MPLS with BGP labeled unicast (BGP-LU)

Or to apply the policy to BGP-LU only, use one of the following contexts:

• protocols bgp afi-safi ipv4-labeled-unicast

• protocols bgp neighbor afi-safi ipv4-labeled-unicast

• protocols bgp group afi-safi ipv4-labeled-unicast

In this example, the export policy is applied to BGP-LU in the group ABRs on AN-1, as follows:

# on AN-1:
    network-instance default {
        protocols {
            bgp {
                group ABRs {
                    afi-safi ipv4-labeled-unicast {
                        export-policy export-system
                    }
                }
            }
        }
    }

Example: Apply the policy on ABR-2

The same export policy is applied in the group core on ABR-2, as follows:

# on ABR-2:
    network-instance default {
        protocols {
            bgp {
                group core {
                    afi-safi ipv4-labeled-unicast {
                        export-policy export-system
                    }
                }
            }
        }
    }

A similar export policy is required to export prefix 192.0.2.5 from AN-5 to ABR-4 and from ABR-4 to
the RR in the core network, P-3.

Use the show network-instance default route-table command to display the route table. The prefix
of the remote AN should be added to the routing table in AN-1.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

58

 
 
 
 
Routing Protocols Guide Release 24.7

Segment routing with BGP-LU prefix SID

6 Segment routing with BGP-LU prefix SID

Segment routing (SR) allows a router to source route a packet by prepending an SR header containing an
ordered list of SIDs. A SID can have a local impact to one particular node or it can have a global impact
within the SR domain. With SR-MPLS, each SID is an MPLS label and the complete SID list is a stack of
labels in the MPLS header.

Traditionally, the association of the SID with an IP prefix is propagated by an IGP routing protocol.
However, in some cases, the SID must be propagated beyond the IGP protocol boundaries. For these
cases, you can enable the prefix SID path attribute for BGP-LU to associate an SR-MPLS SID with an IP
prefix in a labeled unicast route.

The prefix SID attribute associates a prefix with the advertised SID, representing network-wide instructions
to forward packets along the BGP ECMP-aware best path back to the prefix. To advertise the prefix SID
attribute in BGP-LU, SR Linux derives the advertised label from the IGP-signaled label index, which has
the effect of stitching the BGP segment routing tunnel to the IGP segment routing tunnel. As a result, the
segment routing-enabled routers can establish an LSP with a consistent label value end-to-end across IGP
domains.

The prefix SID attribute is an optional transitive BGP path attribute with type code 40. This attribute
encodes a 32-bit label index into the SRGB space and can provide details about the SRGB space of the
originating router. The encoding of this BGP path attribute and its semantics are further described in draft-
ietf-idr-bgp-prefix-sid.

SR Linux attaches a meaning to a prefix SID attribute only when it is attached to routes belonging to the
labeled unicast IPv4 and labeled unicast IPv6 address families. When attached to routes of unsupported
address families, the prefix SID attribute is ignored but still propagated, as with any other optional transitive
attribute.

Label assignment and conflicts

A unique label index value is assigned to each unique IPv4 or IPv6 prefix that is advertised with a BGP
prefix SID. If label index N1 is assigned to a BGP-advertised prefix P1, and N1 plus the SRGB start label
creates a label value that conflicts with another SR programmed entry in the label forwarding information
base (LFIB), the conflict situation is addressed according to the following rules:

•

•

If the conflict is with another BGP route for prefix P2 that was advertised with a prefix SID attribute, all
the conflicting BGP routes for P1 and P2 are advertised with a normal BGP-LU label from the dynamic
label range.

If the conflict is with an IGP route and BGP is attempting to redistribute that IGP route as a label-ipv4
or label-ipv6 route with a route table import policy action that includes the bgp label-allocation prefix
sid reuse-igp true option, this is not considered a conflict and BGP uses the IGP-signaled label index
to derive its advertised label. This has the effect of stitching the BGP segment routing tunnel to the IGP
segment routing tunnel.

Any /32 label-ipv4 or /128 label-ipv6 BGP routes containing a prefix SID attribute are resolvable and used
in the same way as /32 label-ipv4 or /128 label-ipv6 routes without a prefix SID attribute. These routes are
installed in the route table and tunnel table. These routes can have ECMP next hops and can be used as
BGP-LU transport tunnels.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

59

 
 
 
 
Routing Protocols Guide Release 24.7

Segment routing with BGP-LU prefix SID

Note: Receiving a /32 label-ipv4 or /128 label-ipv6 route with a prefix SID attribute does not
create a tunnel in the segment-routing database; it only creates a label swap entry when the route
is re-advertised with a new next hop.

6.1 Segment routing with BGP-LU prefix SID topology example

The following figure shows the example topology referenced in the subsequent procedure, which builds
on the BGP-LU configurations shown in Seamless MPLS with BGP-LU configuration. The BGP-LU routers
along the shortest path advertise consistent labels for prefix 10.0.0.1/32 on AN-1 and for prefix 10.0.0.5/32
on AN-5, providing consistent label usage end-to-end across the multiple IS-IS domains.

Note: Unlike the seamless MPLS example, the following configurations assume that SR-ISIS is
used in the IGP domain and not LDP.

Figure 3: Segment routing with BGP-LU prefix SID topology - SR-ISIS/iBGP-LU domains

In this example, all nodes at minimum have protocols bgp segment-routing-mpls enabled, and are
configured with an SR-MPLS SRGB of 16000-16999. The nodes operate as follows:

• AN-1 advertises its loopback address (10.0.0.1/32) to its neighbor ABR-2 using a statically configured

prefix SID label (16101) in SR-ISIS.

Note: On AN-1, BGP-LU is not advertising the AN-1 prefix SID to ABR-2. Instead, this
advertisement is handled by SR-ISIS.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

60

 
 
 
 
Routing Protocols Guide Release 24.7

Segment routing with BGP-LU prefix SID

• ABR-2 uses a route table import policy to import the AN-1 prefix SID into its BGP RIB, and an export

routing policy to export the AN-1 prefix SID to its neighbors. The route table import policy includes the
bgp label-allocation prefix-sid reuse-igp action. With this option enabled, ABR-2 derives a BGP-LU
label for the AN-1 prefix SID by reusing both the SR-MPLS SRGB and the SR-ISIS label index for AN-1.
As a result, BGP-LU advertises the same prefix SID label (16101) toward P-3 as it received from AN-1.
These policies result in stitching the BGP-LU path (from P-3 to ABR-2) to the SR-ISIS tunnel (ABR-2 to
AN-1).

• To propagate prefix label 16101 from ABR-2 to ABR-4, P-3 uses only BGP-LU, advertising routes to its
iBGP neighbors. On P-3, SR-ISIS carries no prefix SID for AN-1. As a result, no import or export policy
is required on P-3.

• ABR-4 also uses BGP-LU to advertise the AN-1 prefix SID label 16101 to AN-5.

• After the AN-1 prefix SID is propagated end-to-end, when AN-5 wants to reach AN-1, it can simply

apply label 16101 to the packets.

• The basic steps outlined above also apply for AN-5 advertising its loopback address (10.0.0.5/32) and
prefix SID label (16105) in the opposite direction toward AN-1. The result being that, when AN-1 wants
to reach AN-5, it can apply label 16105 to the packets.

6.2 Configuring segment routing with BGP-LU prefix SID

Prerequisites

• Configure SR-MPLS in your network.

• Configure BGP-LU.

About this task

To configure BGP-LU with prefix SID for segment routing, perform the following steps.

Procedure

Step 1. On the access, ABR, and P nodes, enable segment routing for BGP.

Step 2. On the access nodes, associate a static segment routing local prefix SID label with the loopback

interface.

Note: No dedicated label block for BGP-LU prefix SID labels is required.

Step 3. On the ABR nodes, configure a route table import policy to import the prefix SIDs with the reuse-

igp true option and apply the route table import policy to the BGP RIB.

Note: When reusing the label index from the IGP, BGP-LU prefix SID label values are
drawn from the SRGB defined as part of the SR-MPLS configuration (and not from the
label block defined in the BGP-LU configuration).

Step 4. On the ABR nodes, configure an export routing policy to export prefix SIDs from the BGP RIB,

and apply the export policy to the applicable BGP peer groups or neighbors.

Step 5. As required, block propagation of prefix SIDs outside of the segment routing domain where they

apply.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

61

 
 
 
 
Routing Protocols Guide Release 24.7

Segment routing with BGP-LU prefix SID

Example: Segment routing with BGP-LU prefix SID configurations

The example configurations that follow apply for AN-1 and ABR-2 to advertise a prefix SID for
10.0.0.1/32. Similar configurations (not shown) are required for AN-5 and ABR-4 to advertise a prefix
SID for 10.0.0.5/32.

Example: Enable segment routing for BGP on all nodes

The following example enables segment routing using the bgp segment-routing-mpls command.

--{ candidate shared default }--[  ]--
All-nodes# info network-instance default protocols bgp
    network-instance default {
        protocols {
            bgp {
                segment-routing-mpls {
                    admin-state enable
                }
            }
        }
    }

Example: Associate local prefix SID label with the loopback interface on the access node
(AN-1 shown)

The following example associates local prefix SID label 101 with the loopback interface lo0.0 on
AN-1.

--{ candidate shared default }--[  ]--
AN-1# info interface lo0
    interface lo0 {
        admin-state enable
        subinterface 0 {
            ipv4 {
                address 10.0.0.1/32 {
                }
            }
        }
    }
--{ candidate shared default }--[  ]--
AN-1# info network-instance default interface lo0.0
    network-instance default {
        interface lo0.0 {
            interface-ref {
                interface lo0
                subinterface 0
            }
        }
    }
--{  candidate shared default }--[  ]--
AN-1# info network-instance default segment-routing
    network-instance default {
        segment-routing {
            mpls {
                local-prefix-sid 1 {
                    interface lo0.0
                    ipv4-label-index 101
                }
            }
        }
    }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

62

 
 
 
 
Routing Protocols Guide Release 24.7

Segment routing with BGP-LU prefix SID

Example: Configure the ABR route table import policy (ABR-2 shown)

The following example defines a route table import policy for importing prefix 10.0.0.1/32 into the
BGP RIB on ABR-2 using the routing-policy command. It also sets the bgp label-allocation
prefix-sid reuse-igp action, which directs BGP-LU to use the IGP-signaled label-index to derive its
advertised label. This has the effect of stitching the BGP segment routing tunnel to the IGP segment
routing tunnel.

The example also applies the route table import policy to the BGP RIB on ABR-2 using the bgp rib-
management command to populate the local BGP-LU table with the segment routing label for prefix
10.0.0.1/32.

--{ candidate shared default }--[  ]--
ABR-2# info routing-policy
    routing-policy {
        policy import-prefix-sid-2 {
            statement 10 {
                match {
                    prefix-set 10.0.0.1/32
                }
                action {
                    policy-result accept
                    bgp {
                        label-allocation {
                            prefix-sid {
                                reuse-igp true
                            }
                        }
                    }
                }
            }
        }
    }
--{ candidate shared default }--[  ]--
ABR-2# info network-instance default protocols bgp rib-management
    network-instance default {
        protocols {
            bgp {
                rib-management {
                    table ipv4-labeled-unicast {
                        route-table-import import-prefix-sid-2
                    }
                }
            }
        }
    }

Example: Configure the export routing policy for the ABRs (ABR-2 shown)

The following example defines a policy for ABR-2 to export prefix 10.0.0.1/32 to BGP neighbors using
the routing-policy command. It applies the policy on ABR-2 using the bgp neighbor command. It
also configures BGP group iBGP with BGP-LU enabled, and applies the group to the peer.

The policy advertises the segment routing label for prefix 10.0.0.1/32 from the ABR-2 BGP-LU table
to neighbor P-3 (192.0.2.3).

--{ candidate shared default }--[  ]--
ABR-2# info routing-policy
    routing-policy {
        policy export-prefix-sid-1 {
            statement 10 {

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

63

 
 
 
 
Routing Protocols Guide Release 24.7

Segment routing with BGP-LU prefix SID

                match {
                    prefix-set 10.0.0.1/32
                }
                action {
                    policy-result accept
                }
            }
        }
    }
--{ candidate shared default }--[  ]--
ABR-2# info network-instance default protocols bgp
    network-instance default {
        protocols {
            bgp {
                group iBGP {
                    afi-safi ipv4-labeled-unicast {
                        admin-state enable
                    }
                }
                neighbor 192.0.2.3 {
                    peer-as 64496
                    peer-group ABRs
                    export-policy [
                        export-prefix-sid-1
                    ]
                }
            }
        }
    }

Example: Block propagation of prefix SIDs

By default, the prefix SID attribute propagates without restriction. To prevent the prefix SID from
propagating outside the segment routing domain where it is applicable, use the network-instance
protocols bgp [group | neighbor] optional-attributes block-prefix-sid command. The command
removes the prefix SID attribute from all routes sent to and received from the iBGP and eBGP peers
included in the scope of the command.

The following example blocks the propagation of prefix SIDs to and from BGP neighbor 192.0.2.10
(not shown in the topology diagram).

--{ + candidate shared default }--[  ]--
Any-node# info network-instance default protocols bgp neighbor 192.0.2.10
    network-instance default {
        protocols {
            bgp {
                neighbor 192.0.2.10 {
                    optional-attributes {
                        block-prefix-sid true
                    }
                }
            }
        }
    }

Example: Diplay the prefix SID path attribute

To display the path attributes of the advertised BGP-LU routes, including the prefix-sid attribute,
use the info from state bgp-rib attr-sets attr-set command. The following example shows the BGP-

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

64

 
 
 
 
Routing Protocols Guide Release 24.7

Segment routing with BGP-LU prefix SID

LU path attributes advertised from ABR-2 to P-3. In this example, the info from state command is
entered from the network-instance context.

--{ candidate shared default }--[ network-instance default ]--
P-3# info from state bgp-rib attr-sets attr-set <attr-id>
    origin igp
    atomic-aggregate false
    next-hop 192.0.2.2
    med 0
    local-pref 100
    prefix-sid {
        tlv label-index {
            label-index {
                label-index 101
            }
        }
        tlv srgb-originator {
            srgb-originator {
                srgb [
                    16000:1000
                ]
            }
        }
    }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

65

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

7 IS-IS

Intermediate System to Intermediate System (IS-IS) is a link-state IGP that uses the Shortest Path First
(SPF) algorithm to determine routes. Routing decisions are made using the link-state information. IS-IS
evaluates topology changes and, if necessary, performs SPF recalculations.

Entities within IS-IS include networks, intermediate systems, and end systems. In IS-IS, a network is an
Autonomous System (AS), or routing domain, with end systems and intermediate systems. A router is an
intermediate system that sends, receives, and forwards Protocol Data Units (PDUs). End systems are
network devices that send and receive PDUs.

End system and intermediate system protocols allow routers and nodes to identify each other. IS-IS sends
out link-state updates periodically throughout the network, so each router can maintain current network
topology information.

IS-IS supports large ASs by using a two-level hierarchy. A large AS can be administratively divided into
smaller, more manageable areas. A system logically belongs to one area. Level 1 routing is performed
within an area. Level 2 routing is performed between areas. You can configure routers as Level 1, Level 2,
or both Level 1 and 2.

The following summarizes SR Linux support for IS-IS:

• Level 1, Level 2, and Level 1/2 IS types

• Configurable Network Entity Title (NET) per IS-IS instance

•

support for IPv4/v6 routing

• ECMP with up to 64 next hops per destination

•

IS-IS export policies (redistribution of other types of routes into IS-IS)

• authentication of LSP, CSNP, PSNP, and hello PDUs, using an authentication key or keychain specified

as follows:

– per instance or per level for all PDU types

– per interface or per interface and level for Hello PDUs

• authentication keychains with a single key per named keychain

• Purge Originator ID TLV (RFC 6232)

• options to ignore and suppress the attached bit

• ability to set the overload bit immediately or after each subsequent restart of the IS-IS manager

application and leave it on for a configurable duration each time

•

•

control over the link-state PDU (LSP) MTU size, with range from 490 bytes to 9490 bytes

configuration control over timers for LSP lifetime, LSP refresh interval, SPF calculation triggers, and
LSP generation

• hello padding (strict, loose, and adaptive modes)

• graceful restart, acting in restarting router mode and helper router mode

• Level 1 to Level 2 route summary

• BFD for fast failure detection

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

66

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

•

configurable hello timer with multiple per interface and level

• wide metrics (configurable per level)

•

configurable route preference for each route type, Level 1-internal, Level 1-external, Level 2-internal
and Level 2-external

• detailed statistics for interfaces, adjacencies, and levels

• Multi-instance IS-IS (MI-ISIS), which allows multiple instances of IS-IS to operate on a single circuit

• Multi-Topology MT-ID 0 and MT-ID 2 support, with MT-ID2 reserved for IPv6 network topology

• Multi-Topology Intermediate System to Intermediate System (MT-ISIS) MT0 and MT2 support

The info detail command displays default values for an IS-IS instance on SR Linux as shown in the
following example:

--{ * candidate shared default }--[ network-instance default protocols isis ]--
# info detail
    instance i1 {
        admin-state disable
        level-capability L2
        max-ecmp-paths 1
        poi-tlv false
        attached-bit {
            ignore false
            suppress false
        }
        overload {
            advertise-interlevel false
            advertise-external false
            immediate {
                set-bit false
                max-metric false
            }
            on-boot {
                set-bit false
                max-metric false
            }
        }
        timers {
            lsp-lifetime 1200
            lsp-refresh {
                interval 600
                half-lifetime true
            }
            spf {
                initial-wait 1000
                second-wait 1000
                max-wait 10000
            }
            lsp-generation {
                initial-wait 1000
                second-wait 1000
                max-wait 5000
            }
        }
        transport {
            lsp-mtu-size 1492
        }
        ipv4-unicast {
            admin-state enable
        }
        ipv6-unicast {

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

67

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

            admin-state enable
            multi-topology false
        }
        graceful-restart {
            helper-mode false
        }
        auto-cost {
        }
        authentication {
            csnp-authentication false
            psnp-authentication false
            hello-authentication false
        }
        inter-level-propagation-policies {
            level1-to-level2 {
            }
        }
    }

7.1 Basic IS-IS configuration

To configure IS-IS, perform the following tasks:

• Enable an IS-IS instance

•

If necessary, modify the level capability on the global IS-IS instance level

• Define area addresses

• Configure IS-IS interfaces

7.1.1 Enabling an IS-IS instance

Procedure

On SR Linux, you can enable an IS-IS instance within a network-instance. The following example enables
an IS-IS instance within the default network-instance.

Example

--{ * candidate shared default }--[  ]--
# info network-instance default protocols isis
    network-instance default {
        protocols {
            isis {
                instance i1 {
                }
            }
        }
    }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

68

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

7.1.2 Configuring the router level

Procedure

You can configure routers as Level 1, Level 2, or both Level 1 and 2. When IS-IS is enabled, the default
level-capability value is Level 2. This means that the router operates with Level 2 routing capabilities. To
change the default value in order for the router to operate as a Level 1 router or a Level 1/2 router, you
must explicitly modify the level value.

The level-capability value can be configured on the global IS-IS instance level and also on the interface
level. The level-capability value determines which level values can be assigned on the router level or on an
interface-basis.

In order for the router to operate as a Level 1 only router or as a Level 2 only router, you must explicitly
specify the level-number value.

• Specify Level 1 to route only within an area

• Specify Level 2 to route to destinations outside an area, toward other eligible Level 2 routers

Example

The following example configures the level capability for an IS-IS instance to Level 2.

--{ * candidate shared default }--[ network-instance default protocols ]--
# info isis
 isis {
        instance i1 {
            level-capability L2
        }
    }

7.1.3 Configuring the Network Entity Title

Procedure

On SR Linux, you can configure the Network Entity Title (NET) per IS-IS instance. The NET is 8-20 octets
long and consists of 3 parts: the area address (1-13 octets), the system ID (6 octets), and the n-selector (1
octet, must be 00)

The area address portion of the NET defines the IS-IS area to which the router belongs. At least one area
address should be configured on each router participating in IS-IS.

The area address portion of the NET identifies a point of connection to the network, such as a router
interface. The routers in an area manage routing tables about destinations within the area. The NET value
is used to identify the IS-IS area to which the router belongs.

The NET value is divided into three parts. Only the Area ID portion is configurable.

1. Area ID — A variable length field between 1 and 13 bytes. This includes the Authority and Format
Identifier (AFI) as the most significant byte and the area ID.

2. System ID — A 6-byte system identifier. This value is not configurable. The system ID is derived from
the system or router ID.

3. Selector ID — A 1-byte selector identifier that must contain zeros when configuring a NET. This value is
not configurable. The selector ID is always 00.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

69

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

Example

The following example configures a NET for an IS-IS instance:

--{ * candidate shared default }--[ network-instance default protocols ]--
# info isis
 isis {
        instance i1 {
            net 49.0001.1921.6800.1002.00
            }
        }
    }

7.1.4 Configuring global parameters

Procedure

You can configure the commands and parameters on the global IS-IS instance level.

Commands and parameters configured on the global IS-IS instance level are inherited by the interface
levels. Parameters specified in the interface and interface-level configurations take precedence over global
configurations.

Example

The following example shows the command usage to configure global-level IS-IS. The LSP
PDU authentication setting references a keychain defined at the system level (see Protocol
authentication).

--{ * candidate shared default }--[ network-instance default protocols ]--
# info isis
    isis {
        instance i1 {
            level-capability L2
            overload {
                on-boot {
                    timeout 90
                }
            }
            authentication {
                lsp-authentication {
                    generate true
                    check-received strict
                    keychain isisglobal
                }
            }
        }
    }

7.1.5 Configuring interface parameters

Procedure

There are no interfaces associated with IS-IS by default. An interface belongs to all areas configured on a
router. Interfaces cannot belong to separate areas. There are no default interfaces applied to the router IS-
IS instance. You must configure at least one IS-IS interface in order for IS-IS to work.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

70

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

You can configure both the Level 1 parameters and the Level 2 parameters on an interface. The level-
capability value determines which level values are used.

Example

The following example configures interface parameters for an IS-IS instance:

--{ * candidate shared default }--[ network-instance default protocols isis ]--
# info instance i1
    instance i1 {
        interface ethernet-1/2.1 {
            circuit-type point-to-point
            ipv4-unicast {
                admin-state enable
            }
            level 1 {
                authentication {
                    hello-authentication {
                        generate true
                        check-received strict
                        keychain Hello
                    }
                }
            }
        }
        level 1 {
        }
    }

7.1.6 Configuring authentication keys

Procedure

IS-IS supports authentication for PDUs using shared keys, which are changed at regular intervals using
keys configured in a keychain. This authentication mechanism is described in Protocol authentication.

In addition to using shared keys, authentication for IS-IS Hello, CSNP, PSNP, and LSP PDUs can be done
using directly configured keys. You can specify the key used for authenticating IS-IS PDUs associated with
a specific IS-IS instance, received or transmitted on a specific interface, and associated with a specific
level.

If a Hello PDU is received or transmitted on a specific interface, it is authenticated using the key configured
for that interface. If no key exists for the interface, the key configured for the instance is used. For CSNP,
PSNP. and LSP PDUs, authentication is performed using the key configured for the level. If no key exists
for the level, the key configured for the instance is used.

To configure a key, you specify the secret key (auth-password) and cryptographic algorithm to be used
for generating the key.

Example

The following example configures keys for an IS-IS instance, interface, and level.

--{ candidate shared default }--[  ]--
# info network-instance default protocols isis
    network-instance default {
        protocols {
            isis {
                instance i1 {

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

71

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

                    authentication {
                        key {
                            crypto-algorithm cleartext
                            auth-password $aes$9G3XrtckZzMg=$In9WuOvKPsTw6ehDX5YLgA==
                        }
                    }
                    interface ethernet-1/1.1 {
                        authentication {
                            key {
                                crypto-algorithm hmac-md5
                                auth-password $aes$97mfUA4Swx6I=$PfF02Mtu0gUXH5LwT/ltqQ==
                            }
                        }
                    }
                    level 1 {
                        authentication {
                            key {
                                crypto-algorithm hmac-sha-256
                                auth-password $aes$9YHCLtkxaLGw=$7HXuQHhR4wPXwifkGekFaQ==
                            }
                        }
                    }
                }
            }
        }
    }

7.2 IS-IS graceful restart

IS-IS graceful restart is a mechanism to prevent routing protocol re-convergence during a control plane
switchover, reset, or upgrade.

Without graceful restart, when an IS-IS router restarts, its IS-IS neighbors detect that the router has gone
down and remove routes that pass through that neighbor, resulting in data loss even if the restarting router
is able to maintain its forwarding table state.

Configuring graceful restart can prevent this data loss. To do this, the restarting router relies on neighbor
routers, which have also been configured for graceful restart, to maintain forwarding state while the router
restarts. These neighbor routers are known as helper routers.

For IS-IS graceful restart, SR Linux can operate in the following modes:

•

restarting router mode when its own IS-IS manager application (isis_mgr) restarts, or the application is
killed

• helper router mode when it detects that an adjacent IS-IS router has restarted

Restarting router mode

When the router is configured to operate in restarting router node, if the SR Linux IS-IS manager
application restarts or is killed, routes that are published by the IS-IS manager (associated with any IS-
IS instance), and used for programming the FIB, remain programmed for a duration of time sufficient to
allow a warm restart of the IS-IS manager application. The system starts sending periodic IS-IS Hello (IIH)
PDUs (with the Restart Request (RR) flag set) on all IS-IS interfaces so that neighbors do not time out their
adjacencies.

The helper router on each interface responds with an IIH PDU containing a Restart Acknowledgement
(RA). The exchange of IIH PDUs on each interface causes adjacencies to reform. After each adjacency

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

72

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

comes up, the helper router on the associated interface transmits a complete set of CSNPs to the
restarting router.

Helper router mode

When the router is configured to operate in helper router node, SR Linux advertises TLV 211 in IIH PDUs
sent on all IS-IS interfaces, which indicates that the IS-IS instance is able to help any adjacent neighbor
that signals a restart.

When the router receives an IIH PDU with the RR flag set from an adjacent neighbor, the router maintains
its adjacency with the neighbor, responds with an IIH PDU with the RA flag set, and sends a complete set
of CSNP PDUs to the restarting router.

7.2.1 Configuring IS-IS graceful restart

Procedure

You can configure SR Linux to operate as a restarting router (informing adjacent routers when the IS-
IS manager application restarts or is killed) and as a helper router (indicating to adjacent routers that it
can help those signaling a restart). By default, both restarting router mode and helper router mode are
disabled.

Example: Configure restarting router mode

To configure the router to operate in restarting router mode for IS-IS graceful restart, enable non-
stop-forwarding for IS-IS. For example:

--{ candidate shared default }--[  ]--
# info network-instance green protocols isis
    network-instance default {
        protocols {
            isis {
                non-stop-forwarding {
                    admin-state enable
                }
            }
        }
    }

Example: Configure helper router mode

The following example enables the router to operate in helper router mode:

--{ candidate shared default }--[  ]--
# info network-instance green protocols isis instance i1 graceful-restart
    network-instance default {
        protocols {
            isis {
                instance i1 {
                    graceful-restart {
                        helper-mode true
                        acceptable-duration 120
                    }
                }
            }
        }
    }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

73

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

The acceptable-duration parameter sets the amount of time in seconds that SR Linux advertises
as the Remaining Time in the Restart TLV with the RA flag set when this router starts to help another
router that has entered restart mode. By default, this is 60 seconds.

7.3 Displaying IS-IS information

Procedure

Use the commands shown in this section to display the following information for an IS-IS instance running
in a specified network instance:

•

interface information

• adjacency information

•

IS-IS link state database information

Example: IS-IS summary information

To display summary information for an IS-IS instance:

# show network-instance green_default protocols isis summary
------------------------------------------------------------------------------------------
Network instance "green_default", isis instance "default" is enable and up
Level Capability : L1L2
Export policy    : None
------------------------------------------------------------------------------------------
System-id : 0050.0500.5005
NET       : [ 49.0001.0050.0500.5005.00 ]
Area-id   : [ 49.0001 ]
------------------------------------------------------------------------------------------
IPv4 routing is enable
IPv6 routing is enable using None
Max ECMP path : 1
------------------------------------------------------------------------------------------
Ldp Synchronization is Disabled
------------------------------------------------------------------------------------------
Overload
Current Status : not in overload
------------------------------------------------------------------------------------------
Metric
Reference bandwidth: NA
L1 metric style: wide
L2 metric style: wide
------------------------------------------------------------------------------------------
Graceful Restart
Helper Mode    : disabled
Current Status : not helping any neighbors
------------------------------------------------------------------------------------------
Timers
LSP Lifetime                : 1200
LSP Refresh                 : 600
SPF initial wait            : 1000
SPF second wait             : 1000
SPF max wait                : 10000
LSP generation initial wait : 10
LSP generation second wait  : 1000
LSP generation max wait     : 5000
------------------------------------------------------------------------------------------
Route Preference
L1 internal : 15

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

74

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

L1 external : 160
L2 internal : 18
L2 external : 165
------------------------------------------------------------------------------------------
L1->L2 Summary Addresses Not configured
------------------------------------------------------------------------------------------
Instance Statistics
SPF run            : 29
Last SPF           : 2022-03-23T16:16:16.200Z
Partial SPF run    : 16
Last Partial SPF   : 2022-03-23T16:16:17.200Z
------------------------------------------------------------------------------------------
PDU Statistics
------------------------------------------------------------------------------------------
| pdu-name |     received     |    processed     |     dropped      |       sent       |
+==========+==================+==================+==================+==================+
| LSP      | 460              | 457              | 3                | 528              |
| IIH      | 308              | 281              | 27               | 497              |
| CSNP     | 52               | 51               | 1                | 116              |
| PSNP     | 30               | 30               | 0                | 3                |
------------------------------------------------------------------------------------------

Example:  IS-IS interface information

To display interface information for an IS-IS instance:

# show network-instance green_default protocols isis interface
------------------------------------------------------------------------------------------
Network Instance : green_default
Instance         : default
------------------------------------------------------------------------------------------
| Interface Name | Oper State | Level | Circuit id | Circuit type   | Ipv4 Metric L1/L2 | Ipv6 Metric
 L1/L2
===============================================================================================
| ethernet-1/1.1 | up         | L1L2  | 2          | point-to-point | 10/10             | 10/10
| ethernet-1/2.1 | up         | L1L2  | 2          | broadcast      | 10/10             | 10/10
| ethernet-1/3.1 | up         | L1L2  | 3          | broadcast      | 10/10             | 10/10
| ethernet-1/16. | up         | L1L2  | 4          | broadcast      | 10/10             | 10/10
| 1              |            |       |            |                |                   |      
| lo0.1          | up         | L1L2  | 5          | broadcast      | 0/0               | 0/0
-----------------------------------------------------------------------------------------------

Example:  IS-IS interface detail information

To display detail information for a specific IS-IS interface:

# show network-instance green_default protocols isis interface ethernet-1/1.1 detail
----------------------------------------------------------------------------------------
Network Instance   : green_default
Instance           : default
----------------------------------------------------------------------------------------
Interface-Name                      : ethernet-1/1.1
Status                              : IS-IS is admin enabled, oper up
Circuit                             : id 1 is broadcast and not passive
Hello Authentication Generate       : True
Hello Authentication Check Received : Strict
Hello Padding                       : disable
Csnp Interval                       : 10
Lsp Pacing                          : 100
Ldp Sync State                      : disabled
Ldp Sync Duration                   : 3274
---------------------------------------------------------------------------------------
Level                               : 1

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

75

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

Status                              : enabled
Adjacencies                         : 1
Hello Authentication Generate       : True
Hello Authentication Check Received : Strict
Priority                            : 64
Hello Interval                      : 9
Hello Multiplier                    : 3
Ipv4 Metric                         : 10
Ipv6 Metric                         : 10
----------------------------------------------------------------------------------------
Level                               : 2
Status                              : enabled
Adjacencies                         : 1
Hello Authentication Generate       : True
Hello Authentication Check Received : Strict
Priority                            : 64
Hello Interval                      : 9
Hello Multiplier                    : 3
Ipv4 Metric                         : 10
Ipv6 Metric                         : 10
----------------------------------------------------------------------------------------

Example: IS-IS adjacency information

To display IS-IS adjacency information:

# show network-instance default protocols isis adjacency
--------------------------------------------------------------------------------------
Network-instance    : default
IS-IS instance      : global
--------------------------------------------------------------------------------------
System-Id      Adj-Level  Interface        IPv4-Address  State  Uptime       Rem-Hold  
<hostname1>    L1         ethernet-1/1.0   10.0.0.1      Up     0d 00:46:43  19s
<hostname1>    L2         ethernet-1/1.0   10.0.0.1      Up     0d 00:46:43  19s
--------------------------------------------------------------------------------------
Adjacencies: 2
--------------------------------------------------------------------------------------

Example:  IS-IS link state database information

To display information for the IS-IS link state database:

# show network-instance green_default protocols isis database
--------------------------------------------------------------------------------------
Network-instance    : green_default 
IS-IS instance      : default
--------------------------------------------------------------------------------------
| Level Number | Lsp Id               | Sequence | Checksum | Lifetime | Attributes |
+==============+======================+==========+==========+==========+============+
| 1            | 0010.0100.1001.00-00 | 0x33     | 0x1672   | 1167     | L1 L2      |
| 1            | 0020.0200.2002.00-00 | 0x35     | 0xd562   | 1014     | L1 L2      |
| 1            | 0030.0300.3003.00-00 | 0x38     | 0xf447   | 640      | L1 L2      |
| 1            | 0030.0300.3003.01-00 | 0x2f     | 0x4db6   | 1005     | L1 L2      |
| 1            | 0030.0300.3003.02-00 | 0x2e     | 0xd355   | 709      | L1 L2      |
| 1            | 0040.0400.4004.00-00 | 0x39     | 0x6f2a   | 638      | L1 L2      |
| 1            | 0040.0400.4004.01-00 | 0x2f     | 0xf0ef   | 822      | L1 L2      |
| 1            | 0040.0400.4004.02-00 | 0x2f     | 0xa5f8   | 999      | L1 L2      |
| 1            | 0050.0500.5005.00-00 | 0x38     | 0xfbbb   | 905      | L1 L2      |
| 1            | 0050.0500.5005.01-00 | 0x31     | 0x3937   | 745      | L1 L2      |
| 1            | 0050.0500.5005.02-00 | 0x2f     | 0xd19    | 657      | L1 L2      |
| 1            | 0060.0600.6006.00-00 | 0x37     | 0xf287   | 967      | L1 L2      |
| 1            | 0060.0600.6006.01-00 | 0x2f     | 0xadfb   | 753      | L1 L2      |
| 1            | 0060.0600.6006.02-00 | 0x2f     | 0x5f95   | 819      | L1 L2      |

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

76

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

| 1            | 0070.0700.7007.00-00 | 0x33     | 0x48dd   | 1058     | L1 L2      |
| 1            | 0070.0700.7007.01-00 | 0x2f     | 0xadb2   | 1164     | L1 L2      |
| 1            | 0070.0700.7007.02-00 | 0x2e     | 0xdf8e   | 852      | L1 L2      |
| 2            | 0010.0100.1001.00-00 | 0x3e     | 0xb92f   | 1150     | L1 L2      |
| 2            | 0010.0100.1001.00-01 | 0x3c     | 0x1875   | 818      | L1 L2      |
| 2            | 0020.0200.2002.00-00 | 0x41     | 0x540f   | 1177     | L1 L2      |
| 2            | 0020.0200.2002.00-01 | 0x3f     | 0x2db9   | 699      | L1 L2      |
| 2            | 0030.0300.3003.00-00 | 0x3c     | 0x302f   | 1058     | L1 L2      |
| 2            | 0030.0300.3003.00-01 | 0x3f     | 0x5150   | 668      | L1 L2      |
| 2            | 0030.0300.3003.01-00 | 0x30     | 0xb518   | 915      | L1 L2      |
| 2            | 0030.0300.3003.02-00 | 0x2f     | 0xe113   | 1035     | L1 L2      |
| 2            | 0040.0400.4004.00-00 | 0x3e     | 0xa17b   | 657      | L1 L2      |
| 2            | 0040.0400.4004.00-01 | 0x3e     | 0x260b   | 1018     | L1 L2      |
| 2            | 0040.0400.4004.01-00 | 0x30     | 0x1511   | 1066     | L1 L2      |
| 2            | 0040.0400.4004.02-00 | 0x2f     | 0x27a7   | 1035     | L1 L2      |
| 2            | 0050.0500.5005.00-00 | 0x41     | 0x59d6   | 608      | L1 L2      |
| 2            | 0050.0500.5005.00-01 | 0x44     | 0xf165   | 1110     | L1 L2      |
| 2            | 0050.0500.5005.01-00 | 0x33     | 0x7709   | 584      | L1 L2      |
| 2            | 0050.0500.5005.02-00 | 0x31     | 0xa74    | 657      | L1 L2      |
| 2            | 0060.0600.6006.00-00 | 0x3d     | 0xd5ed   | 903      | L1 L2      |
| 2            | 0060.0600.6006.00-01 | 0x44     | 0xdc97   | 666      | L1 L2      |
| 2            | 0060.0600.6006.01-00 | 0x30     | 0x9024   | 1145     | L1 L2      |
| 2            | 0060.0600.6006.02-00 | 0x30     | 0xbc66   | 1020     | L1 L2      |
| 2            | 0070.0700.7007.00-00 | 0x3a     | 0x81fd   | 862      | L1 L2      |
| 2            | 0070.0700.7007.00-01 | 0x3e     | 0xf82a   | 765      | L1 L2      |
| 2            | 0070.0700.7007.01-00 | 0x30     | 0xbad5   | 658      | L1 L2      |
| 2            | 0070.0700.7007.02-00 | 0x2f     | 0x1ecb   | 675      | L1 L2      |
+--------------+----------------------+----------+----------+----------+------------+
LSP Count: 41
-------------------------------------------------------------------------------------

To display information for a specific IS-IS link state database:

# show network-instance green_default protocols isis database 1
--------------------------------------------------------------------------------------
Network-instance    : green_default 
IS-IS instance      : default
--------------------------------------------------------------------------------------
| Level Number | Lsp Id               | Sequence | Checksum | Lifetime | Attributes |
+==============+======================+==========+==========+==========+============+
| 1            | 0010.0100.1001.00-00 | 0x33     | 0x1672   | 1048     | L1 L2      |
| 1            | 0020.0200.2002.00-00 | 0x35     | 0xd562   | 894      | L1 L2      |
| 1            | 0030.0300.3003.00-00 | 0x39     | 0x7762   | 1179     | L1 L2      |
| 1            | 0030.0300.3003.01-00 | 0x2f     | 0x4db6   | 886      | L1 L2      |
| 1            | 0030.0300.3003.02-00 | 0x2f     | 0x4ace   | 1188     | L1 L2      |
| 1            | 0040.0400.4004.00-00 | 0x3a     | 0xcd9f   | 1135     | L1 L2      |
| 1            | 0040.0400.4004.01-00 | 0x2f     | 0xf0ef   | 703      | L1 L2      |
| 1            | 0040.0400.4004.02-00 | 0x2f     | 0xa5f8   | 879      | L1 L2      |
| 1            | 0050.0500.5005.00-00 | 0x38     | 0xfbbb   | 785      | L1 L2      |
| 1            | 0050.0500.5005.01-00 | 0x31     | 0x3937   | 625      | L1 L2      |
| 1            | 0050.0500.5005.02-00 | 0x30     | 0xb86e   | 1148     | L1 L2      |
| 1            | 0060.0600.6006.00-00 | 0x37     | 0xf287   | 847      | L1 L2      |
| 1            | 0060.0600.6006.01-00 | 0x2f     | 0xadfb   | 633      | L1 L2      |
| 1            | 0060.0600.6006.02-00 | 0x2f     | 0x5f95   | 700      | L1 L2      |
| 1            | 0070.0700.7007.00-00 | 0x33     | 0x48dd   | 938      | L1 L2      |
| 1            | 0070.0700.7007.01-00 | 0x2f     | 0xadb2   | 1044     | L1 L2      |
| 1            | 0070.0700.7007.02-00 | 0x2e     | 0xdf8e   | 733      | L1 L2      |
+--------------+----------------------+----------+----------+----------+------------+
LSP Count: 17
--------------------------------------------------------------------------------------

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

77

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

7.4 Clearing IS-IS information

Procedure

To clear information for an IS-IS instance, use the tools commands below:

Example: Clear statistics

To clear statistics for an IS-IS instance running in a specified network instance:

# tools network-instance default protocols isis instance i1 statistics clear

Example: Clear link state database information

To clear link state database information for a level:

# tools network-instance default protocols isis instance i1 link-state-database clear

Example: Clear IS-IS adjacency information

To clear IS-IS adjacency information for an interface:

# tools network-instance default protocols isis instance i1 interface ethernet-1/1.1
 adjacencies clear

7.5 IS-IS weighted ECMP

Weighted IP ECMP, also known as UCMP (unequal cost multipath), allows the installation of a multipath
route in the FIB, where the ECMP flow hashing distributes traffic by directing flows to each next-hop in
a ratio proportional to the weight assigned to each next-hop. Multipath routes are the routes that have
multiple next-hops.

Weighted ECMP (wECMP) distributes traffic unequally over multiple paths and uses available bandwidth
more efficiently for better load balancing. For example, if you have four equal-cost paths to a destination,
but one path has a lower bandwidth than the other three, you can use wECMP to assign more traffic to the
higher bandwidth path and less traffic to the lower bandwidth paths.

The wECMP feature is available on 7250 IXR-6/10/6e/10e and 7250 IXR-X platforms. It is supported for
both IS-IS IPv4 and IPv6 routes.

The high-level steps for configuring wECMP are:

1. Enabling weighted ECMP

2. Configuring weighted load-balancing over interface next-hops

The system normalizes the weights used in weighted ECMP according to the algorithm described in
Normalizing datapath weights.

Note: When a BGP next-hop is resolved by an IS-IS route with weighted ECMP next-hops, any
traffic using the BGP route and directed to the BGP next-hop (in case the BGP route has multiple
paths) inherits the weighted ECMP load-balancing of the resolving IS-IS route.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

78

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

7.5.1 Enabling weighted ECMP

Procedure

You can enable the weighted ECMP per IS-IS instance. wECMP can be configured for an IS-IS instance
under a default network instance or network instance of type ip-vrf . Enabling weighted ECMP, triggers
weighted ECMP programming for all eligible multipath IS-IS routes associated with the instance. To
program an IS-IS route as a multipath route, all the multipaths must have an equal total path cost to the
destination.

The ECMP weights (load-balancing-weight) are normalized based on the number of hash buckets per
next-hop group (NHG). The sum of all normalized datapath weights must not exceed the hash bucket limit.

You must configure the maximum number of ECMP hash buckets used for IS-IS weighted ECMP routing
on a per IS-IS instance basis. If the hash bucket limit is T and the normalized datapath weight of each next-
hop is Ni then the sum of all Ni in each mutipath set (NHG) cannot exceed T. The system normalizes the
weights used in weighted ECMP according to the algorithm described in Normalizing datapath weights.

The 7250 IXR-6/10/6e/10e and 7250 IXR-X platforms have a 128 hash bucket limit. Datapath resources
can be conserved by configuring a lower value for the bucket size. However, this reduces the granularity
or fine distribution of the traffic. With a smaller bucket size, there are fewer next-hop options available for
load balancing, which can limit the flexibility and precision of traffic distribution. You cannot reduce the hash
bucket limit below the ECMP limit of the IS-IS instance.

The following example enables weighted ECMP per IS-IS instance:

Example: Enabling weighted ECMP

--{ * candidate shared default }--[  ]--
# info network-instance default protocols isis
    network-instance mgmt {
        protocols {
            isis {
                instance test {
                    weighted-ecmp {
                        admin-state enable
                        max-ecmp-hash-buckets-per-next-hop-group 56
                    }
                }
            }
        }
    }

Where,

• admin-state

When set to enable, triggers weighted ECMP programming for all eligible multipath IS-IS routes
associated with the instance. The default is disable. This ensures backward compatibility
with previous releases that only supported ECMP wherein the traffic was distributed in equal
proportion.

• max-ecmp-hash-buckets-per-next-hop-group

Specify the maximum number of ECMP hash buckets per next-hop-group. Default bucket size is
128.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

79

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

Note: The configured value of max-ecmp-hash-buckets-per-next-hop-
group must always be greater than or equal to max-ecmp-paths (network-
instance.protocols.isis.instance.max-ecmp-paths).

Example: Disabling weighted ECMP

--{ * candidate shared default }--[  ]--
# info network-instance default protocols isis
    network-instance mgmt {
        protocols {
            isis {
                instance test {
                    weighted-ecmp {
                        admin-state disable
                        max-ecmp-hash-buckets-per-next-hop-group 1
                    }
                }
            }
        }
    }

You can disable the weighted ECMP per ISIS instance. When you disable the weighted ECMP in
an IS-IS instance, all IS-IS routes computed by this instance is programmed in the FIB with classic
ECMP programming. This means no weights are assigned to the next-hops, even if some or all of the
next-hop interfaces in a multipath set have a non-zero load balancing weight (load-balancing-
weight) configured.

7.5.2 Configuring weighted load-balancing over interface next-hops

Procedure

When the weighted ECMP feature is enabled, the IS-IS route linked to the routing instance can be
programmed into the datapath. This allows for weighted load-balancing across the interface next-hops of
the route.

In order for weighted ECMP to be supported across the interface next-hops of an IS-IS route the following
conditions must be met:

• All ECMP next-hops must be interface next-hops

• All next-hop interfaces are configured with non-zero load-balancing weights.

To configure load-balancing weight, set the parameter load-balancing-weight under network-
instance.protocols.isis.instance.interface.level.weighted-ecmp. This parameter can
be set to a static value, or you can choose to use the options auto or none. The static value assigned
must be between 1 and 4294967295.

If all the next-hop interfaces in the multipath set have a load-balancing-weight, which is either
automatically derived from the port/LAG bandwidth using the auto option or configured with a static
value, then the route is programmed in the FIB with wECMP. If one or more next-hop interfaces have zero
weight (load-balancing-weight = none), then the wECMP load-balancing falls back to classic ECMP
operation and equally distributes the traffic.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

80

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

In the NHG for the IS-IS route, each next-hop is assigned a non-zero weight. In SR Linux, the wECMP
programming capability is available even if some multipath next-hop interfaces are connected to different
adjacent routers.

The following example configures weighted load-balancing over interface next-hops:

Example: Configuring weighted load-balancing over interface next-hops

--{ * candidate shared default }--[  ]--
# info network-instance default protocols isis
    network-instance mgmt {
        protocols {
            isis {
                instance test {
                    interface mgmt0.0 {
                        weighted-ecmp {
                            load-balancing-weight auto
                        }
                    }
                }
            }
        }
    }

Here the load-balancing-weight value is automatically derived from the port/LAG bandwidth.

7.5.3 Normalizing datapath weights

The ECMP weights (load-balancing-weight) are normalized based on the number of hash buckets (max-
ecmp-hash-buckets-per-next-hop-group) defined per NHG. The sum of all normalized datapath weights
must not exceed the hash bucket limit.

The datapath programming of the NHG assigns Ni hash buckets to each next-hop. The value of Ni is
determined by normalizing it using the following method:

1. Calculate the Greatest Common Divisor (GCD) of all datapath weights.

2. Divide all datapath weights by the GCD.

3.

If the sum of normalized weights is less than the maximum number of buckets, weight determination
process is complete.
Or

4.

If the sum of normalized weights exceeds the bucket size,

a. Assign each nexthop a minimum of one bucket.

b. Distribute the remaining buckets (max_buckets - num_nexthops) to each nexthop based on the ratio
of each nexthop's weight to the total weight (rounded down). There may be cases where no extra
buckets are assigned.

7.6 Multi-instance IS-IS

Multi-instance IS-IS (MI-ISIS), defined in RFC 8202, allows multiple instances of IS-IS to operate on a
single circuit. To configure MI-ISIS in SR Linux, you set the instance identifier (IID), which identifies an IS-

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

81

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

IS instance, and enable sending of the IID-TLV in IS-IS PDUs. The IID-TLV identifies the IS-IS instance and
topology.

MI-ISIS uses the following route-selection tie-break mechanism:

• When multiple MI-ISIS instances contain an identical route, the route with the lowest metric is selected

as the active route and used for forwarding.

• When multiple MI-ISIS instances have an identical route with identical metric, the route from the

instance with the lowest IID is selected as the active route and used for forwarding.

When MI-ISIS is used in combination with ECMP, then only active RTM routes of the same MI-ISIS
instance can be load-balanced. ECMP load-balancing between MI-ISIS instances is not supported.

7.6.1 Configuring the IID

Procedure

The IID is a numerical instance identification number (0-127) and is used to identify the local IS-IS instance
and to populate the IID-TLV when MI-ISIS is configured. In an MI-ISIS configuration, each IS-IS instance
must have a unique name and can only be associated with a single unique IID within a network instance.
The default IS-IS instance has an IID of 0.

Example

The following example configures an IID for an IS-IS instance:

--{ * candidate shared default }--[  ]--
# info network-instance default protocols isis instance i1 instance-id
    network-instance default {
        protocols {
            isis {
                instance i1 {
                    instance-id 2
                }
            }
        }
    }

7.6.2 Enabling the IID-TLV

Procedure

To configure MI-ISIS, you enable SR Linux to include the IID-TLV for the IS-IS instance in IS-IS PDUs. The
IID-TLV includes the configured IID and identifies the instance-specific topology or topologies to which the
PDU applies.

Example

The following example enables the system to send the IID-TLV for an IS-IS instance :

--{ * candidate shared default }--[  ]--
# info network-instance default protocols isis
    network-instance default {
        protocols {
            isis {
                instance i1 {

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

82

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

                    iid-tlv true
                }
            }
        }
    }

If iid-tlv is set to false, the configured IID has only local relevance. Interfaces enabled in such
IS-IS instances establish adjacencies unaware of any other instances. The router originates link state
packets without the IID-TLV and expects other routers in the area not to advertise any IID-TLV either.

7.6.3 Displaying MI-ISIS information

Procedure

You can display information about the MI-ISIS configuration using show reports or info from state
output.

Example: Display IID-TLV information

The following example displays the configured IID-TLV and any received IID-TLVs for an IS-IS
instance:

--{ + candidate shared default }--[  ]--
# info from state network-instance default protocols isis instance MyInstance2
    admin-state enable
    instance-id 2
    level-capability L2
    max-ecmp-paths 1
    poi-tlv false
    iid-tlv true
    export-policy MyPolicy
    hello-padding disable
    enable-csnp-on-p2p-links true
    oper-state up
    oper-system-id 0000.0000.8521
    net [
        49.0000.0000.8521.00
    ]
    oper-area-id [
        49
    ]
....
<snip>
....
    level 2 {
        metric-style wide
        <snip>
        link-state-database {
            lsp 0000.0000.8521.00-00 {
                maximum-area-addresses 3
                <snip>
                tlvs {
                    <snip>
                    tlv instance-id {
                        instance-ids {
                            instance-id 2 {
                                topology-id [
                                    0
                                ]
                            }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

83

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

                        }
                    }

7.7 Multi-Topology IS-IS MT0 and MT2

SR Linux supports Multi-Topology (MT) Routing for IS-IS, as defined in RFC 5120. Multi-Topology IS-IS
(MT-ISIS), allows multiple independent IP routing topologies within a single IS-IS domain.

MT-ISIS support within SR Linux enables the creation of separate IPv4 unicast and IPv6 unicast topologies
within the IS-IS domain. These topologies contribute routes to specific route tables, allowing for non-
congruent topologies between different routing tables. As a result, networks can control the links or nodes
that are used for forwarding different types of traffic.

For example, MT-ISIS can enable all links to carry IPv4 traffic, while only a subset of links can also carry
IPv6 traffic.

SR Linux supports the following multi-topologies:

• MT-ID 0 (standard IPv4 and IPv6 topology)

• MT-ID 2 (IPv6-only topology)

IPv4 or IPv6 routing

When an IS-IS instance is created, IPv4 routing is enabled by default and is restricted to Multi-Topology IS-
IS (MT-IS-IS) with topology identifier MT0. This configuration ensures that the IS-IS instance is initially set
up to handle IPv4 routing within the default topology, MT0, as specified by RFC 5120.

Unlike MT0, which is the default for IPv4, MT2 is not enabled by default and must be configured to manage
IPv6 traffic. You must explicitly enable IPv6 routing in an IS-IS instance. IPv6 routing can be configured for
either the MT0 or MT2 topology, with MT0 being the default topology for IPv6.

For information about enabling IPv6 routing, see Configuring an IPv6 routing , and for MT2 topology
configuration details, see Configuring MT2 topology.

7.7.1 Configuring an IPv6 routing

Procedure

Use the command .network-instance.[name].protocols.isis.instance.[instance-
name].ipv6-unicast.admin-state.enable to enable IPv6 unicast routing for an IS-IS instance.

Example

The following example enables IPv6 unicast routing for an IS-IS instance.

--{ candidate shared default }--[  ]--
info network-instance default protocols isis instance srl_isis_instance
    network-instance default {
        protocols {
            isis {
                instance srl_isis_instance {
                    ipv6-unicast {
                        admin-state enable
                    }
                }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

84

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

            }
        }
    }

7.7.2 Configuring MT2 topology

Procedure

To configure the default MT2 topology for an IPv6 routing, set the parameter multi-topology under the
.network-instance.[name].protocols.isis.instance.[instance-name].ipv6-unicast.
context to true.

Example

The following config example enables IPv6 routing for an IS-IS instance.

--{ candidate shared default }--[  ]--
info network-instance default protocols isis instance srl_isis_instance
    network-instance default {
        protocols {
            isis {
                instance srl_isis_instance {
                    ipv6-unicast {
                        admin-state enable
                        multi-topology true
                    }
                }
            }
        }
    }

7.8 IS-IS extensions for Traffic Engineering (TE)

IS-IS TE extensions allow network operators to encode and flood traffic engineering information throughout
a network using TE-enabled links.

IGPs (IS-IS/OSPF) use only an interface metric to find the shortest path to a destination without
considering factors such as bandwidth and link delay. For traffic engineering computations, link attributes
such as available bandwidth, maximum reservable bandwidth, TE metric, and link affinity are required. The
IS-IS TE extensions contain the TLVs and sub-TLVs that specify these link attributes. IS-IS link-state PDUs
include these TLVs. Flooding algorithms used by link-state IGPs ensure that link attributes are distributed
evenly across all routers in the routing domain.

7.8.1 Enabling advertisement of IS-IS TE TLVs/sub-TLVs

Procedure

SR Linux supports the transmission and reception of Traffic Engineering (TE)-related TLV and sub-
TLV fields in IS-IS Link State Packets (LSPs) to share network resource information. The network-
instance.traffic-engineering container enables and configures TE functionality for both IPv4 and
IPv6. When TE is enabled, the TE-related TLVs and sub-TLVs are incorporated into the LSPs generated by
the Interior Gateway Protocol (IGP).

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

85

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

To enable advertising of TLVs and sub-TLVs, set the advertisement parameter to true within the
network-instance.protocols.isis.instance.traffic-engineering container. By default,
the TE advertisement parameter is set to false.

Example

In the following example, the IS-IS TE TLVs and sub-TLVs are included in the IS-IS LSP.

--{ * candidate shared default }--[  ]--
# info network-instance default protocols isis instance test traffic-engineering
 advertisement
    network-instance default {
        protocols {
            isis {
                instance test {
                    traffic-engineering {
                        advertisement true
                    }
                }
            }
        }
    }

7.8.2 TE router ID TLV

A TE router ID uniquely identifies a router in an IGP TE domain. The router ID must be operationally active
within the IS-IS instance and associated with a system or loopback address.

For the IPv4 and IPv6 address families, IS-IS advertises the IPv4 router ID using TLV 134 as specified in
[RFC5305] and the IPv6 router ID using TLV 140 as specified [RFC6119], for use within an IS-IS area.

IPv4 TE router ID TLV

The IPv4 Traffic Engineering (TE) Router ID TLV (Type 134) contains the 4-octet router ID of the router
originating the LSP. According to RFC5305, the TE Router ID TLV can be advertised by a router regardless
of whether IPv4 TE is enabled.

If IPv4 TE is disabled, the IPv4 TE Router ID TLV is advertised only if the network-
instance.default.router-id parameter is configured, regardless of whether the router ID is
reachable. If the network-instance.default.router-id parameter is not configured, then IPv4 TE
Router ID TLV is not advertised.

If IPv4 TE is enabled, the value of the advertised IPv4 TE Router ID TLV is selected based on a specific
order of preference, which is as follows:

1. network-instance.default.protocol.isis.instance.traffic-engineering.ipv4-te-

router-id

2.

If not available, network-instance.default.traffic-engineering.ipv4-te-router-id
value is selected.

3.

If neither is available, network-instance.default.router-id value is selected.

Note:  When IPv4 TE is enabled, only the IPv4 TE Router ID that is operationally active within the
IS-IS instance and associated with a system or loopback address is eligible to be advertised as
per the above priority list.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

86

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

When IPv4 routing is disabled and IPv6 TE is enabled with router capability advertised, the IPv4 router
ID TLV is not advertised. However, another ipv4-router-id TLV set to 0.0.0.0 is included within the router
capability top-level TLV, ensuring compliance with the RFC7981 standard.

IPv6 TE router ID TLV

The IPv6 router ID can be advertised in top-level TLV 140, defined in RFC6119, or within the Router
Capability sub-TLV12, as defined in RFC5305.

The IPv6 TE router ID TLV is advertised when all of the following conditions are satisfied:

•

IPv6 and TE must be enabled
and

• A configured routable IPv6 TE router interface address must exist

and

• The advertisement of TE-related TLVs and sub-TLVs must be enabled by setting the advertisement

parameter to true within the network-instance.traffic-engineering container.

If IPv6 or TE is disabled, the IPv6 TE router ID TLV 140 is not advertised.

The value of the advertised IPv6 router ID is selected based on a specific order of preference, as follows:

1. network-instance.default.protocol.isis.instance.traffic-engineering.ipv6-te-

router-id <value>

2.

If not available, network-instance.default.traffic-engineering.ipv6-te-router-id
<value> is selected.

3.

If neither is available, interface.subinterface.ipv6.address xx:xx::xx/128 is selected.

Note:
A configured and enabled IPv6 loopback address is selected for advertisement.

Note: Only the ipv6-te-router-id that is operationally active within the IS-IS instance and
associated with a system or loopback address is eligible for advertisement in accordance with the
above priority list.

RFC 7981 implication to IPv6 Router IDs

RFC 7981 defines IS-IS Router Capability TLV, which allows routers to announce their capabilities within
an IS-IS level or across the entire routing domain. The IS-IS router capability TLV consists of multiple sub-
TLVs.

Enabling IPv6 TE and advertising router capability results in the advertisement of both the IPv6 Router ID
TLV 140 and the IPv6 Router ID TLV 12 within the Router Capability TLV.

The Router Capability sub-TLV12 as defined in RFC 5316, is used when the IPv6 TE Router ID must
be distributed to all routers within an entire IS-IS routing domain, instead of being restricted to an area
scope. In SR Linux, sub-TLV 12 is advertised only when IPv4 unicast routing is explicitly disabled using
the network-instance.default.protocols.isis.instance.ipv4-unicast.admin-state
disable command.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

87

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

7.8.2.1 Advertising IPv4 TE router ID TLV

Procedure

A TE router ID must be a unique and stable address within the IS-IS domain. When IPv4 TE is enabled,
the advertised IPv4 TE router ID TLV value is selected in a specific order of preference. For preference
details, see IPv4 TE router ID TLV.

The following configurations enable the advertisement of the IPv4 router ID and TE link parameters using
the legacy TE encoding defined in RFC 5305.

Example: Advertising IPv4 router ID TLV using IS-IS TE router ID

In the following configuration example, IPv4 router ID (192.168.0.0) configured within the IS-IS TE
instance is selected for advertising IPv4 TE router ID TLV.

--{ * candidate shared default }--[  ]--
# info network-instance default protocols isis instance test traffic-engineering ipv4-te-
router-id
    network-instance default {
        protocols {
            isis {
                instance test {
                    traffic-engineering {
                        ipv4-te-router-id 192.168.0.0
                    }
                }
            }
        }
    }

Example: Advertising IPv4 router ID TLV using network instance TE router ID

In the following configuration example, IPv4 router ID (192.168.11.1) configured within a default
network instance with TE capabilities is selected for advertising IPv4 TE router ID TLV.

--{ * candidate shared default }--[  ]--
# info network-instance default traffic-engineering ipv4-te-router-id
    network-instance default {
        traffic-engineering {
            ipv4-te-router-id 192.168.11.1
        }
    }

Example: Advertising IPv4 router ID TLV using default network instance router ID

In the following configuration example, IPv4 router ID (192.0.5.1) configured within a default
network instance is selected for advertising IPv4 TE router ID TLV.

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        router-id 192.0.5.1
    }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

88

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

7.8.2.2 Advertising IPv6 TE router ID TLV

Procedure

A TE router ID must be a unique and stable address within the IS-IS domain. When IPv6 TE is enabled,
the advertised IPv6 TE router ID TLV value is selected in a specific order of preference. For preference
details, see IPv6 TE router ID TLV.

The following configurations enable the traffic engineering behavior with IPv6 TE links. The IS-IS instance
automatically advertises the IPv6 TE TLVs, and sub-TLVs defined in RFC6119. For information about IPv6
TE router ID TLV, see IPv6 TE router ID TLV

Example: Advertising IPv6 router ID TLV using an IS-IS TE router ID

In the following configuration example, IPv6 router ID (2001:db8::1) configured within the IS-IS TE
instance is selected for advertising IPv4 TE router ID TLV.

--{ * candidate shared default }--[  ]--
# info network-instance default protocols isis instance test traffic-engineering ipv6-te-
router-id
    network-instance default {
        protocols {
            isis {
                instance test {
                    traffic-engineering {
                        ipv6-te-router-id 2001:db8::1
                    }
                }
            }
        }
    }

Example: Advertising IPv6 router ID TLV using default network instance TE router ID

In the following configuration example, IPv6 router ID (2001:db8::8) configured within a default
network instance with TE capabilities is selected for advertising IPv4 TE router ID TLV.

--{ * candidate shared default }--[  ]--
# info network-instance default traffic-engineering ipv6-te-router-id
    network-instance default {
        traffic-engineering {
            ipv6-te-router-id 2001:db8::8
        }
    }

Example: Advertising IPv6 router ID TLV using subinterface IPv6 address

In the following configuration example, the value of IPv6 address
(2002::1234:abcd:ffff:c0a8:101/64) configured within a subinterface is selected for
advertising IPv6 TE router ID TLV.

--{ * candidate shared default }--[  ]--
# info interface ethernet-1/1 subinterface 0 ipv6
    interface ethernet-1/1 {
        subinterface 0 {
            ipv6 {
                address 2002::1234:abcd:ffff:c0a8:101/64 {
                }
            }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

89

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

        }
    }

7.8.3 Advertising TE attributes using legacy and ASLA TLVs

When network-instance.default.protocols.isis instance.default traffic-
engineering advertisement is enabled, the router advertises TE TLVs.

IS-IS allows advertising the protocol enabled on a TE-link by using the Application Specific Link Attributes
(ASLA) sub-TLV as per draft-ietf-isis-te-app (RFC 8919). The router receiving the link TE attributes
can identify the enabled application on the advertising router. For backward compatibility, the router
continues to support the legacy mode of advertising link TE attributes, as recommended in RFC 5305.
For information about the legacy mode of advertising link TE attributes, see Enabling advertisement of TE
attributes in legacy mode.

SR Linux supports decoding of received TLVs and maintains the details in the LSDB YANG state model.

Table 4: TE attributes advertised by legacy TLV and sub-TLVs

Name

TLV

Sub TLV

Decoding in LSDB
YANG

Admin group

Link local/remote
identifiers

IPv4 interface address

IPv4 neighbor address

22

22

22

22

Maximum link bandwidth 22

IPv6 interface address

IPv6 neighbor address

TE metric

Unidirectional link delay

Min/max unidirectional
link delay

TE IPv4 router ID

IPv4 SRLG

IPv6 SRLG

TE IPv6 router ID

22

22

22

22

22

134

138

139

140

3

4

6

8

9

12

13

18

33

34

NA

NA

NA

NA

Yes

Yes

Yes

Yes

No

Yes

Yes

Yes

Yes

Yes

Yes

Yes

Yes

Yes

The table below lists the TE attributes that are advertised using the ASLA TE TLVs.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

90

 
 
 
 
Routing Protocols Guide Release 24.7

IS-IS

Table 5: TE attributes advertised by ASLA TLV and sub-TLVs

Name

TLV

Sub TLV

Sub-Sub TLV

Decoding in LSDB
YANG

Admin group

Maximum link
bandwidth

TE metric

Min/max
unidirectional link
delay

22

22

22

22

16

16

16

16

3

9

18

34

Yes

Yes

Yes

Yes

7.8.3.1 Enabling advertisement of TE attributes in legacy mode

Procedure

SR Linux supports advertising of TE attributes using either the legacy-link-attribute-advertisement or ASLA
(application-specific link attributes) encodings, or both. For disabling the advertisement of TE attributes in
legacy mode, set the legacy-link-attribute-advertisement parameter to false.

Example

The following example configuration disables advertisement of TE attributes in legacy mode. For
enabling, set legacy-link-attribute-advertisement to true.

--{ * candidate shared default }--[  ]--
# info network-instance default protocols isis instance test traffic-engineering legacy-
link-attribute-advertisement
    network-instance default {
        protocols {
            isis {
                instance test {
                    traffic-engineering {
                        legacy-link-attribute-advertisement false
                    }
                }
            }
        }
    }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

91

 
 
 
 
Routing Protocols Guide Release 24.7

Protocol authentication

8 Protocol authentication

On the SR Linux, authentication of routing control messages for BGP, as well as other protocols such as
LDP and IS-IS, is done using shared keys.

Message authentication between two routers involves sharing knowledge of a secret key and a
cryptographic algorithm, such as MD5. This secret key, together with the message data, are used to
generate a message digest. The message digest is added to each message transmitted by the sender
and validated by the receiver, with the expectation that only a sender in possession of the secret key and
algorithm details could generate the same message digest computed by the receiver of the message.

To limit exposure in the event a key is compromised, the secret key is changed at regular intervals using
keys configured in a keychain. A keychain defines a list of one or more keys; each key is associated with a
secret string, an algorithm identifier, and a start time.

When a protocol references a keychain for securing its messages with a set of peers, it uses the active key
in the keychain with the most recent start time to generate the message digest in its sent messages, and it
drops every received message that does not have an acceptable message digest.

8.1 Configuring protocol authentication

Procedure

To configure protocol authentication, you configure an authentication keychain at the system level and
configure a protocol to use the keychain. All protocol authentication is done using keychains. If a protocol
requires authentication with a single neighbor using a single key, the key is configured within a keychain,
and the protocol references the keychain.

Example: Configure a keychain

The following example configures a keychain consisting of two keys.

--{ candidate shared default }--[  ]--
# info system authentication
    system {
        authentication {
            keychain k1 {
                key 1 {
                    admin-state enable
                    algorithm md5
                    authentication-key ZcvSElJzJx/wBZ9biCt
                }
                key 2 {
                    admin-state enable
                    algorithm md5
                    authentication-key e7xdKlYO2DOm7v3IJv
                }
            }
        }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

92

 
 
 
 
Routing Protocols Guide Release 24.7

Protocol authentication

Example: Configure BGP to use the keychain for protocol authentication

The following example configures BGP to use the keys in the keychain above for protocol
authentication:

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp authentication
    network-instance default {
        protocols {
            bgp {
                authentication {
                    keychain k1
                    }
                }
            }
        }
    }

Example: Configure BGP to use a password without a keychain for protocol
authentication

SR Linux supports configuring passwords without a keychain for authentication between BGP peers.
You must configure the authentication with the same password on both BGP peers. Otherwise, the
connection between them cannot be established .

The following example configures BGP to use a password without a keychain for protocol
authentication:

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp authentication
    network-instance default {
        protocols {
            bgp {
                authentication {
                     password $aes$0K0SDPvDqXCU=$Cny0JELb0jmt8crznXsYzQ==
                    }
                }
            }
        }
    }

The following example illustrates the authentication password configuration at group level:

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp group Dut-C--Dut-D authentication  
    network-instance default {
        protocols {
            bgp {
                group Dut-C--Dut-D {
                    authentication {
                        password $aes$9GP/wMALbt+c=$C59vOvqPux/Ue5bTRvVzfQ==
                    }
                }
            }
        }
    }

The following example illustrates the authentication password configuration at neighbor level:

--{ candidate shared default }--[  ]--

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

93

 
 
 
 
Routing Protocols Guide Release 24.7

Protocol authentication

# info network-instance default protocols bgp neighbor 3.4.0.1 authentication  
    network-instance default {
        protocols {
            bgp {
                neighbor 3.4.0.1 {
                    authentication {
                        password $aes$cJHWoYWwJVVU=$MOmvTOs2av5CGxBPdjVXuQ==
                    }
                }
            }
        }
    }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

94

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

9 Routing policies

Routing policies allow detailed control of IP routes learned and advertised by routing protocols such as
BGP, IS-IS, or OSPF.

Each routing policy has a sequence of rules (called entries or statements) and a default action. Each policy
statement has zero or more match conditions, such as whether a route is owned by a specific protocol, and
a main action, such as to accept or reject the routes; the statement may also have route-modifying actions.
A route matches a statement if it meets all of the specified match conditions.

Each statement has a specified position in the policy. If a policy has multiple statements, they are
processed in the order they are put in the policy. In addition, you can specify a default action that applies to
routes that do not match any statement in the policy.

The first statement that matches the route determines the actions that are applied to the route. If the route
is not matched by any statements, the default action of the policy is applied. If there is no default action,
then a protocol- and context-specific default action is applied.

All routes match a statement with no match conditions. When a route fulfills the match conditions of a
statement, the base action of the statement is applied, along with all of its route-modifying actions.

9.1 Routing policy match conditions

The following table summarizes the match conditions supported in SR Linux routing policies.

Table 6: Match conditions for routing policies

Match condition

protocol

Description

Test if the route is owned by a specific protocol.
The following options are supported:

• aggregate

• arp-nd

• bgp

• bgp-evpn

• bgp-ipvpn

• bgp-label

• dhcp

• host

•

•

isis

local

• ospfv2

• ospfv3

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

95

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

Match condition

family

Description

•

static

Test if the prefix is associated with any of the
AFI/SAFI (address families) listed. The following
options are supported:

•

•

•

•

•

•

ipv4-unicast

ipv6-unicast

l3vpn-ipv4-unicast

l3vpn-ipv6-unicast

ipv4-labeled-unicast

ipv6-labeled-unicast

• evpn

•

route-target

Test if the route matches any entry in a configured
prefix-set. See Prefix sets.

Test if the route contains members of a configured
tag-set. See "Configuring route internal tags" in the
SR Linux EVPN Guide.

Test if a BGP community attached to the route
matches the list of member elements and match-
set-option in the BGP community-set. See BGP
community-sets.

Test if the AS-path length of the route is a specific
value or in a range.

Test if the route has an AS path that matches the
regular expression in the configured AS-path set.
See AS path sets.

prefix-set

internal-tags.tag-set

bgp.community-set

bgp.as-path-length

bgp.as-path-set

bgp.evpn.route-type

Test if the EVPN route type is a specific type (1-5).

isis.level

isis.route-type

ospf.area-id

Test if the IS-IS route is associated with L1 or L2.

Test if the IS-IS route is internal or external
(redistributed from another protocol).

An IPv4 prefix is external if it is signaled in TLV 130
or TLV135 with RFC 7794 X flag=1.

An IPv6 prefix is external if TLV 236/TLV 237
external bit = 1.

Test if the OSPFv2 or OSPFv3 route is associated
with the specified area ID.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

96

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

Match condition

ospf.route-type

ospf.instance-id

Description

Test if the OSPFv2 or OSPFV3 route is a specific
route type: any of intra-area, inter-area, type-1-ext,
type-2-ext, type-1-nssa, type-2-nssa, summary-
aggregate, or nssa-aggregate.

Test if the OSPFv2 or OSPFv3 route is associated
with the specified instance ID.

9.1.1 Specifying match conditions in a routing policy

Procedure

You can specify the match conditions listed in Table 6: Match conditions for routing policies in a policy
statement. If a statement has no match conditions defined, all routes evaluated by the policy are
considered to be matches.

Example: Test if the route is owned by BGP

The following example specifies BGP protocol as a match condition in a policy statement:

--{ candidate shared default }--[  ]--
# info routing-policy policy policy01
    routing-policy {
        policy policy01 {
            statement 100 {
                match {
                    protocol bgp
                }
            }
        }
    }

Example: Test if the route prefix is associated with an address family

The following example matches routes with a prefix belonging to the IPv4 or IPv6 labeled unicast
address family:

--{ candidate shared default }--[  ]--
# info routing-policy policy policy02
    routing-policy {
        policy policy02 {
            statement 100 {
                match {
                    family [
                        ipv4-labeled-unicast
                        ipv6-labeled-unicast
                    ]
                }
            }
        }
    }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

97

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

Example: Test if an OSPF route is a specific route type

The following example matches OSPF type 2 external routes:

--{ candidate shared default }--[  ]--
# info routing-policy policy policy03
    routing-policy {
        policy policy03 {
            statement 100 {
                match {
                    protocol ospfv2
                    ospf {
                        route-type type-2-ext
                    }
                }
            }
        }
    }

9.2 Routing policy actions

If a route matches a policy statement, the actions configured in the policy are applied to the route, including
route property modifications. Depending on the configured action, the route may continue to be analyzed
by further routing policy statements (if any), or the final disposition (either accept or reject) of the route is
determined.

Default routing policy action

Each routing policy can optionally be configured with a default action, which is applied to routes that do
not match any policy statement. The default action specifies a main action and optionally one or more
route property modification actions. The default action is applied to all routes evaluated by the policy that
do not match any statement, or are only matched by statements that are non-terminating, such as next-
statement.

If the default action is explicitly configured as accept or reject, evaluation ends at the current policy
even if there are further policies in the chain. If a policy does not have a configured default action, or the
default action for the policy is next-policy or next-statement, then routes that do not match any
statement in the policy are automatically evaluated by the next policy in the chained list. See Specifying a
default action for a configuration example.

Main routing policy actions

The following table lists the main routing policy actions. These actions can be configured for the policy-
result for the default action or at the statement action level in a routing policy.

Table 7: Main routing policy actions

Action

accept

Description

The route is accepted, route property modifications are applied, and
evaluation stops immediately; further statements and policies are not
considered.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

98

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

Action

reject

next-statement

next-policy

Description

The route is dropped and evaluation stops immediately; further statements
and policies are not considered.

No immediate decision is made about whether to accept or reject the
route. Route policy modifications are applied, and evaluation continues
automatically to the next statement. If there are no further statements in this
policy, the default action of the current policy applies.

No immediate decision is made about whether to accept or reject the route.
Route policy modifications are applied, and evaluation skips the remainder
of the statements in the current policy continuing automatically to the first
statement in the next policy in the chained list. If there are no further policies,
then the default action of the last policy in the chain applies.

If no value is configured for policy-result then the implicit default is next-statement (if not configured at
the statement action level) or next-policy (if not configured at the default-action level).

Route property modification actions

The following table lists the route property modification actions that can be specified in a routing policy.

Table 8: Route property modification actions

Action

bgp.as-path.prepend

bgp.as-path.remove

bgp.as-path.replace

bgp.communities.add

bgp.communities.remove

bgp.communities.replace

bgp.local-preference.set

bgp.med.set

bgp.next-hop-resolution.set-tag-set

Description

Prepend a specific AS number one or more times
to the AS path.

Clear the AS path to make it empty.

Clear the existing AS path and replace it a new
AS_SEQUENCE containing the listed AS numbers.

Add all of the non-regex community members in the
referenced community-set.

Remove all of the communities that match any
regex or non-regex member in the referenced
community-set.

Delete all of the existing communities and then add
all of the non-regex community members in the
referenced community-set.

Set or modify the LOCAL_PREF to the specified
value in matching BGP routes.

Set or modify the MED to the specified value in
matching BGP routes. See Policy actions for setting
MED in BGP routes.

Reference a tag-set to be used for controlling next-
hop resolution.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

99

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

Action

bgp.next-hop.set

bgp.origin.set

internal-tags.tag-set

route-preference.set

Description

Set or modify the BGP next-hop address to a
specified IPv4 or IPv6 address or to the keyword
self.

Set or modify the BGP ORIGIN attribute value to
the specified value.

Add the tags in the tag-set as internal tags.

Overwrite the route preference with the specified
value.

9.2.1 Specifying actions in a routing policy

Procedure

You can specify the actions listed in Routing policy actions to routes that match a policy statement.

Example: Accept static routes

The following example configures a routing policy statement to accept static routes:

--{ +* candidate shared default }--[  ]--
# info routing-policy policy policy01
    routing-policy {
        policy policy01 {
            statement st1 {
                match {
                    protocol static
                }
                action {
                    policy-result accept
                }
            }
        }
    }

Example: Set origin attribute for matching BGP routes

The following example specifies a policy with two statements. If a BGP route matches the first
statement, the action is to proceed to the next statement. If the route matches the second statement,
the action is to specify a new value for the origin attribute of the BGP route.

--{ candidate shared default }--[  ]--
# info routing-policy
    routing-policy {
        policy policy02 {
            statement 100 {
                match {
                    protocol bgp
                }
                action {
                    policy-result next-statement
                }
            }
            statement 101 {

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

100

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

                match {
                    prefix-set western
                }
                action {
                    bgp {
                        origin {
                            set egp
                        }
                    }
                }
            }
        }
    }

9.2.2 Specifying a default action

Procedure

You can optionally specify the policy action for routes that do not match the conditions defined in the policy
statements. The default action can be set to all available action states including accept, reject, next-entry,
and next-policy.

•

•

If a default action is defined, and no matches occur with the statements in the policy, the default action
is used.

If no default action is specified, the default behavior of the protocol controls whether the routes match.

For BGP, the default import action is to accept all routes from BGP. For internal routes, the default
export action is to advertise them to BGP peers. For external routes, the default export action is not to
advertise them to BGP peers.

Example

The following example defines a policy where the default action for non-matching routes is to reject
them:

--{ candidate shared default }--[  ]--
# info routing-policy
    routing-policy {
        policy policy01 {
            default-action {
                policy-result reject
            }
        }
    }

9.2.3 Policy actions for setting MED in BGP routes

The following describes the supported policy actions for received BGP routes based on the contents of the
MED attribute in the route (if any).

When a BGP export policy matches a non-BGP route for advertisement to neighbors:

•

If the route is matched by an export policy statement that applies the action bgp med set route-table-
cost, then a MED attribute is added to the BGP route and its value is the route-table metric for the non-
BGP route.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

101

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

•

•

If the route is matched by an export policy statement that applies the action bgp med set <number>,
then a MED attribute is added to the BGP route and its value is <number>.

If neither case applies, no MED is added to the route.

When a BGP route is received with a MED attribute:

•

•

•

If the route is matched by an import policy statement that applies the action bgp med set route-table-
cost, then the MED attribute is replaced and the new value is the route-table metric of the route that
resolves the BGP next-hop.

If the route is matched by an import policy statement that applies the action bgp med set <number>,
then the MED attribute is replaced and the new value is <number>.

If neither case applies, the RIB-IN MED attribute is unmodified.

When a BGP route is received without a MED attribute:

•

•

•

If the route is matched by an import policy statement that applies the action bgp med set route-table-
cost, then a MED attribute is added to the BGP route and the new value is the route-table metric of the
route that resolves the BGP next-hop.

If the route is matched by an import policy statement that applies the action bgp med set <number>,
then a MED attribute is added to the BGP route and its value is <number>.

If neither case applies, no MED attribute is added to the route.

When a BGP route is received with a MED attribute from one EBGP peer, and the route must be
advertised to other EBGP peers:

•

•

•

If the route is matched by an export policy statement that applies the action bgp med set route-table-
cost, then the MED attribute is replaced and the new value is the route-table metric of the route that
resolves the BGP next-hop (0 when receiving a route from a single hop EBGP peer)

If the route is matched by an export policy statement that applies the action bgp med set <number>,
then the MED attribute is replaced and the new value is <number>.

If neither case applies, the MED is stripped.

When a BGP route is received without a MED attribute from one EBGP peer, and the route must be
advertised to other EBGP peers:

•

•

•

If the route is matched by an export policy statement that applies the action bgp med set route-table-
cost, then a MED attribute is added to the BGP route and its value is the route-table metric of the route
that resolves the BGP next-hop (0 when receiving a route from a single hop EBGP peer).

If the route is matched by an export policy statement that applies the action bgp med set <number>,
then a MED attribute is added to the BGP route and its value is <number>.

If neither case applies, no MED is added to the route.

When a BGP route is received with a MED attribute from one EBGP peer, and the route must be
advertised to IBGP peers, or else the route was received with a MED attribute from an IBGP peer for
propagation to other IBGP peers:

•

•

•

If the route is matched by an export policy statement that applies the action bgp med set route-table-
cost, then the MED attribute is replaced and the new value is the route-table metric of the route that
resolves the BGP next-hop.

If the route is matched by an export policy statement that applies the action bgp med set <number>,
then the MED attribute is replaced and the new value is <number>.

If neither case applies, the MED is unmodified.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

102

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

When a BGP route is received with a MED attribute from one EBGP/IBGP peer, and the route must be
advertised to other EBGP peers, the MED is stripped by default (if the route is not matched by a policy).

When a BGP route is received without a MED attribute from one EBGP peer, and the route must be
advertised to IBGP peers, or else the route was received without a MED attribute from an IBGP peer for
propagation to other EBGP or IBGP peers:

•

•

•

If the route is matched by an export policy statement that applies the action bgp med set route-table-
cost, then a MED attribute is added to the BGP route and its value is the route-table metric of the route
that resolves the BGP next-hop.

If the route is matched by an export policy statement that applies the action bgp med set <number>,
then a MED attribute is added to the BGP route and its value is <number>.

If neither case applies, no MED is added to the route.

9.3 Applying a routing policy

Procedure

Routing policies can be applied to routes received from other routers (imported routes), as well as routes
advertised to other routers (exported routes). Routing policies can be applied at the network-instance level,
peer-group level, and neighbor level.

Example: Apply a routing policy to imported routes

The following example specifies that BGP in the default network-instance applies policy01 to
imported routes:

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp import-policy
    network-instance default {
        protocols {
            bgp {
                import-policy [
                    policy01
                ]
            }
        }
    }

Example: Apply a routing policy to BGP routes exported from a peer-group

The following example applies policy02 to BGP routes exported from the peers in peer-group
headquarters1:

--{ candidate shared default }--[  ]--
# info network-instance default protocols bgp group headquarters1
    network-instance default {
        protocols {
            bgp {
                group headquarters1 {
                    export-policy [
                        policy02
                    ]
                }
            }
        }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

103

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

    }

Example: Apply a routing policy to BGP routes exported from a BGP neighbor

The following example applies policy02 to BGP routes exported from a specific BGP neighbor:

--{ * candidate shared default }--[  ]--
# info  network-instance default protocols bgp neighbor 192.168.11.1
    network-instance default {
        protocols {
            bgp {
                neighbor 192.168.11.1 {
                    export-policy [
                        policy02
                    ]
                }
            }
        }
    }

9.3.1 Applying a default policy to eBGP sessions

Procedure

You can specify the action to take for routes exported to or imported from eBGP peers to which no
configured policy applies. This is set with the ebgp-default-policy command and the export-reject-all and
import-reject-all parameters.

• The export-reject-all parameter, when set to true, causes all outbound routes that do not match a

configured export policy to be rejected as if they had been rejected by a configured export policy. The
default is true.

• The import-reject-all parameter, when set to true, causes all inbound routes that do not match a

configured import policy to be rejected as if they had been rejected by a configured import policy. The
default is true.

Example

The following example allows a BGP neighbor to export a default route even though the route is not
subject to any configured policy:

--{ * candidate shared default }--[  ]--
# info network-instance default
    network-instance default {
        protocols {
            bgp {
                ebgp-default-policy {
                    export-reject-all false
                }
                neighbor 2001:db8::c11 {
                    send-default-route {
                        ipv6-unicast true
                    }
                }
            }
        }
    }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

104

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

9.3.2 Replacing an AS path

Procedure

You can configure a routing policy where the AS path in matching routes is replaced by a list of AS
numbers specified in the policy. For routes that match the policy, the current AS path is deleted and
replaced with an AS_SEQ element containing the AS numbers listed in the policy in their configured
sequence.

If you configure an empty AS list in the policy, then the current AS path in a matching route is deleted, and
it would then have a null AS_PATH attribute.

Example

The following is an example of a routing policy that matches BGP routes. The action for the policy is
next-policy, so routes that match the first policy are evaluated by the second policy, whose action
is to replace the AS path in matching routes.

--{ candidate shared default }--[  ]--
# info routing-policy
    routing-policy {
        policy policy01 {
            statement 100 {
                match {
                    protocol bgp
                }
                action {
                    policy-result next-policy
                }
            }
        }
        policy policy02 {
            statement 100 {
                match {
                    prefix-set western
                }
                action {
                    bgp {
                        as-path {
                            replace [
                                12
                                13
                                14
                            ]
                        }
                    }
                }
            }
        }
    }

9.3.3 AS path sets

In a routing policy, an AS path set groups one or more AS paths using a regular expression. An AS path
regular expression is a string consisting of AS numbers and (usually) one or more regular expression
operators.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

105

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

When a route is compared to an AS path regular expression, each 4-byte AS number is extracted, one-
by-one from the AS path, starting with the most recent AS and proceeding to the oldest or originating AS,
and checked for a match against the regular expression. If there is any AS number that does not match the
pattern, then the route is considered not a match for the AS path regular expression, and therefore not a
match for the policy statement where this match condition is used.

The following table lists supported operators for an AS path regular expression.

Table 9: Operators for AS path regular expressions

Operator

Description

|

*

?

+

( )

[ ]

[^ ]

-

{m,n}

{m}

{m,}

^

$

\

<>

Matches the term on alternate sides of the pipe.

Matches multiple occurrences of the term.

Matches 0 or 1 occurrence of the term.

Matches 1 or more occurrence of the term.

Used to parenthesize so a regular expression is considered as one term.

Used to demarcate a set of elementary or range terms.

Used to demarcate a set of elementary or range terms that are explicitly not-
matching.

Used between the start and end of a range.

Matches least m and at most n repetitions of the term.

Matches exactly m repetitions of the term.

Matches m or more repetitions of the term.

Matches the beginning of the string.

Matches the end of the string.

An escape character to indicate that the following character is a match criteria and
not a grouping delimiter.

Matches any AS path numbers containing a confederation SET or SEQ.

9.3.3.1 Configuring an AS path set

Procedure

To use an AS path set in a routing policy, you configure a regular expression for the AS path set, then
specify the AS path set as a match condition in the routing policy.

Example

The following example configures an AS path set that consists of a regular expression "^100 .*"
and the AS path set is specified as a match condition in a routing policy. The policy matches routes
whose AS path matches the regular expression. An AS path set can have a maximum of one regular
expression configured. See Table 9: Operators for AS path regular expressions for a list of valid
operators.

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

106

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

In this example, a route with AS path [100 200] matches the regular expression in the AS path set,
and the action specified in the policy is applied to the route.

--{ candidate shared default }--[  ]--
# info routing-policy
    routing-policy {
        as-path-set a1 {
            expression "^100 .*"
        }
        policy p1 {
            statement s1 {
                match {
                    bgp {
                        as-path-set a1
                    }
                }
                action {
                    bgp {
                        as-path {
                            replace [
                                300
                                400
                            ]
                        }
                    }
                }
            }
        }
    }

9.3.4 BGP community-sets

You can configure a BGP community-set that can be used as a match condition in a routing policy. A BGP
community-set contains a list of member elements and a match-set-option that indicates what constitutes a
matching route.

An element in a BGP community-set can be a standard BGP community value, regular expression, or
well-known name, or else a large BGP community value or regular expression (see Table 10: Supported
community-set member formats). The match-set-option can be one of the following:

• all: a route matches the community-set if every element in the community-set is matched by a
community attached to the route. If you do not specify a match-set-option, this is the default.

• any: a route matches the community-set if there is at least one element in the community-set that is

matched by a community attached to the route.

•

invert: a route matches the community-set if none of the elements in the community-set are matched by
a community attached to the route.

Table 10: Supported community-set member formats

String format

<0-65535>:<0-65535>

<0-4294967295>:<0-4294967295>:<0-
4294967295>

Definition

Standard community matched exactly

Large community matched exactly

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

107

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

String format

<regex1>:<regex2>

<regex1>:<regex2>:<regex3>

Definition

Standard community matched by two regular
expressions

Large community matched by three regular
expressions

bgp-tunnel-encap:(MPLS|VXLAN)

BGP tunnel encapsulation extended community

color:NN:<0-4294967295>

Color extended community matched exactly

no-advertise

no-export

no-export-subconfed

Well-defined standard community 'NO-
ADVERTISE'

Well-defined standard community 'NO-EXPORT'

Well-defined standard community 'NO-EXPORT-
SUBCONFED'

no-peer

Well-defined standard community 'NO-PEER'

origin:<0-65535>:<0-4294967295>

origin:<0-4294967295>:<0-65535>

origin:<ipv4-address>:<0-65535>

origin:<regex1>:<regex2>

target:<0-65535>:<0-4294967295>

target:<0-4294967295>:<0-65535>

target:<ipv4-address>:<0-65535>

target:<regex1>:<regex2>

Type0 route-origin extended community matched
exactly

Type2 route-origin extended community matched
exactly

Type1 route-origin extended community matched
exactly

Route-origin extended community matched by two
regular expressions

type0 route-target extended community matched
exactly

Type2 route-target extended community matched
exactly

Type1 route-target extended community matched
exactly

Route-target extended community matched by two
regular expressions

9.3.4.1 Configuring a BGP community-set

Procedure

To configure a BGP community-set for a routing policy, you specify the member elements and match-set-
option, then specify the community set as a match condition in the routing policy.

Example

The following example configures a BGP community-set that consists of two member elements. The
match-set-option is invert, so a route matches this community-set if neither of the elements in the

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

108

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

community-set are matched by a community attached to the route. The community-set is specified as
a match condition in a routing policy.

--{ candidate shared default }--[  ]--
# info routing-policy
    routing-policy {
        community-set cs1 {
            match-set-options invert
            member [
                no-advertise
                no-export
            ]
        }
        policy p1 {
            statement 1 {
                match {
                    bgp {
                        community-set cs1
                    }
                }
            }
        }
    }

9.3.5 Prefix sets

In a routing policy, a prefix set groups one or more IPv4 and, or IPv6 prefix matching entries. A prefix
matching entry has two components:

• an IPv4 or IPv6 prefix, specifying an IPv4 or IPv6 address with zeroed host bits and a prefix length; for

example, 192.168.1.0/21

• a mask-length-range, specifying either exact or a range in the format <a>..<b>, where <a> is the
starting prefix length (0-32 for IPv4, 0-128 for IPv6), and <b> is the ending prefix length (0-32 for IPv4,
0-128 for IPv6)

9.3.5.1 Configuring a prefix set

Procedure

To configure a prefix set for a routing policy, you specify the member elements, then specify the prefix set
as a match condition in the routing policy.

Example

The following example configures a prefix set that consists of two member elements. The prefix set is
specified as a match condition in a routing policy.

--{ candidate shared default }--[  ]--
# info routing-policy
    routing-policy {
        prefix-set pset1 {
            prefix 192.168.10.0/21 mask-length-range 21..24 {
            }
            prefix 192.168.1.0/24 mask-length-range exact {
            }
        }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

109

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

        policy p1 {
            statement s1 {
                match {
                    prefix-set pset1
                }
                action {
                    policy-result accept
                }
            }
        }
    }

9.4 Resequencing statements in a routing policy

Procedure

Each routing policy statement has a numerical sequence identifier that determines its order relative to
other statements in that policy. When a route is analyzed by a policy, it is evaluated by each statement in
sequential order.

The definition of the sequence of statements is fully flexible and can be defined as required using the
insert command. If the insert command is not used, new statements are added to the end of the policy.

In the following examples, routing policy policy01 consists of three statements: red, green, and blue.

--{ +* candidate shared default }--[  ]--
# info routing-policy policy policy01
    routing-policy {
        policy policy01 {
            statement red {
                match {
                    protocol bgp
                }
                action {
                    policy-result accept
                }
            }
            statement green {
                match {
                    prefix-set pset1
                }
                action {
                    policy-result reject
                }
            }
            statement blue {
                match {
                    family [
                        ipv4-unicast
                        ipv6-unicast
                    ]
                }
                action {
                    policy-result next-policy
                }
            }
        }
    }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

110

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

Example: Move a statement to the end of a routing policy

The following example moves statement red to the end of the routing policy:

--{ +* candidate shared default }--[  ]--
# routing-policy policy policy01
--{ +* candidate shared default }--[ routing-policy policy policy01 ]--
# insert statement red last
--{ +* candidate shared default }--[ routing-policy policy policy01 ]--
# info
    statement green {
        match {
            prefix-set pset1
        }
        action {
            policy-result reject
        }
    }
    statement blue {
        match {
            family [
                ipv4-unicast
                ipv6-unicast
            ]
        }
        action {
            policy-result next-policy
        }
    }
    statement red {
        match {
            protocol bgp
        }
        action {
            policy-result accept
        }
    }

Example: Move a statement to the beginning of a routing policy

The following example moves statement blue to the beginning of the routing policy:

--{ +* candidate shared default }--[  ]--
# routing-policy policy policy01
--{ +* candidate shared default }--[ routing-policy policy policy01 ]--
# insert statement blue first
--{ +* candidate shared default }--[ routing-policy policy policy01 ]--
# info
    statement blue {
        match {
            family [
                ipv4-unicast
                ipv6-unicast
            ]
        }
        action {
            policy-result next-policy
        }
    }
    statement red {
        match {
            protocol bgp
        }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

111

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

        action {
            policy-result accept
        }
    }
    statement green {
        match {
            prefix-set pset1
        }
        action {
            policy-result reject
        }
    }

Example: Move a statement before an existing statement

The following example moves statement blue before statement green:

--{ +* candidate shared default }--[  ]--
# routing-policy policy policy01
--{ +* candidate shared default }--[ routing-policy policy policy01 ]--
# insert statement blue before green
--{ +* candidate shared default }--[ routing-policy policy policy01 ]--
# info
    statement red {
        match {
            protocol bgp
        }
        action {
            policy-result accept
        }
    }
    statement blue {
        match {
            family [
                ipv4-unicast
                ipv6-unicast
            ]
        }
        action {
            policy-result next-policy
        }
    }
    statement green {
        match {
            prefix-set pset1
        }
        action {
            policy-result reject
        }
    }

Example: Move a statement after an existing statement

The following example moves statement red after statement green:

--{ +* candidate shared default }--[  ]--
# routing-policy policy policy01
--{ +* candidate shared default }--[ routing-policy policy policy01 ]--
# insert statement red after green
--{ +* candidate shared default }--[ routing-policy policy policy01 ]--
# info
    statement green {
        match {

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

112

 
 
 
 
Routing Protocols Guide Release 24.7

Routing policies

            prefix-set pset1
        }
        action {
            policy-result reject
        }
    }
    statement red {
        match {
            protocol bgp
        }
        action {
            policy-result accept
        }
    }
    statement blue {
        match {
            family [
                ipv4-unicast
                ipv6-unicast
            ]
        }
        action {
            policy-result next-policy
        }
    }

3HE 20668 AAAA TQZZA

SPACER TEXT

© 2024 Nokia.

Use subject to Terms available at: www.nokia.com/terms.

113

 
 
 
 
Customer document and product support

Customer documentation
Customer documentation welcome page

Technical support
Product support portal

Documentation feedback
Customer documentation feedback

AIzaSyAgCgB0wGpU_c8tsm6fE3R8lkT_EcNFQFg

gemini api
